{"version":3,"file":"component---src-pages-direct-run-mdx-f15e3c70431139b13855.js","mappings":"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","sources":["webpack://st4sd-overview/./src/pages/direct-run.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/vassiliad/projects/st4sd/overview/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nimport { CarbonForIbmDotcom } from \"@carbon/pictograms-react\";\nimport { ArtTools_01 } from \"@carbon/pictograms-react\";\nimport { FileBackup } from \"@carbon/pictograms-react\";\nimport { Tools } from \"@carbon/pictograms-react\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst ExpressiveList = makeShortcode(\"ExpressiveList\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    {/*\n       Copyright IBM Inc. All Rights Reserved.\n      SPDX-License-Identifier: Apache-2.0\n     */}\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`The `}<inlineCode parentName=\"p\">{`elaunch.py`}</inlineCode>{` command line tool executes and monitors virtual experiments. You can use it to run experiments on your laptop or on a High Performance Computing Cluster. When you submit a virtual experiment via ST4SD API it is executed by `}<inlineCode parentName=\"p\">{`elaunch.py`}</inlineCode>{`.`}</p>\n    </PageDescription>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Running experiments with elaunch.py</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Providing the inputs to the experiment</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Checking if your experiment worked</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">What is the output of my experiment ?</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Troubleshooting</AnchorLink>\n    </AnchorLinks>\n    <h2>{`Install elaunch.py`}</h2>\n    <p>{`If you havenâ€™t already, install the `}<inlineCode parentName=\"p\">{`st4sd-runtime-core`}</inlineCode>{` python package:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`pip install \"st4sd-runtime-core[develop]>=2.5.0\"\n`}</code></pre>\n    <h2>{`Running experiments with elaunch.py`}</h2>\n    <p>{`Use elaunch.py to run virtual experiments: `}<inlineCode parentName=\"p\">{`elaunch.py <path to experiment>`}</inlineCode>{`.`}</p>\n    <p>{`Note, running experiments locally requires using either Linux or MacOS.\nWindows users should either use a Virtual Machine (e.g. `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.virtualbox.org\"\n      }}>{`VirtualBox`}</a>{` etc) or the Windows Subsystem for Linux (`}<a parentName=\"p\" {...{\n        \"href\": \"https://learn.microsoft.com/en-us/windows/wsl/install\"\n      }}>{`WSL`}</a>{`).`}</p>\n    <p>{`Some experiments, like the below example, also require you to install one of `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.docker.com/engine/install/\"\n      }}>{`docker`}</a>{`, `}<a parentName=\"p\" {...{\n        \"href\": \"https://podman.io/docs/installation\"\n      }}>{`podman`}</a>{`, or `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.rancherdesktop.io/getting-started/installation/\"\n      }}>{`Rancher Desktop`}</a>{` too.`}</p>\n    <p>{`For example, you can run the workflow `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/st4sd/nanopore-geometry-experiment\"\n      }}><inlineCode parentName=\"a\">{`nanopore-geometry-experiment`}</inlineCode></a>{` like so:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`: # Get the directory containing the virtual experiment and cd into it\ngit clone https://github.com/st4sd/nanopore-geometry-experiment.git\ncd nanopore-geometry-experiment\n\n: # Run elaunch.py specifying certain files in the directory created above\nelaunch.py -i docker-example/cif_files.dat -l 40 --nostamp\\\\\n      --applicationDependencySource=\"nanopore-database=cif:copy\" \\\\\n      nanopore-geometry-experiment.package\n`}</code></pre>\n    <p>{`The experiment should take about 5 minutes to complete. The `}<inlineCode parentName=\"p\">{`-l 40`}</inlineCode>{` option keeps the log printouts to the bare minimum so donâ€™t worry if the command is silent for a few minutes. When the experiment completes expect to see something similar to the following text on your terminal:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`completed-on=2024-03-15 14:39:29.909105\ncost=0\ncreated-on=2024-03-15 14:38:04.402969\ncurrent-stage=stage3\nexit-status=Success\nexperiment-state=finished\nstage-progress=1.0\nstage-state=finished\nstages=['stage0', 'stage1', 'stage2', 'stage3']\ntotal-progress=1.0\nupdated=2024-03-15 14:39:33.804727\nupdated-on=2024-03-15 14:39:33.804727\n`}</code></pre>\n    <InlineNotification kind=\"info\" mdxType=\"InlineNotification\">\n      <p>{`If you run the same command a second time elaunch.py will complain that the experiment instance already exists. Either remove the `}<inlineCode parentName=\"p\">{`--nostamp`}</inlineCode>{` argument or delete the directory and retry `}<inlineCode parentName=\"p\">{`elaunch.py`}</inlineCode>{`. See Section `}<a parentName=\"p\" {...{\n          \"href\": \"#what-is-the-output-of-my-experiment\"\n        }}>{`What is the output of my experiment?`}</a>{` for more information.`}</p>\n    </InlineNotification>\n    <h2>{`Providing the inputs to the experiment`}</h2>\n    <p>{`The experiment requires two types of inputs:\nthe `}<strong parentName=\"p\">{`cif_files.dat`}</strong>{` input file, which contains a list of filenames, and\nthe `}<strong parentName=\"p\">{`nanopore-database`}</strong>{` application dependency, a directory containing the files listed in `}<strong parentName=\"p\">{`cif_files.dat`}</strong>{`.`}</p>\n    <p>{`Note that application dependencies are directories located in the root of the virtual experiment instance. These directories are populated by the runtime system using the `}<inlineCode parentName=\"p\">{`--applicationDependencySource=$appDepName:/path/to/source`}</inlineCode>{` command-line argument in `}<inlineCode parentName=\"p\">{`elaunch.py`}</inlineCode>{`.`}</p>\n    <p>{`For more details, refer to the `}<a parentName=\"p\" {...{\n        \"href\": \"/overview/workflow-specification#application-dependencies\"\n      }}>{`application-dependencies documentation`}</a>{`.`}</p>\n    <h2>{`Checking if your experiment worked`}</h2>\n    <p>{`If the experiment works `}<inlineCode parentName=\"p\">{`elaunch.py`}</inlineCode>{` prints `}<inlineCode parentName=\"p\">{`exit-status=Success`}</inlineCode>{` before it terminates and then exits with return code 0. You can find more information about the status of your experiment under the file `}<inlineCode parentName=\"p\">{`\\${package_name}-\\${timestamp}.instance/output/status.txt`}</inlineCode>{`. For example, hereâ€™s a `}<inlineCode parentName=\"p\">{`status.txt`}</inlineCode>{` for a successful run of an experiment:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`completed-on=2025-03-21 13:15:19.790371\ncost=0\ncreated-on=2025-03-21 13:14:30.088069\ncurrent-stage=stage2\nexit-status=Success\nexperiment-state=finished\nstage-progress=1.0\nstage-state=finished\nstages=['stage0', 'stage1', 'stage2']\ntotal-progress=1.0\nupdated=2025-03-21 13:15:19.799143\nupdated-on=2025-03-21 13:15:19.799143\n`}</code></pre>\n    <p>{`If the experiment fails you will see the line `}<inlineCode parentName=\"p\">{`exit-status=Failed`}</inlineCode>{` in the logs of `}<inlineCode parentName=\"p\">{`elaunch.py`}</inlineCode>{` and it will exit with a return code other than `}<inlineCode parentName=\"p\">{`0`}</inlineCode>{`. If the experiment failed after the instance directory was created you will see this information in the `}<inlineCode parentName=\"p\">{`output/status.txt`}</inlineCode>{` file too. Common reasons for failures are invalid syntax, missing input files, or requesting a compute resource that is not available. For more information and dealing with these errors see our `}<a parentName=\"p\" {...{\n        \"href\": \"#troubleshooting\"\n      }}>{`Troubleshooting`}</a>{` section.`}</p>\n    <h2>{`What is the output of my experiment ?`}</h2>\n    <p>{`Looking inside the instance directory created for the experiment, we see the following:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`ls -lth nanopore-geometry-experiment.instance\ntotal 64\ndrwxrwxr-x@ 10 user  wheel   320B 21 Mar 13:15 output/\n-rw-r--r--@  1 user  wheel    28K 21 Mar 13:15 status.db\n-rw-rw-r--@  1 user  wheel   536B 21 Mar 13:14 elaunch.yaml\ndrwxr-xr-x@  5 user  wheel   160B 21 Mar 13:14 hooks/\ndrwxrwxr-x@  5 user  wheel   160B 21 Mar 13:14 stages/\ndrwxr-xr-x@  5 user  wheel   160B 21 Mar 13:14 conf/\nlrwxrwxr-x@  1 user  wheel    31B 21 Mar 13:14 python@ -> /Users/user/venvs/st4sd\ndrwxrwxr-x@  3 user  wheel    96B 21 Mar 13:14 input/\ndrwxr-xr-x@  4 user  wheel   128B 21 Mar 13:03 nanopore-database/\n`}</code></pre>\n    <p>{`In order of importance:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`output`}</strong>{`: This directory contains metadata about the key outputs of the experiment as well as the measured properties of the input systems the experiment processed. You can find more information about the contents of this directory in our detailed `}<a parentName=\"li\" {...{\n          \"href\": \"/overview/direct-run-advanced#the-output-directory\"\n        }}>{`breakdown of the output directory`}</a>{`.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`stages`}</strong>{`: This directory holds all the working directories of all the steps that were executed during this experiment instance`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`input`}</strong>{`: The input files and variable parameterisation files we provided to the `}<inlineCode parentName=\"li\">{`elaunch.py`}</inlineCode>{` command earlier`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`nanopore-database`}</strong>{`: This is an application-dependency that the experiment for reading information about the nanoporous materials it simulates`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`conf`}</strong>{`: The experiment definition`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`hooks`}</strong>{`: This contains code used to produce the interface properties. In general, it may also contain code that checks whether tasks finished successfully or not, however then `}<inlineCode parentName=\"li\">{`nanopore-geometry-experiment`}</inlineCode>{` does not use this feature.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`python`}</strong>{`: A link to the virtual environment that was used during the execution of the experiment`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`elaunch.yaml`}</strong>{`: A YAML file containing metadata about the execution of the experiment`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`status.db`}</strong>{`: A SQLITE database containing metadata about execution of the experiment`}</li>\n    </ul>\n    <h3>{`Key outputs`}</h3>\n    <p>{`All experiments produce files, but not all generated files are equally important. To this end ST4SD has the concept of key-outputs. These are files, and directories, that an experiment produces which the developers of the experiment consider important.`}</p>\n    <p>{`The file `}<inlineCode parentName=\"p\">{`$instanceDirectory/output/output.json`}</inlineCode>{` contains metadata about the key outputs of the experiment. Hereâ€™s how tha file looks like for the experiment we just ran:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{\n    \"geometricalProperties\": {\n        \"creationtime\": \"1742562196.4740903\",\n        \"description\": \"\",\n        \"filename\": \"geometry.tgz\",\n        \"filepath\": \"stages/stage2/AggregateGeometry/geometry.tgz\",\n        \"final\": \"yes\",\n        \"production\": \"yes\",\n        \"type\": \"\",\n        \"version\": \"1\"\n    }\n}\n`}</code></pre>\n    <p>{`The experiment generates a single key output, `}<strong parentName=\"p\">{`geometricalProperties`}</strong>{`, which is a tar file named `}<inlineCode parentName=\"p\">{`geometry.tgz`}</inlineCode>{`. This file is created by the `}<inlineCode parentName=\"p\">{`stage2.AggregateGeometry`}</inlineCode>{` step.`}</p>\n    <h3>{`Measured properties`}</h3>\n    <p>{`Key outputs are not always immediately parseable without deep understanding of their format. To address this, ST4SD supports the `}<strong parentName=\"p\">{`interface`}</strong>{` feature. This feature allows workflow developers to extract measured properties and store them in a CSV file, making the data easier to consume.`}</p>\n    <p>{`Experiments that implement an `}<inlineCode parentName=\"p\">{`interface`}</inlineCode>{` will produce a file under `}<inlineCode parentName=\"p\">{`\\${instance-directory}/output/properties.csv`}</inlineCode>{`. Here is the file that the `}<inlineCode parentName=\"p\">{`nanopore-geometry-experiment`}</inlineCode>{` produced above:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`input-id;d_is;d_fs;d_isfs;asa_m^2/cm^3;asa_m^2/g;nasa_m^2/cm^3;nasa_m^2/g;unitcell_volume;density;av_volume_fraction;av_cm^3/g;nav_volume_fraction;nav_cm^3/g;n_pockets\nCoRE2019/GUJVOX_clean;3.98106;2.74095;3.93078;0.0;0.0;760.654;564.703;1164.59;1.347;0.0;0.0;0.016015;0.0118894;1.0\n`}</code></pre>\n    <p>{`The CSV file will always contain the `}<inlineCode parentName=\"p\">{`input-id`}</inlineCode>{` column. Its values are the identifiers of the input system ids for which the virtual experiment measured properties. The remaining columns contain the measured properties for the input systems.`}</p>\n    <h2>{`Troubleshooting`}</h2>\n    <h3>{`Unable to create instance directory at specified location Error`}</h3>\n    <p>{`If you run the same command a second time elaunch.py will complain that the experiment instance already exists:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`completed-on=N/A\ncost=0\ncreated-on=N/A\ncurrent-stage=None\nerror-description=ExperimentSetupError Error encountered while setting up experiment.\\\\\\\\nPackage validation failed - cannot deploy\\\\\\\\nUnderlying error: Unable to create instance directory at specified location.\\\\\\\\nUnderlying error: [Errno 17] File exists: '/private/tmp/test/nanopore-geometry-experiment/nanopore-geometry-experiment/nanopore-geometry-experiment/nanopore-geometry-experiment.instance'\nexit-status=Failed\nexperiment-state=failed\nstage-progress=0\nstage-state=Initialising\nstages=[]\ntotal-progress=0\nupdated=2025-03-21 13:25:21.950382\nupdated-on=2025-03-21 13:25:21.950382\n`}</code></pre>\n    <p>{`To fix this problem, either remove the `}<inlineCode parentName=\"p\">{`--nostamp`}</inlineCode>{` argument or delete the directory and retry `}<inlineCode parentName=\"p\">{`elaunch.py`}</inlineCode>{`.`}</p>\n    <h3>{`Investigating a Failed experiment`}</h3>\n    <p>{`If the `}<inlineCode parentName=\"p\">{`exit-status`}</inlineCode>{` of your experiment instance is `}<inlineCode parentName=\"p\">{`Failed`}</inlineCode>{` then this means that at least one of your components was unable to terminate successfully. You can find the name of the component that caused the experiment to fail in the `}<inlineCode parentName=\"p\">{`status`}</inlineCode>{` file and printout.`}</p>\n    <p>{`Here is an example:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`completed-on=2024-05-23 09:44:03.757679\ncost=0\ncreated-on=2024-05-23 09:42:19.223491\ncurrent-stage=stage1\nerror-description=Stage 1 failed. Reason:\\\\\\\\\\\\\\\\n3 jobs failed unexpectedly.\\\\\\\\\\\\\\\\nJob: stage1.PartialSum0. Returncode 1. Reason KnownIssue\\\\\\\\\\\\\\\\nJob: stage1.PartialSum2. Returncode 1. Reason KnownIssue\\\\\\\\\\\\\\\\nJob: stage1.PartialSum1. Returncode 1. Reason KnownIssue\\\\\\\\\\\\\\\\n\nexit-status=Failed\nexperiment-state=finished\nstage-progress=0.5\nstage-state=failed\nstages=['stage0', 'stage1', 'stage2', 'stage3']\ntotal-progress=0.875\nupdated=2024-05-23 09:44:08.793316\nupdated-on=2024-05-23 09:44:08.793316\n`}</code></pre>\n    <p>{`The error reports that multiple components failed: `}<inlineCode parentName=\"p\">{`stage1.PartialSum0`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`stage1.PartialSum1`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`stage1.PartialSum2`}</inlineCode>{`.`}</p>\n    <p>{`You may also get a full view of the state of the experiment by using the `}<inlineCode parentName=\"p\">{`einspect.py -f all`}</inlineCode>{` tool.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`========== STAGE 0 ==========\n\nComponents using engine-type: engine\nreference, state, backend, isWaitingOnOutput, engineExitReason, lastTaskRunTime, lastTaskRunState\nstage0.GenerateInput, finished, local, True, Success, 0:00:00.358677, finished\n\n========== STAGE 1 ==========\n\nComponents using engine-type: engine\nreference, state, backend, isWaitingOnOutput, engineExitReason, lastTaskRunTime, lastTaskRunState\nstage1.ExtractRow0, finished, local, True, Success, 0:01:00.246955, finished\nstage1.ExtractRow1, finished, local, True, Success, 0:01:00.209115, finished\nstage1.ExtractRow2, finished, local, True, Success, 0:01:00.226946, finished\nstage1.PartialSum0, failed, local, True, KnownIssue, 0:00:00.323739, failed\nstage1.PartialSum1, failed, local, True, KnownIssue, 0:00:00.336899, failed\nstage1.PartialSum2, failed, local, True, KnownIssue, 0:00:00.360914, failed\n\n========== STAGE 2 ==========\n\nComponents using engine-type: engine\nreference, state, backend, isWaitingOnOutput, engineExitReason, lastTaskRunTime, lastTaskRunState\nstage2.Sum, component_shutdown, local, False, Killed, N/A, N/A\n\n========== STAGE 3 ==========\n\nComponents using engine-type: engine\nreference, state, backend, isWaitingOnOutput, engineExitReason, lastTaskRunTime, lastTaskRunState\nstage3.Cat, finished, local, True, Success, 0:00:00.011466, finished\n`}</code></pre>\n    <p>{`After you spot a `}<inlineCode parentName=\"p\">{`Failed`}</inlineCode>{` component, try looking at the files it produced, including its stdout and stderr (for some backends both streams get fed into stdout). Recall that you can find these files under `}<inlineCode parentName=\"p\">{`$INSTANCE_DIR/stages/stage<stage index>/<component name>/`}</inlineCode>{`. Look for the `}<inlineCode parentName=\"p\">{`out.stdout`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`out.stderr`}</inlineCode>{` files.`}</p>\n    <p>{`Sometimes, a component fails because one of its predecessors (direct, or indirect) produced unexpected output. To find the predecessors of a component, look at the `}<inlineCode parentName=\"p\">{`$INSTANCE_DIR/conf/flowir_instance.yaml`}</inlineCode>{`, locate the component you are investigating and then follow its predecessors by looking at the `}<inlineCode parentName=\"p\">{`references`}</inlineCode>{` of the component. You can then investigate the output files and stdout/stderr of those components to see if you can spot why the downstream component failed.`}</p>\n    <h2>{`The experiment outputs`}</h2>\n    <h2>{`Learn more`}</h2>\n    <div className=\"expressive-content-list-group\">\n      <ExpressiveList title=\"Write experiments\" background=\"true\" pictogram={<FileBackup mdxType=\"FileBackup\" />} mdxType=\"ExpressiveList\">\n        <p>{`Get an introduction to `}<a parentName=\"p\" {...{\n            \"href\": \"/overview/write-experiments\"\n          }}>{`writing virtual experiment`}</a>{` with ST4SD Core.`}</p>\n  </ExpressiveList>\n      <ExpressiveList title=\"Advanced usage of elaunch.py\" background=\"true\" pictogram={<Tools mdxType=\"Tools\" />} mdxType=\"ExpressiveList\">\n        <p>{`This example only scratches the surface of how you can use elaunch.py. See `}<a parentName=\"p\" {...{\n            \"href\": \"/overview/direct-run-advanced\"\n          }}>{`elaunch.py for advanced users`}</a>{` for more information about using `}<inlineCode parentName=\"p\">{`elaunch.py`}</inlineCode>{` including running on High Performance Computing clusters.`}</p>\n  </ExpressiveList>\n  <ExpressiveList title=\"Exploring the Registry UI\" background=\"true\" pictogram={<CarbonForIbmDotcom mdxType=\"CarbonForIbmDotcom\" />} mdxType=\"ExpressiveList\">\n        <p>{`Learn about all the features of\n`}<a parentName=\"p\" {...{\n            \"href\": \"/overview/using-the-virtual-experiments-registry-ui\"\n          }}>{`our web interface`}</a>{` for browsing and\nexamining virtual experiments packages and runs. You can visit the\n`}<a parentName=\"p\" {...{\n            \"href\": \"https://registry.st4sd.res.ibm.com/\"\n          }}>{`ST4SD Global Registry`}</a>{` for a first look.`}</p>\n  </ExpressiveList>\n  <ExpressiveList title=\"No Code, No Fuss creation of Experiments\" background=\"true\" pictogram={<ArtTools_01 mdxType=\"ArtTools_01\" />} mdxType=\"ExpressiveList\">\n        <p>{`Use\n`}<a parentName=\"p\" {...{\n            \"href\": \"/overview/build-canvas\"\n          }}>{`an interactive Build Canvas and a Graph Library`}</a>{`\nto create and modify experiments straight from your browser.`}</p>\n  </ExpressiveList>\n    </div>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","mdx","PageDescription","AnchorLinks","AnchorLink","InlineNotification","ExpressiveList","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","Object","assign","mdxType","parentName","kind","className","title","background","pictogram","FileBackup","Tools","CarbonForIbmDotcom","ArtTools_01","isMDXComponent"],"sourceRoot":""}