{"version":3,"file":"component---src-pages-tutorial-mdx-66eeaea0b29d8722732d.js","mappings":"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","sources":["webpack://st4sd-overview/./src/pages/tutorial.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/travis/build/st4sd/overview/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    {/*\n       Copyright IBM Inc. All Rights Reserved.\n      SPDX-License-Identifier: Apache-2.0\n     */}\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`This page will teach you how to write a workflow via a toy-example.`}</p>\n    </PageDescription>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Introduction to FlowIR</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">The sum-numbers workflow</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Providing inputs to workflows</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Key-Outputs</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Executing sum-numbers</AnchorLink>\n    </AnchorLinks>\n    <p>{`Our toy-example calculates the sum of a set of integers. It can be found `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/st4sd/sum-numbers/\"\n      }}>{`here`}</a>{` or cloned via:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`git clone https://github.com/st4sd/sum-numbers.git\n`}</code></pre>\n    <p>{`Before we dive into the `}<inlineCode parentName=\"p\">{`sum-numbers`}</inlineCode>{` example, first we give brief introduction to key-concepts of the language used to specify workflows in ST4SD, FlowIR. `}</p>\n    <h2>{`Introduction to FlowIR`}</h2>\n    <p>{`We term the internal workflow specification language of ST4SD, `}<inlineCode parentName=\"p\">{`FlowIR`}</inlineCode>{`. FlowIR is a feature rich workflow definition language for describing the computational graph of a virtual experiment.`}</p>\n    <p>{`More detailed information on FlowIR elements can be found in `}<a parentName=\"p\" {...{\n        \"href\": \"/overview/workflow-specification\"\n      }}>{`workflow specification`}</a>{` which also references the `}<inlineCode parentName=\"p\">{`sum-numbers`}</inlineCode>{` workflow for illustration purposes.`}</p>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p>{`In order to illustrate a wide-range of FlowIR features the sum-numbers example is slightly complex. The `}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/st4sd/sum-numbers/blob/main/hello_world.md\"\n        }}>{`hello world file`}</a>{` in the same repository contains a simpler `}<inlineCode parentName=\"p\">{`hello world`}</inlineCode>{` workflow.`}</p>\n    </InlineNotification>\n    <h3>{`Components`}</h3>\n    <p>{`In `}<inlineCode parentName=\"p\">{`FlowIR`}</inlineCode>{` a workflow consists of components. These are the steps in the workflow or the nodes/vertices in the workflow graph. A workflow may also define  `}<a parentName=\"p\" {...{\n        \"href\": \"/overview/workflow-specification/#key-outputs\"\n      }}>{`key-outputs`}</a>{`, and `}<a parentName=\"p\" {...{\n        \"href\": \"/overview/writing-a-virtual-experiment-interface\"\n      }}>{`an interface`}</a>{`.  An interface allows easy retrieval of the properties measured by an instance of a workflow (virtual experiment).`}</p>\n    <p>{`Each component is associated with a program or script and its command line arguments. A components inputs are files or directories. These come from other components in the workflow; or are provided by the user running the workflow; or are configuration files present in the workflow by default. Components produce their output under their working directory.`}</p>\n    <p>{`A component defines its inputs using a `}<inlineCode parentName=\"p\">{`FlowIR`}</inlineCode>{` object called a `}<inlineCode parentName=\"p\">{`DataReference`}</inlineCode>{`. The set of `}<inlineCode parentName=\"p\">{`DataReferences`}</inlineCode>{` between components in a workflow defines the edges of the workflow graph. `}</p>\n    <h4>{`An example component`}</h4>\n    <p>{`Lets look at how the first component in the `}<inlineCode parentName=\"p\">{`sum-numbers`}</inlineCode>{` workflow, `}<strong parentName=\"p\">{`GenerateInput`}</strong>{`, is defined`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`- stage: 0\n  name: GenerateInput\n  command:\n    executable: \"bin/generate_input_file.py\"\n    arguments: \"%(numberOfPoints)s  %(my_random_seed)s\"\n`}</code></pre>\n    <h3>{`Stages`}</h3>\n    <p>{`In FlowIR, components can be optionally grouped into stages by the value of their `}<inlineCode parentName=\"p\">{`stage`}</inlineCode>{` key. For the above component you can see it is `}<inlineCode parentName=\"p\">{`stage: 0`}</inlineCode>{`.`}</p>\n    <p>{`Components which do not specify a `}<inlineCode parentName=\"p\">{`stage`}</inlineCode>{` are automatically grouped under `}<inlineCode parentName=\"p\">{`stage`}</inlineCode>{` 0. In the interest of keeping this grouping simple we currently only support `}<inlineCode parentName=\"p\">{`integers`}</inlineCode>{` as stage identifiers. Components in the same stage must have different names. The `}<inlineCode parentName=\"p\">{`st4sd-runtime`}</inlineCode>{` also raises an error if a stage contains no components.`}</p>\n    <InlineNotification mdxType=\"InlineNotification\">\nStages are a logical grouping. They do not define the execution order of components. A component is ready to execute once its input dependencies are satisfied. \n    </InlineNotification>\n    <h3>{`Component Identifier`}</h3>\n    <p>{`The`}<inlineCode parentName=\"p\">{`identifier`}</inlineCode>{` of a component is a string built out of the `}<inlineCode parentName=\"p\">{`stage`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`name`}</inlineCode>{` fields of the component like so: `}<inlineCode parentName=\"p\">{`stage{stage index}.{component name}`}</inlineCode>{`.`}</p>\n    <p>{`The identifier of our simple example component would be `}<inlineCode parentName=\"p\">{`stage0.GenerateInput`}</inlineCode></p>\n    <h3>{`DataReference`}</h3>\n    <p>{`A`}<inlineCode parentName=\"p\">{`DataReference`}</inlineCode>{` points to`}</p>\n    <ul>\n      <li parentName=\"ul\">{`data that exists before the workflow starts e.g. user provided inputs and configuration files`}</li>\n      <li parentName=\"ul\">{`data that are generated  by a component in the workflow`}</li>\n    </ul>\n    <p>{`The format of a `}<inlineCode parentName=\"p\">{`DataReference`}</inlineCode>{` is`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{` <producer reference>[/<file reference>]:<type>\n`}</code></pre>\n    <p>{`There are 3 parts: `}<inlineCode parentName=\"p\">{`producer reference`}</inlineCode>{`, an optional `}<inlineCode parentName=\"p\">{`file reference`}</inlineCode>{`, and finally `}<inlineCode parentName=\"p\">{`type`}</inlineCode></p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`producer reference`}</inlineCode>{` can be either:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`A  full component identifier (e.g. `}<inlineCode parentName=\"li\">{`stage1.PartialSum`}</inlineCode>{`).`}</li>\n      <li parentName=\"ol\">{`A relative component identifier (e.g. `}<inlineCode parentName=\"li\">{`ExtractRow`}</inlineCode>{`). Relative component references assume that the addressed component is in the same stage as the referrer component.`}</li>\n      <li parentName=\"ol\">{`An absolute path.`}</li>\n      <li parentName=\"ol\">{`A  path relative to the top-level directory of the workflow instance directory e.g. `}<inlineCode parentName=\"li\">{`bin`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`data`}</inlineCode>{`, and `}<inlineCode parentName=\"li\">{`input`}</inlineCode>{`.`}</li>\n    </ol>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p>{`You define the directories that will be present in a workflow instance as part of writing the workflow - see `}<a parentName=\"p\" {...{\n          \"href\": \"/overview/packaging-workflows\"\n        }}>{`project types`}</a>{`.`}</p>\n    </InlineNotification>\n    <p>{`The `}<inlineCode parentName=\"p\">{`file reference`}</inlineCode>{`  is an optional relative path to a folder or file that’s hosted under the producer i.e. in a directory or produced by a component. If this part of the `}<inlineCode parentName=\"p\">{`DataReference`}</inlineCode>{` is omitted the `}<inlineCode parentName=\"p\">{`st4sd-runtime-core`}</inlineCode>{` treats the  `}<inlineCode parentName=\"p\">{`DataReference`}</inlineCode>{` as a pointing to the directory of the producer.`}</p>\n    <p>{`The third part of a `}<inlineCode parentName=\"p\">{`DataReference`}</inlineCode>{` is its `}<inlineCode parentName=\"p\">{`method`}</inlineCode>{`. This controls what the `}<inlineCode parentName=\"p\">{`st4sd-runtime`}</inlineCode>{` will do with the reference. See `}<a parentName=\"p\" {...{\n        \"href\": \"/overview/workflow-specification#datareference\"\n      }}>{`here`}</a>{` for more information.`}</p>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p><inlineCode parentName=\"p\">{`st4sd-runtime`}</inlineCode>{` guarantees that at runtime a `}<inlineCode parentName=\"p\">{`DataReference`}</inlineCode>{` will point to the desired component data. However the exact location of that data can be determined by the runtime. This allows you to write a workflow that consumes data from other components without have to be concerned about how that data is stored. `}</p>\n    </InlineNotification>\n    <h4>{`DataReferences and Dependencies`}</h4>\n    <p><inlineCode parentName=\"p\">{`DataReferences`}</inlineCode>{`indicate the dependencies between components as well as dependencies of components to the filesystem. `}</p>\n    <p>{`A component will not start executing until either:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`The producers of its `}<inlineCode parentName=\"li\">{`DataReferences`}</inlineCode>{` have finished (sequential processing mode)`}</li>\n      <li parentName=\"ol\">{`The producers of its `}<inlineCode parentName=\"li\">{`DataReferences`}</inlineCode>{` have started (co-processing mode). `}</li>\n    </ol>\n    <p>{`The mode is defined by the component. `}</p>\n    <h4>{`Example`}</h4>\n    <p>{`Let’s look at an example `}<inlineCode parentName=\"p\">{`DataReference`}</inlineCode>{` and decompose it`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`stage0.GenerateInput/output.csv:ref\n`}</code></pre>\n    <p>{`This `}<inlineCode parentName=\"p\">{`DataReference`}</inlineCode>{` points to the `}<inlineCode parentName=\"p\">{`output.csv`}</inlineCode>{` file (`}<inlineCode parentName=\"p\">{`/output.csv`}</inlineCode>{`) that the `}<inlineCode parentName=\"p\">{`stage0.GenerateInput`}</inlineCode>{` (producer identifier) component produces. The method is `}<inlineCode parentName=\"p\">{`ref`}</inlineCode>{` which means the `}<inlineCode parentName=\"p\">{`st4sd-runtime`}</inlineCode>{` will expand the `}<inlineCode parentName=\"p\">{`DataReference`}</inlineCode>{` to an absolute path to the referenced file. `}</p>\n    <p>{`See the `}<inlineCode parentName=\"p\">{`references`}</inlineCode>{` section in the `}<a parentName=\"p\" {...{\n        \"href\": \"/overview/workflow-specification#description-of-basic-flowir-component-fields\"\n      }}>{`description of basic FlowIR component fields section`}</a>{`.`}</p>\n    <h2>{`The sum-numbers workflow`}</h2>\n    <p>{`The workflow is defined in `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/st4sd/sum-numbers/blob/main/conf/flowir_package.yaml\"\n      }}>{`conf/flowir_package.yaml`}</a>{` in the `}<inlineCode parentName=\"p\">{`sum-numbers`}</inlineCode>{` repository. In this toy workflow there are four components.`}</p>\n    <ol>\n      <li parentName=\"ol\"><strong parentName=\"li\">{`GenerateInput`}</strong>{`: The first step a single task generates a file with `}<inlineCode parentName=\"li\">{`N`}</inlineCode>{`  lines each with 10 space separated numbers.`}</li>\n      <li parentName=\"ol\"><strong parentName=\"li\">{`ExtractRow`}</strong>{`: In the next step `}<inlineCode parentName=\"li\">{`N`}</inlineCode>{` tasks read this file in parallel and print 1 of the lines (from 1 to `}<inlineCode parentName=\"li\">{`N`}</inlineCode>{`).`}</li>\n      <li parentName=\"ol\"><strong parentName=\"li\">{`PartialSum`}</strong>{`: In this step for each of the above tasks, another task reads their output, sums the numbers and print the result (`}<inlineCode parentName=\"li\">{`N`}</inlineCode>{` tasks total)`}</li>\n      <li parentName=\"ol\"><strong parentName=\"li\">{`Sum`}</strong>{`: A final task aggregates all the partial sums, and prints the total sum.`}</li>\n    </ol>\n    <p>{`The following sections show how to:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Write simple components in FlowIR.`}</li>\n      <li parentName=\"ol\">{`Group components in stages and use `}<inlineCode parentName=\"li\">{`DataReferences`}</inlineCode>{` to define component input dependencies.`}</li>\n      <li parentName=\"ol\">{`Specify inputs to workflows.`}</li>\n    </ol>\n    <h3>{`Project structure`}</h3>\n    <p>{`The ST4SD runtime supports two ways of structuring  workflow projects, `}<inlineCode parentName=\"p\">{`standard projects`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`standalone projects`}</inlineCode>{` - see `}<a parentName=\"p\" {...{\n        \"href\": \"/overview/packaging-workflows\"\n      }}>{`project types`}</a>{`. `}</p>\n    <p><inlineCode parentName=\"p\">{`sum-numbers`}</inlineCode>{` uses the `}<inlineCode parentName=\"p\">{`standalone project`}</inlineCode>{`  approach. In this project type, the workflow definition is stored under the `}<inlineCode parentName=\"p\">{`conf/flowir_package.yaml`}</inlineCode>{` file inside the root directory of the workflow project structure.`}</p>\n    <p>{`FlowIR supports defining a workflow package using multiple files by means of importing sub-workflow documents. However, for simplicity we omit this information from this toy example.`}</p>\n    <h3>{`Examining the `}<inlineCode parentName=\"h3\">{`sum-numbers`}</inlineCode>{` components`}</h3>\n    <p>{` Component definitions are grouped under the top-level `}<inlineCode parentName=\"p\">{`components`}</inlineCode>{` field of the `}<inlineCode parentName=\"p\">{`flowir_package.yaml`}</inlineCode>{` file. The order of component definitions does define the execution order of the components - this is defined by the edges of the graph i.e. the `}<inlineCode parentName=\"p\">{`DataReferences`}</inlineCode>{` between the components.`}</p>\n    <p>{`In the snippet below we show the definition of 3 components, `}<inlineCode parentName=\"p\">{`stage1.ExtractRow`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`stage1.PartialSum`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`stage2.Sum`}</inlineCode>{` from the `}<inlineCode parentName=\"p\">{`sum-numbers`}</inlineCode>{` example`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# ... omitted ...\ncomponents:\n# ... omitted ...\n- stage: 1\n  name: ExtractRow\n  command:\n    executable: \"bin/extract_row.py\"\n    arguments: \"stage0.GenerateInput/output.csv:ref %(replica)s\"\n  references:\n    - \"stage0.GenerateInput/output.csv:ref\"\n  workflowAttributes:\n    replicate: \"%(numberOfPoints)s\"\n\n- stage: 1\n  name: PartialSum\n  command:\n    executable: \"bin/sum.py\"\n    # Eliding the stage<integer> prefix defaults to the stage of the referencing\n    # component (PartialSum). Since ExtractRow is in the same stage with PartialSum:\n    arguments: \"ExtractRow:output\"\n  references:\n  - \"ExtractRow:output\"\n\n- stage: 2\n  name: Sum\n  command:\n    executable: \"bin/sum.py\"\n    arguments: \"stage1.PartialSum:output %(addToSum)s\"\n  references:\n    - \"stage1.PartialSum:output\"\n  workflowAttributes:\n    aggregate: True\n# ... omitted ...\n`}</code></pre>\n    <p>{`Let’s focus on `}<inlineCode parentName=\"p\">{`stage1.ExtractRow`}</inlineCode>{` first. Its `}<inlineCode parentName=\"p\">{`command`}</inlineCode>{` field specifies the executable and arguments. The executable is a relative path (`}<inlineCode parentName=\"p\">{`bin/extract_row.py`}</inlineCode>{`) as it does not start with a `}<inlineCode parentName=\"p\">{`/`}</inlineCode>{` character. The `}<inlineCode parentName=\"p\">{`st4sd-runtime`}</inlineCode>{` interprets this to look for the `}<inlineCode parentName=\"p\">{`extract_row.py`}</inlineCode>{` executable under the `}<inlineCode parentName=\"p\">{`bin`}</inlineCode>{` folder of the workflow package definition. If the executable was an absolute path, or did not contain any `}<inlineCode parentName=\"p\">{`/`}</inlineCode>{` characters it’d be resolved using the `}<inlineCode parentName=\"p\">{`$PATH`}</inlineCode>{` environment variable of the `}<inlineCode parentName=\"p\">{`ExtractRow`}</inlineCode>{` component. See `}<a parentName=\"p\" {...{\n        \"href\": \"/overview/workflow-specification#environments\"\n      }}>{`environments`}</a>{` for information on defining and using environment variables.`}</p>\n    <p>{`The arguments string of `}<inlineCode parentName=\"p\">{`stage1.ExtractRow`}</inlineCode>{` are `}<inlineCode parentName=\"p\">{`stage0.GenerateInput/output.csv:ref %(replica)s`}</inlineCode>{`. It consists of a `}<inlineCode parentName=\"p\">{`DataReference`}</inlineCode>{` (`}<inlineCode parentName=\"p\">{`stage0.GenerateInput/output.csv:ref`}</inlineCode>{`) and a variable reference (`}<inlineCode parentName=\"p\">{`%(replica)s`}</inlineCode>{`). The `}<inlineCode parentName=\"p\">{`DataReference`}</inlineCode>{` will resolve to the absolute path of the file `}<inlineCode parentName=\"p\">{`output.csv`}</inlineCode>{` which is produced by the `}<inlineCode parentName=\"p\">{`GenerateInput`}</inlineCode>{` component in stage `}<inlineCode parentName=\"p\">{`0`}</inlineCode>{`.`}</p>\n    <p>{`Notice that the `}<inlineCode parentName=\"p\">{`DataReference`}</inlineCode>{` is also part of the `}<inlineCode parentName=\"p\">{`references`}</inlineCode>{` array. All component references must be written in this array, otherwise the `}<inlineCode parentName=\"p\">{`st4sd-runtime`}</inlineCode>{` raises an invalid workflow package exception. This is primarily for error-checking. We also support more `}<inlineCode parentName=\"p\">{`DataReference`}</inlineCode>{` methods which cannot be a part of the `}<inlineCode parentName=\"p\">{`command.arguments`}</inlineCode>{` field. See the `}<inlineCode parentName=\"p\">{`references`}</inlineCode>{` section in the `}<a parentName=\"p\" {...{\n        \"href\": \"/overview/workflow-specification#description-of-basic-flowir-component-fields\"\n      }}>{`description of basic FlowIR component fields section`}</a>{`.`}</p>\n    <p>{`The variable reference `}<inlineCode parentName=\"p\">{`%(replica)s`}</inlineCode>{` instructs the `}<inlineCode parentName=\"p\">{`st4sd-runtime`}</inlineCode>{` to replace the reference with the value of the variable. See the `}<a parentName=\"p\" {...{\n        \"href\": \"/overview/workflow-specification#variables\"\n      }}>{`variables section`}</a>{` more information about variables, and variable scope. In this particular instance, the `}<inlineCode parentName=\"p\">{`replica`}</inlineCode>{` variable is a special one. It is automatically generated by the `}<inlineCode parentName=\"p\">{`st4sd-runtime`}</inlineCode>{` for components which contain the `}<inlineCode parentName=\"p\">{`workflowAttributes.replicate`}</inlineCode>{` field. In this instance, the `}<inlineCode parentName=\"p\">{`st4sd-runtime`}</inlineCode>{` will generate `}<inlineCode parentName=\"p\">{`numberOfPoints`}</inlineCode>{` replicas of the `}<inlineCode parentName=\"p\">{`ExtractRow`}</inlineCode>{` component. Each of these replicas will have a `}<inlineCode parentName=\"p\">{`replica`}</inlineCode>{` variable with one value out of the integer range `}<inlineCode parentName=\"p\">{`[0, numberOfPoints)`}</inlineCode>{` (in this particular example the value range is `}<inlineCode parentName=\"p\">{`[0, 1, 2]`}</inlineCode>{`).`}</p>\n    <p>{`Next up is the `}<inlineCode parentName=\"p\">{`PartialSum`}</inlineCode>{` component. Notice its arguments `}<inlineCode parentName=\"p\">{`ExtractRow:output`}</inlineCode>{`. This is a DataReference with a relative-component-reference, so the `}<inlineCode parentName=\"p\">{`st4sd-runtime`}</inlineCode>{` understands that this is a reference to `}<inlineCode parentName=\"p\">{`stage1.ExtractRow`}</inlineCode>{`. However, recall that `}<inlineCode parentName=\"p\">{`stage1.ExtractRow`}</inlineCode>{` component is a replicated component. How does the `}<inlineCode parentName=\"p\">{`st4sd-runttime`}</inlineCode>{` pick, which of those components to reference here?`}</p>\n    <p>{`Because the `}<inlineCode parentName=\"p\">{`stage1.PartialSum`}</inlineCode>{` component does not contain a `}<inlineCode parentName=\"p\">{`workflowAttributes.aggregate`}</inlineCode>{` option, the `}<inlineCode parentName=\"p\">{`st4sd-runtime`}</inlineCode>{` will also replicate `}<inlineCode parentName=\"p\">{`PartialSum`}</inlineCode>{` the same number of times as its upstream replicated component (i.e. `}<inlineCode parentName=\"p\">{`stage1.ExtractRow`}</inlineCode>{`). It will then resolve the reference of replica `}<inlineCode parentName=\"p\">{`X`}</inlineCode>{` of `}<inlineCode parentName=\"p\">{`stage1.PartialSum`}</inlineCode>{` to the replica `}<inlineCode parentName=\"p\">{`X`}</inlineCode>{` of `}<inlineCode parentName=\"p\">{`stage1.ExtractRow`}</inlineCode>{`.`}</p>\n    <p>{`Component `}<inlineCode parentName=\"p\">{`stage2.Sum`}</inlineCode>{` is an example of an `}<inlineCode parentName=\"p\">{`aggregating`}</inlineCode>{` component. Aggregated components do not get replicated by the `}<inlineCode parentName=\"p\">{`st4sd-runtime`}</inlineCode>{`, they act as a sentinel node in the computational graph which stops the replication propagation.`}</p>\n    <p>{`The arguments of this component are `}<inlineCode parentName=\"p\">{`stage1.PartialSum:output %(addToSum)s`}</inlineCode>{`. The `}<inlineCode parentName=\"p\">{`st4sd-runtime`}</inlineCode>{` will first replace the `}<inlineCode parentName=\"p\">{`stage1.PartialSum:output`}</inlineCode>{` DataReference to multiple space separated DataReferences. One for each replica like so:`}<inlineCode parentName=\"p\">{`stage1.PartialSum0:output stage1.PartialSum1:output stage1.PartialSum2:output`}</inlineCode>{`. Right before the execution of the component, these DataRereferences to replicas will be expanded to the stdout contents of each of the 3 components.`}</p>\n    <h2>{`Providing inputs to workflows`}</h2>\n    <p>{`ST4SD workflows support 3 flavours of inputs:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Input files - files user must provide when they execute the workflow`}</li>\n      <li parentName=\"ol\">{`Data files - configuration files that optionally can be overridden`}</li>\n      <li parentName=\"ol\">{`User variables - user provided values for workflow variables`}</li>\n    </ol>\n    <h3>{`Input Files`}</h3>\n    <p>{`Input files are the files you require a user to provide. You define them implicitly whenever you have a data-reference to a file in a top-level folder called `}<inlineCode parentName=\"p\">{`input/`}</inlineCode>{` i.e.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`input/<filename>:<DataReference type>\n`}</code></pre>\n    <p>{`You don’t include input files in a workflow project.\nAs a result for each data-reference to a file in `}<inlineCode parentName=\"p\">{`input/`}</inlineCode>{` you have in your worklfow configuration, the user `}<em parentName=\"p\">{`must`}</em>{` provide a matching input file when they launch the workflow.\nFor example if directly running the workflow they would use the `}<inlineCode parentName=\"p\">{`-i`}</inlineCode>{` option to `}<inlineCode parentName=\"p\">{`elaunch.py`}</inlineCode>{`.`}</p>\n    <p>{`When the workflow execution starts, `}<inlineCode parentName=\"p\">{`st4sd-runtime-core`}</inlineCode>{` creates the `}<inlineCode parentName=\"p\">{`input/`}</inlineCode>{` directory in the top-level of the workflow instance directory and copies the files the user provided for the inputs into this folder.\nIn this way the input files are where components expect them to be at runtime.`}</p>\n    <p><inlineCode parentName=\"p\">{`st4sd-runtime-core`}</inlineCode>{` will check all required input files are present before starting the workflow and stop, raising an error, if they are not.`}</p>\n    <h3>{`Data files`}</h3>\n    <p>{`Data files are configuration files users can optionally override.\nYou define them implicitly whenever you have a data-reference to file in a top-level folder called `}<inlineCode parentName=\"p\">{`data/`}</inlineCode>{` i.e.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`data/<filename>:<DataReference type>\n`}</code></pre>\n    <p>{`You must provide defaults for these files.\nIf you are using a `}<a parentName=\"p\" {...{\n        \"href\": \"/overview/packaging-workflows#standard-project\"\n      }}>{`standard project structure`}</a>{` you do this by placing all the data files in a directory and then using a manifest to specify that this directory should be used as the data directory.\nFor example, if you put all the data files in a directory called `}<inlineCode parentName=\"p\">{`shared_data`}</inlineCode>{` your manifest would look like: `}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`data: ../shared_data\n`}</code></pre>\n    <p>{`If you are are using a `}<a parentName=\"p\" {...{\n        \"href\": \"/overview/packaging-workflows#standalone-project\"\n      }}>{`standalone project structure`}</a>{` then the data-files are placed in the `}<inlineCode parentName=\"p\">{`data`}</inlineCode>{` folder of your project.`}</p>\n    <p>{`In the sum-numbers example the `}<inlineCode parentName=\"p\">{`stage3.Cat`}</inlineCode>{` component references one such data file:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`# ... omitted ...\ncomponents:\n# ... omitted ...\n- stage: 3\n  name: Cat\n  command:\n    executable: \"cat\"\n    arguments: \"cat_me.txt\"\n  references:\n    - \"data/cat_me.txt:copy\"\n# ... omitted ...\n`}</code></pre>\n    <p>{`In this example the `}<inlineCode parentName=\"p\">{`st4sd-runtime`}</inlineCode>{` will copy the file `}<inlineCode parentName=\"p\">{`$INSTANCE_DIR/data/cat_me.txt`}</inlineCode>{` into the working directory of the `}<inlineCode parentName=\"p\">{`stage3.Cat`}</inlineCode>{` file right before the component executes. `}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`st4sd-runtime`}</inlineCode>{` supports replacing files under the `}<inlineCode parentName=\"p\">{`data`}</inlineCode>{` folder via the `}<inlineCode parentName=\"p\">{`-d`}</inlineCode>{` option of `}<inlineCode parentName=\"p\">{`elaunch.py`}</inlineCode>{`. Keep in mind that the argument to `}<inlineCode parentName=\"p\">{`-d`}</inlineCode>{` must be the absolute, or relative, path to a file whose name matches one of the files under the `}<inlineCode parentName=\"p\">{`data`}</inlineCode>{` folder. If there’s no `}<inlineCode parentName=\"p\">{`-d`}</inlineCode>{` option to override a `}<inlineCode parentName=\"p\">{`data`}</inlineCode>{` file, the `}<inlineCode parentName=\"p\">{`st4sd-runtime`}</inlineCode>{` will use the one provided by the workflow package to fulfil the DataReferences to it.`}</p>\n    <h3>{`Variables`}</h3>\n    <p>{`Finally, the `}<inlineCode parentName=\"p\">{`st4sd-runtime`}</inlineCode>{` supports providing a file containing user defined variables via the `}<inlineCode parentName=\"p\">{`-a`}</inlineCode>{` commandline argument to the `}<inlineCode parentName=\"p\">{`elaunch.py`}</inlineCode>{` script. User variables overwrite global and stage variables but not variables defined by components. The schema of the file is:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`global: # dictionary of variables which are visible to all components\n  name: some-primitive-value(str, float, int)\nstages:\n  stageIndex(integer): # dictionary of variables visible to components in stageIndex\n    name: some-primitive-value(str, float, int)\n`}</code></pre>\n    <p>{`User variables can be used to overwrite the behaviour of components (e.g. arguments or even FlowIR configuration fields). Here is an example user-variables file for this workflow which changes the number of replicas from 3 to just 1:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`global:\n  numberOfPoints: 1\n`}</code></pre>\n    <p>{`Currently, we expect that user variables are stored in a file with the extension `}<inlineCode parentName=\"p\">{`.yaml`}</inlineCode>{` OR `}<inlineCode parentName=\"p\">{`.yml`}</inlineCode>{`. The `}<a parentName=\"p\" {...{\n        \"href\": \"/overview/workflow-specification#variables\"\n      }}>{`variables section`}</a>{` contains more information about variables and variable scopes.`}</p>\n    <h2>{`Key-Outputs`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"/overview/workflow-specification#key-outputs\"\n      }}>{`Key-Outputs`}</a>{` are named `}<inlineCode parentName=\"p\">{`DataReferences`}</inlineCode>{` that point to important paths which the virtual experiment produced.`}</p>\n    <p>{`In sum-numbers there is only 1 key-output with the name `}<inlineCode parentName=\"p\">{`TotalSum`}</inlineCode>{`. It points to a file `}<inlineCode parentName=\"p\">{`out.stdout`}</inlineCode>{` that the `}<inlineCode parentName=\"p\">{`stage2.Sum`}</inlineCode>{` component produces.\nThis file contains the sum of all the numbers that this toy virtual experiment calculates.DataReferences`}</p>\n    <p>{`This is the relevant FlowIR snippet from sum-numbers:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`output:\n  TotalSum:\n    data-in: \"stage2.Sum/out.stdout:copy\"\n`}</code></pre>\n    <h2>{`Executing `}<inlineCode parentName=\"h2\">{`sum-numbers`}</inlineCode></h2>\n    <p>{`This section assumes that you’ve already installed `}<a parentName=\"p\" {...{\n        \"href\": \"/overview/installation#set-up-local-client\"\n      }}>{`st4sd-runtime-core`}</a>{` locally and cloned `}<inlineCode parentName=\"p\">{`sum-numbers`}</inlineCode>{`. If you’ve installed `}<inlineCode parentName=\"p\">{`st4sd-runtime-core`}</inlineCode>{` in a virtual environment take a moment to load it before continuing.`}</p>\n    <p>{`To execute this workflow use `}<inlineCode parentName=\"p\">{`elaunch.py`}</inlineCode>{` (the script should take a couple of minutes to complete).`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`elaunch.py sum-numbers\n`}</code></pre>\n    <p>{`An `}<inlineCode parentName=\"p\">{`instance directory`}</inlineCode>{` will be created in the directory you execute `}<inlineCode parentName=\"p\">{`elaunch.py`}</inlineCode>{`.  The instance directory will have the name `}<inlineCode parentName=\"p\">{`sum-numbers-<TIMESTAMP>.instance`}</inlineCode>{` (in the example below: `}<inlineCode parentName=\"p\">{`sum-numbers-2021-03-01T094529.183587`}</inlineCode>{`).`}</p>\n    <p>{`Each `}<inlineCode parentName=\"p\">{`sum-numbers`}</inlineCode>{` workflow component has its own working directory under the instance directory called: `}<inlineCode parentName=\"p\">{`$INSTANCE_DIR/stages/stage<stage_index:%d>/<component_name>/`}</inlineCode>{`.`}</p>\n    <p>{` `}<inlineCode parentName=\"p\">{`elaunch.py`}</inlineCode>{` will output text that is similar to the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ elaunch.py sum-numbers\nUnable to import pythonlsf - limited LSF functionality will be available\nINFO      MainThread                     root                          : point_logger_to_random_file 2021-03-01 09:45:29,125: Experiment log at /tmp/tmpso2ajxxe\nINFO      MainThread                     root                          : <module>             2021-03-01 09:45:29,126: Using modules in /home/username/projects/st4sd-runtime/python/experiment\nINFO      MainThread                     root                          : CreateHaltClosure    2021-03-01 09:45:29,126: Creating halt closure monitoring /home/shared/CHPCBackend/.halt_backend for pid 888\nINFO      MainThread                     root                          : CreateHaltClosure    2021-03-01 09:45:29,126: Creating halt closure monitoring /home/shared/CHPCBackend/.kill_backend for pid 888\nINFO      MainThread                     root                          : <module>             2021-03-01 09:45:29,126: Deploying Experiment at SumNumbers.package/ \nINFO      MainThread                     FlowIRConf                    : __init__             2021-03-01 09:45:29,127: Load FLOWIR, the default platform is default\nINFO      MainThread                     flowir                        : apply_replicate      2021-03-01 09:45:29,151: Replicate job stage1.ExtractRow (3) (replicated refs: [])\nINFO      MainThread                     flowir                        : apply_replicate      2021-03-01 09:45:29,151: Replicate job stage1.PartialSum (3) (replicated refs: ['ExtractRow:output'])\nINFO      MainThread                     flowir                        : apply_replicate      2021-03-01 09:45:29,152: Aggregate job stage2.Sum\nINFO      MainThread                     root                          : ValidatePackage      2021-03-01 09:45:29,183: <experiment.conf.FlowIRExperimentConfiguration object at 0x7fc55fe10eb0>\nWARNING   MainThread                     root                          : ValidatePackage      2021-03-01 09:45:29,183: TESTING EXPERIMENT FROM PACKAGE\nINFO      MainThread                     FlowIRConf                    : __init__             2021-03-01 09:45:29,229: Load FLOWIR, the default platform is default\nINFO      MainThread                     data.experiment               : experimentFromPackage 2021-03-01 09:45:29,258: Detected use of virtual env - will link in python bin directory\nINFO      MainThread                     data.experiment               : experimentFromPackage 2021-03-01 09:45:29,259: Created python link /home/username/projects/packages/SumNumbers-2021-03-01T094529.183587.instance/python to /home/username/anaconda2/envs/flow3.8\nWARNING   MainThread                     data.experiment               : __init__             2021-03-01 09:45:29,259: Explicitly instructed to load a package\nINFO      MainThread                     FlowIRConf                    : __init__             2021-03-01 09:45:29,259: Load FLOWIR, the default platform is default\nINFO      MainThread                     flowir                        : apply_replicate      2021-03-01 09:45:29,317: Replicate job stage1.ExtractRow (3) (replicated refs: [])\nINFO      MainThread                     flowir                        : apply_replicate      2021-03-01 09:45:29,318: Replicate job stage1.PartialSum (3) (replicated refs: ['ExtractRow:output'])\nINFO      MainThread                     flowir                        : apply_replicate      2021-03-01 09:45:29,318: Aggregate job stage2.Sum\nINFO      MainThread                     root                          : ValidatePackage      2021-03-01 09:45:29,355: Created experiment: There are 4 stages. Current stage 0\nINFO      MainThread                     root                          : point_logger_to_logfile 2021-03-01 09:45:29,355: Experiment log at /home/username/projects/packages/SumNumbers-2021-03-01T094529.183587.instance/output/experiment.log\nWARNING   MainThread                     executors.localchecker        : _findExecutablePath  2021-03-01 09:45:29,370: Found pathless executable (cat) - checking if resolvable in command environment\nINFO      MainThread                     executors.localchecker        : _findExecutablePath  2021-03-01 09:45:29,378: Found executable in command environment - using /usr/bin/cat\nDEBUG     MainThread                     output.outputmonitor          : checkDataReferences  2021-03-01 09:45:29,387: Monitoring /home/username/projects/packages/SumNumbers-2021-03-01T094529.183587.instance/stages/stage2/Sum/out.stdout\nINFO      MainThread                     root                          : <module>             2021-03-01 09:45:29,391: Status after deployment:\nINFO      MainThread                     control.controller            : parse_workflow_graph 2021-03-01 09:45:29,417: Updating WorkflowGraph\nINFO      MainThread                     root                          : <module>             2021-03-01 09:45:29,417: Starting Experiment\nINFO      StatusMonitor                  output.statusmonitor          : CheckStatus          2021-03-01 09:45:29,435: No stage running\nINFO      MainThread                     root                          : Run                  2021-03-01 09:45:29,435: Running Stage 0 (stage0) with 1 jobs. Data located at SumNumbers-2021-03-01T094529.183587.instance/stages/stage0\nINFO      MainThread                     control.controller            : initialise           2021-03-01 09:45:29,436: Initial dependency analysis:<Component(s) report>\n  stage0.GenerateInput[pending] inputs: []\n  stage1.ExtractRow1[pending] inputs: [stage0.GenerateInput]\n  stage1.PartialSum1[pending] inputs: [stage1.ExtractRow1]\n  stage1.ExtractRow2[pending] inputs: [stage0.GenerateInput]\n  stage1.PartialSum2[pending] inputs: [stage1.ExtractRow2]\n  stage1.ExtractRow0[pending] inputs: [stage0.GenerateInput]\n  stage1.PartialSum0[pending] inputs: [stage1.ExtractRow0]\n  stage2.Sum[pending] inputs: [stage1.PartialSum0, stage1.PartialSum1, stage1.PartialSum2]\n  stage3.Cat[pending] inputs: []\n<\\\\Component(s) report, (*) indicates Subject->Observer dependency, P: a placeholder, C: the latest condition of a DoWhile>\nINFO      MainThread                     output.outputmonitor          : run                  2021-03-01 09:45:29,437: No output to monitor in stage 0\nINFO      MainThread                     control.controller            : run                  2021-03-01 09:45:29,437: Report for stage 0\n<Component(s) report>\n  stage0.GenerateInput[pending] inputs: []\n<\\\\Component(s) report, (*) indicates Subject->Observer dependency, P: a placeholder, C: the latest condition of a DoWhile>\nINFO      MainThread                     control.controller            : WaitOnStability      2021-03-01 09:45:29,438: System appears stable - no new exceptions in last 30 secs\nWARNING   MainThread                     control.controller            : WaitOnStability      2021-03-01 09:45:29,439: Waited 0 seconds (max 120)\nINFO      MainThread                     control.controller            : finalize_submit_components 2021-03-01 09:45:29,439: <Check for promotions>\nREADY stage3.Cat in stage 0\nREADY stage0.GenerateInput in stage 0\n<\\\\Check for promotions>\n...\nINFO      MainThread                     control.controller            : run                  2021-03-01 09:45:39,513: Stage 0 complete. Total components 1\nINFO_MED  MainThread                     output.outputmonitor          : kill                 2021-03-01 09:45:39,514: Received kill\nINFO_MED  MainThread                     output.outputmonitor          : kill                 2021-03-01 09:45:39,514: Setting cancel copy event: <threading.Event object at 0x7fc55c4adb80>\nINFO      MainThread                     root                          : Run                  2021-03-01 09:45:39,515: Stage 0 complete\nINFO      MainThread                     root                          : Run                  2021-03-01 09:45:39,516: Running Stage 1 (stage1) with 6 jobs. Data located at SumNumbers-2021-03-01T094529.183587.instance/stages/stage1\nINFO      MainThread                     control.controller            : initialise           2021-03-01 09:45:39,526: Initial dependency analysis:<Component(s) report>\n  stage0.GenerateInput[finished] inputs: []\n  stage1.ExtractRow1[pending] inputs: []\n  stage1.PartialSum1[pending] inputs: [stage1.ExtractRow1]\n  stage1.ExtractRow2[pending] inputs: []\n  stage1.PartialSum2[pending] inputs: [stage1.ExtractRow2]\n  stage1.ExtractRow0[pending] inputs: []\n  stage1.PartialSum0[pending] inputs: [stage1.ExtractRow0]\n  stage2.Sum[pending] inputs: [stage1.PartialSum0, stage1.PartialSum1, stage1.PartialSum2]\n  stage3.Cat[finished] inputs: []\n<\\\\Component(s) report, (*) indicates Subject->Observer dependency, P: a placeholder, C: the latest condition of a DoWhile>\nINFO      MainThread                     output.outputmonitor          : run                  2021-03-01 09:45:39,527: No output to monitor in stage 1\nINFO      MainThread                     control.controller            : run                  2021-03-01 09:45:39,532: Report for stage 1\n<Component(s) report>\n  stage1.PartialSum2[pending] inputs: [stage1.ExtractRow2]\n  stage1.ExtractRow0[pending] inputs: []\n  stage1.ExtractRow2[pending] inputs: []\n  stage1.PartialSum0[pending] inputs: [stage1.ExtractRow0]\n  stage1.PartialSum1[pending] inputs: [stage1.ExtractRow1]\n  stage1.ExtractRow1[pending] inputs: []\n<\\\\Component(s) report, (*) indicates Subject->Observer dependency, P: a placeholder, C: the latest condition of a DoWhile>\nINFO      MainThread                     control.controller            : WaitOnStability      2021-03-01 09:45:39,544: System appears stable - no new exceptions in last 30 secs\nWARNING   MainThread                     control.controller            : WaitOnStability      2021-03-01 09:45:39,545: Waited 0 seconds (max 120)\nINFO      MainThread                     control.controller            : finalize_submit_components 2021-03-01 09:45:39,547: <Check for promotions>\nREADY stage1.ExtractRow0 in stage 1\nREADY stage1.ExtractRow2 in stage 1\nREADY stage1.ExtractRow1 in stage 1\n<\\\\Check for promotions>\nINFO      MainThread                     control.controller            : finalize_submit_components 2021-03-01 09:45:39,547: Staging in component stage1.ExtractRow0\nINFO      MainThread                     control.controller            : finalize_submit_components 2021-03-01 09:45:39,566: Staging in component stage1.ExtractRow2\nINFO      MainThread                     control.controller            : finalize_submit_components 2021-03-01 09:45:39,574: Staging in component stage1.ExtractRow1\nINFO      MainThread                     control.controller            : finalize_submit_components 2021-03-01 09:45:39,586: Submitting component stage1.ExtractRow0\nINFO      MainThread                     control.controller            : finalize_submit_components 2021-03-01 09:45:39,588: Submitting component stage1.ExtractRow2\nINFO      MainThread                     control.controller            : finalize_submit_components 2021-03-01 09:45:39,590: Submitting component stage1.ExtractRow1\n...\nINFO      StatusMonitor                  output.statusmonitor          : CheckStatus          2021-03-01 09:46:09,811: <Component(s) report>\n  stage0.GenerateInput[finished] inputs: []\n  stage1.ExtractRow1[finished] inputs: []\n  stage1.PartialSum1[finished] inputs: []\n  stage1.ExtractRow2[finished] inputs: []\n  stage1.PartialSum2[finished] inputs: []\n  stage1.ExtractRow0[finished] inputs: []\n  stage1.PartialSum0[finished] inputs: []\n  stage2.Sum[finished] inputs: []\n  stage3.Cat[finished] inputs: []\n<\\\\Component(s) report, (*) indicates Subject->Observer dependency, P: a placeholder, C: the latest condition of a DoWhile>\nINFO      MainThread                     root                          : <module>             2021-03-01 09:46:09,811:  Thread-4\nINFO      StatusMonitor                  output.statusmonitor          : CheckStatus          2021-03-01 09:46:09,811: Status of stage3: 1.0000 1.0000 finished (active-stages: {3:1.00})\n...\nINFO      MainThread                     root                          : <module>             2021-03-01 09:46:44,868: Clean-up - Final status was\ncost=0\ncurrent-stage=stage3\nexit-status=Success\nexperiment-state=finished\nstage-progress=1.0\nstage-state=finished\nstages=['stage0', 'stage1', 'stage2', 'stage3']\ntotal-progress=1.0\nupdated=2021-03-01 09:46:44.866733\n...\nINFO      MainThread                     root                          : <module>             2021-03-01 09:46:44,877: Experiment complete\nINFO      ThreadPoolExecutor-13_0        db.status                     : _closeConnection     2021-03-01 09:46:44,885: Connection closed\n`}</code></pre>\n    <p>{`If you switch to the `}<inlineCode parentName=\"p\">{`$INSTANCE_DIR/stages`}</inlineCode>{` directory and run `}<inlineCode parentName=\"p\">{`ls -lR`}</inlineCode>{` you should see the below structure:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$ ls -lR\n.:\ntotal 16\ndrwxrwxr-x. 3 username username 4096 Mar  1 09:45 stage0\ndrwxrwxr-x. 8 username username 4096 Mar  1 09:45 stage1\ndrwxrwxr-x. 3 username username 4096 Mar  1 09:45 stage2\ndrwxrwxr-x. 3 username username 4096 Mar  1 09:45 stage3\n\n./stage0:\ntotal 4\ndrwxrwxr-x. 2 username username 4096 Mar  1 09:45 GenerateInput\n\n./stage0/GenerateInput:\ntotal 12\n-rw-rw-r--. 1 username username 309 Mar  1 09:45 component_performance.csv\n-rw-rw-r--. 1 username username  13 Mar  1 09:45 output.csv\n-rw-rw-r--. 1 username username   0 Mar  1 09:45 out.stderr\n-rw-rw-r--. 1 username username  17 Mar  1 09:45 out.stdout\n\n./stage1:\ntotal 24\ndrwxrwxr-x. 2 username username 4096 Mar  1 09:45 ExtractRow0\ndrwxrwxr-x. 2 username username 4096 Mar  1 09:45 ExtractRow1\ndrwxrwxr-x. 2 username username 4096 Mar  1 09:45 ExtractRow2\ndrwxrwxr-x. 2 username username 4096 Mar  1 09:45 PartialSum0\ndrwxrwxr-x. 2 username username 4096 Mar  1 09:45 PartialSum1\ndrwxrwxr-x. 2 username username 4096 Mar  1 09:45 PartialSum2\n\n./stage1/ExtractRow0:\ntotal 8\n-rw-rw-r--. 1 username username 309 Mar  1 09:45 component_performance.csv\n-rw-rw-r--. 1 username username   0 Mar  1 09:45 out.stderr\n-rw-rw-r--. 1 username username   4 Mar  1 09:45 out.stdout\n\n./stage1/ExtractRow1:\ntotal 8\n-rw-rw-r--. 1 username username 308 Mar  1 09:45 component_performance.csv\n-rw-rw-r--. 1 username username   0 Mar  1 09:45 out.stderr\n-rw-rw-r--. 1 username username   4 Mar  1 09:45 out.stdout\n\n./stage1/ExtractRow2:\ntotal 8\n-rw-rw-r--. 1 username username 308 Mar  1 09:45 component_performance.csv\n-rw-rw-r--. 1 username username   0 Mar  1 09:45 out.stderr\n-rw-rw-r--. 1 username username   5 Mar  1 09:45 out.stdout\n\n./stage1/PartialSum0:\ntotal 8\n-rw-rw-r--. 1 username username 309 Mar  1 09:45 component_performance.csv\n-rw-rw-r--. 1 username username   0 Mar  1 09:45 out.stderr\n-rw-rw-r--. 1 username username   2 Mar  1 09:45 out.stdout\n\n./stage1/PartialSum1:\ntotal 8\n-rw-rw-r--. 1 username username 309 Mar  1 09:45 component_performance.csv\n-rw-rw-r--. 1 username username   0 Mar  1 09:45 out.stderr\n-rw-rw-r--. 1 username username   3 Mar  1 09:45 out.stdout\n\n./stage1/PartialSum2:\ntotal 8\n-rw-rw-r--. 1 username username 309 Mar  1 09:45 component_performance.csv\n-rw-rw-r--. 1 username username   0 Mar  1 09:45 out.stderr\n-rw-rw-r--. 1 username username   3 Mar  1 09:45 out.stdout\n\n./stage2:\ntotal 4\ndrwxrwxr-x. 2 username username 4096 Mar  1 09:46 Sum\n\n./stage2/Sum:\ntotal 8\n-rw-rw-r--. 1 username username 309 Mar  1 09:46 component_performance.csv\n-rw-rw-r--. 1 username username   0 Mar  1 09:46 out.stderr\n-rw-rw-r--. 1 username username   3 Mar  1 09:46 out.stdout\n\n./stage3:\ntotal 4\ndrwxrwxr-x. 2 username username 4096 Mar  1 09:45 Cat\n\n./stage3/Cat:\ntotal 12\n-rw-rw-r--. 1 username username  34 Mar  1 09:45 cat_me.txt\n-rw-rw-r--. 1 username username 309 Mar  1 09:45 component_performance.csv\n-rw-rw-r--. 1 username username   0 Mar  1 09:45 out.stderr\n-rw-rw-r--. 1 username username  34 Mar  1 09:45 out.stdout\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","mdx","PageDescription","AnchorLinks","AnchorLink","InlineNotification","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","Object","assign","mdxType","parentName","isMDXComponent"],"sourceRoot":""}