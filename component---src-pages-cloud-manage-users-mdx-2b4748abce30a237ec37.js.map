{"version":3,"file":"component---src-pages-cloud-manage-users-mdx-2b4748abce30a237ec37.js","mappings":"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","sources":["webpack://st4sd-overview/./src/pages/cloud-manage-users.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/travis/build/st4sd/overview/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    {/*\n       Copyright IBM Inc. All Rights Reserved.\n      SPDX-License-Identifier: Apache-2.0\n     */}\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`Manage the access rights of users in your ST4SD deployment on OpenShift.`}</p>\n    </PageDescription>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Give a group of users full access to the ST4SD namespace</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Give a group of users access to just the ST4SD microservices</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Role objects that ST4SD creates in its namespace</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Enable a namespace administrator to install ST4SD in a namespace</AnchorLink>\n    </AnchorLinks>\n    <p>{`We recommend grouping your users based on their intended access level to your ST4SD deployment and then using a RoleBinding to configure the Role Based Access Control (RBAC) settings of the Group object.`}</p>\n    <h2>{`Give a group of users full access to the ST4SD namespace`}</h2>\n    <p>{`For example, if you wish to configure the RBAC of the users `}<inlineCode parentName=\"p\">{`A`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`B`}</inlineCode>{` so that they have full access to the ST4SD microservices and the objects in the same namespace. Put the following in a file called `}<inlineCode parentName=\"p\">{`group-full-access.yaml`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`kind: Group\napiVersion: user.openshift.io/v1\nmetadata:\n  name: st4sd-full-access-my-namespace\nusers:\n  - Account name of user A\n  - Account name of user B\n`}</code></pre>\n    <p>{`Then create the following file `}<inlineCode parentName=\"p\">{`rolebinding-full-access.yaml`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`kind: RoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: st4sd-full-access\n\n  # modify this field if your namespace has a different name\n  namespace: st4sd-full-access-my-namespace\n\nsubjects:\n  - kind: Group\n    apiGroup: rbac.authorization.k8s.io\n\n    # modify this field if your namespace has a different name\n    name: st4sd-full-access-my-namespace\n\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: workflow-user\n`}</code></pre>\n    <p>{`Now, make sure that you:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`have replaced `}<inlineCode parentName=\"li\">{`my-namespace`}</inlineCode>{` in the 2 files with the namespace that you deployed ST4SD in.`}</li>\n      <li parentName=\"ol\">{`have written down the correct account name of your users.`}\n        <ol parentName=\"li\">\n          <li parentName=\"ol\">{`Login to your OpenShift Web Console as an Administrator.`}</li>\n          <li parentName=\"ol\">{`On the left pane expand the `}<inlineCode parentName=\"li\">{`User Management`}</inlineCode>{` menu`}</li>\n          <li parentName=\"ol\">{`Click on the `}<inlineCode parentName=\"li\">{`Users`}</inlineCode>{` entry`}</li>\n          <li parentName=\"ol\">{`Locate the users `}<inlineCode parentName=\"li\">{`A`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`B`}</inlineCode>{` in the list and copy the values that you find for them under the `}<inlineCode parentName=\"li\">{`Name`}</inlineCode>{` column`}</li>\n        </ol>\n      </li>\n    </ol>\n    <p>{`Run `}<inlineCode parentName=\"p\">{`oc create -f group-full-access.yaml && oc create -f rolebinding-full-access.yaml`}</inlineCode>{`. The users `}<inlineCode parentName=\"p\">{`A`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`B`}</inlineCode>{` may now access your ST4SD instance.`}</p>\n    <h2>{`Give a group of users access to just the ST4SD microservices`}</h2>\n    <p>{`You may want to enable two users `}<inlineCode parentName=\"p\">{`A`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`B`}</inlineCode>{` to use the ST4SD microservices in the namespace `}<inlineCode parentName=\"p\">{`my-namespace`}</inlineCode>{` but be unable to interact with OpenShift in any meaningful way. In this case, put the following in a file called `}<inlineCode parentName=\"p\">{`microservices-only.yaml`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`kind: Group\napiVersion: user.openshift.io/v1\nmetadata:\n\n  # modify this field if your namespace has a different name\n  name: st4sd-microservices-only-my-namespace\n\nusers:\n  - Account name of user A\n  - Account name of user B\n`}</code></pre>\n    <p>{`Then create the following file `}<inlineCode parentName=\"p\">{`rolebinding-microservices-only.yaml`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`kind: RoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: st4sd-microservices-only\n\n  # modify this field if your namespace has a different name\n  namespace:  my-namespace\n\nsubjects:\n  - kind: Group\n    apiGroup: rbac.authorization.k8s.io\n\n    # modify this field if your namespace has a different name\n    name: st4sd-microservices-only-my-namespace\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: st4sd-authenticate-microservices\n`}</code></pre>\n    <p>{`Now, make sure that you:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`have replaced `}<inlineCode parentName=\"li\">{`my-namespace`}</inlineCode>{` in the 2 files with the namespace that you deployed ST4SD in.`}</li>\n      <li parentName=\"ol\">{`have written down the correct account name of your users.`}\n        <ol parentName=\"li\">\n          <li parentName=\"ol\">{`Login to your OpenShift Web Console as an Administrator.`}</li>\n          <li parentName=\"ol\">{`On the left pane expand the `}<inlineCode parentName=\"li\">{`User Management`}</inlineCode>{` menu`}</li>\n          <li parentName=\"ol\">{`Click on the `}<inlineCode parentName=\"li\">{`Users`}</inlineCode>{` entry`}</li>\n          <li parentName=\"ol\">{`Locate the users `}<inlineCode parentName=\"li\">{`A`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`B`}</inlineCode>{` in the list and copy the values that you find for them under the `}<inlineCode parentName=\"li\">{`Name`}</inlineCode>{` column`}</li>\n        </ol>\n      </li>\n    </ol>\n    <p>{`Run `}<inlineCode parentName=\"p\">{`oc create -f microservices-only.yaml && oc create -f rolebinding-microservices-only.yaml`}</inlineCode>{`. The users `}<inlineCode parentName=\"p\">{`A`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`B`}</inlineCode>{` may now access your ST4SD instance.`}</p>\n    <h2>{`Role objects that ST4SD creates in its namespace`}</h2>\n    <p>{`Deployments of ST4SD on OpenShift contain:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Several ST4SD Microservices (st4sd-runtime-service, st4sd-registry-ui, st4sd-datastore)`}</li>\n      <li parentName=\"ul\">{`The ST4SD Workflow Operator (st4sd-runtime-k8s)`}</li>\n      <li parentName=\"ul\">{`A Database backend (mongodb)`}</li>\n    </ul>\n    <p>{`As a cluster administrator, you can install ST4SD multiple times on your cluster. Each ST4SD deployment is contained to a single namespace. Users of one ST4DS deployment do not necessarily have access to other deployments. The cluster administrator, configures the Role Based Access Control (RBAC) of users to configure which user can access which ST4SD instance.`}</p>\n    <p>{`Installing ST4D in a namespace creates the following 2 Role objects in the same namespace:`}</p>\n    <ol>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`st4sd-authenticate-microservices`}</inlineCode>{`: Assigning this role to a user enables them to `}<inlineCode parentName=\"li\">{`get`}</inlineCode>{` Service objects in the same namespace as ST4SD. This is the minimum RBAC that a user requires to be able to authenticate to the ST4SD microservices. However, they do not get enough permissions to interact directly with the ST4SD Workflow Operator or other namespaced objects in the same OpenShift project.`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`workflow-user`}</inlineCode>{`: Assigning this role to a user enables them to authenticate against the ST4SD microservices. Additionally, it gives them Create Read Update Delete (CRUD) permissions to interact with namespaced objects in the same namespace. This includes the namespaced objects that the ST4SD workflow operator interacts with.`}</li>\n    </ol>\n    <InlineNotification kind=\"info\" mdxType=\"InlineNotification\">\nThe 2 roles above do not enable users to modify the \"simulationtoolkit\" CustomResource objects that st4sd-olm monitors to control the deployment of the ST4SD instance in the namespace.\n      <p>{`Follow the instructions below to configure the Role Based Access Control for the “simulationtoolkit” objects.`}</p>\n    </InlineNotification>\n    <h2>{`Enable a namespace administrator to install ST4SD in a namespace`}</h2>\n    <p>{`We recommend that you appoint some of the users/administrators of the cluster to be administrator of namespaces that you deploy ST4SD in.`}</p>\n    <p>{`You may then assign a Kubernetes Role which enables just the administrators of a namespace to create/modify a ST4SD deployment.`}</p>\n    <p>{`For example, if your namespace is called `}<inlineCode parentName=\"p\">{`my-namespace`}</inlineCode>{` create the following file: `}<inlineCode parentName=\"p\">{`admin-role.yaml`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: authorization.openshift.io/v1\nkind: Role\nmetadata:\n  name: st4sd-olm-permissions\n\n  # modify this field if your namespace has a different name\n  namespace: my-namespace\n\n  labels:\n    deploy.st4sd.ibm.com/component: st4sd-olm-permissions\nrules:\n- apiGroups:\n  - deploy.st4sd.ibm.com\n  resources:\n  - simulationtoolkits\n  verbs:\n  - create\n  - delete\n  - get\n  - list\n  - patch\n  - update\n  - watch\n`}</code></pre>\n    <p>{`Then create the role:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`oc create -f admin-role.yaml\n`}</code></pre>\n    <p>{`Next, create a group for your administrators by placing the following in the file `}<inlineCode parentName=\"p\">{`admin-group.yaml`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`kind: Group\napiVersion: user.openshift.io/v1\nmetadata:\n\n  # modify this field if your namespace has a different name\n  name: st4sd-administrators-my-namespace\n\nusers:\n  - Account name of Administrator A\n  - Account name of Administrator B\n`}</code></pre>\n    <p>{`Then create the group:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`oc create -f admin-group.yaml\n`}</code></pre>\n    <p>{`Finally, assign the role to the group by creating the file `}<inlineCode parentName=\"p\">{`admin-binding.yaml`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`kind: RoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: st4sd-administrators-my-namespace\n\n  # modify this field if your namespace has a different name\n  namespace:  my-namespace\n\nsubjects:\n  - kind: Group\n    apiGroup: rbac.authorization.k8s.io\n\n    # modify this field if your namespace has a different name\n    name: st4sd-administrators-my-namespace\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: Role\n  name: st4sd-olm-permissions\n`}</code></pre>\n    <p>{`Run:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`oc create -f admin-binding.yaml\n`}</code></pre>\n    <p>{`You can manage the ST4D administrators for the `}<inlineCode parentName=\"p\">{`my-namespace`}</inlineCode>{` namespace by changing the users of the `}<inlineCode parentName=\"p\">{`Group`}</inlineCode>{` object `}<inlineCode parentName=\"p\">{`st4sd-administrators-my-namespace`}</inlineCode>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","mdx","PageDescription","AnchorLinks","AnchorLink","InlineNotification","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","Object","assign","mdxType","parentName","kind","isMDXComponent"],"sourceRoot":""}