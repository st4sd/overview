{"componentChunkName":"component---src-pages-installation-mdx","path":"/installation/","result":{"pageContext":{"frontmatter":{"title":"Installation"},"relativePagePath":"/installation.mdx","titleType":"page","MdxNode":{"id":"ac30d2fc-aff3-5adf-b6a0-906f8fb63b62","children":[],"parent":"f5cef782-d2d5-580c-a421-ecfc1c6e7507","internal":{"content":"---\ntitle: Installation\n---\n\nimport { ServerOperatingSystems } from \"@carbon/pictograms-react\";\nimport { CarbonForIbmDotcom } from \"@carbon/pictograms-react\";\n\n<!--\n\n  Copyright IBM Inc. All Rights Reserved.\n  SPDX-License-Identifier: Apache-2.0\n\n-->\n\n<PageDescription>\n\nLearn how to install ST4SD on a variety of platforms\n\n</PageDescription>\n\n<AnchorLinks>\n  <AnchorLink>Set Up Local Client</AnchorLink>\n  <AnchorLink>Install on OpenShift Local</AnchorLink>\n  <AnchorLink>Install on Kubernetes and OpenShift</AnchorLink>\n  <AnchorLink>Install on Classic HPC</AnchorLink>\n</AnchorLinks>\n\n<InlineNotification kind=\"warning\">\n\nIf you are not an administrator then, depending on your\n[user environment](/user-environments), you may not have to install anything.\nIts recommended you check [first steps](/) to determine if you need to do so.\n\n</InlineNotification>\n\n## Set Up Local Client\n\n<InlineNotification>\n\n- **For**: Researchers & Developers\n- **Use When:**\n  - You want to run workflows on a Kubernetes/OpenShift instance of the workflow\n    stack **from your laptop** via e.g. a jupyter-notebook\n  - You want to develop workflows\n  - You want to test writing/running some simple workflows that can run on your\n    laptop/desktop\n\n</InlineNotification>\n\nThe local client install only requires `st4sd-runtime-core`. You can install\n`st4sd-runtime-core` directly on your laptop using `pip`.\n\n### Requirements\n\n- `python3`\n  - We recommend that you use python 3.9 although versions 3.7 through 3.10\n    should work.\n\n### Installing\n\nA simple pip install suffices:\n\n```\npip install \"st4sd-runtime-core[develop]\"\n```\n\n## Install on OpenShift Local\n\n<InlineNotification>\n\n- **For**: Developers\n- **Use When**\n  - You want to test, develop and run small-scale virtual experiments on your\n    laptop.\n  - You want to develop or examine the ST4SD micro-services on your laptop\n\n</InlineNotification>\n\n### Requirements\n\n<InlineNotification kind=\"warning\">\n\n- OpenShift Local **is only officially supported** on:\n  - RedHat Enterprise Linux 7+\n  - CentOS 7+\n  - The two latest stable Fedora releases\n  - Windows 10\n  - macOS 11.0 Big Sur or later\n- Ubuntu 18.04 LTS or later and Debian 10 or later **are not officially\n  supported** and may require manual setup.\n\nWe recommend using a x86 device.\n\n</InlineNotification>\n\nYou can deploy a small scale version of\n[ST4SD Cloud](/st4sd-cloud-getting-started) on your personal device using <a\n  href=\"https://developers.redhat.com/products/openshift-local/overview\"\n  target=\"_blank\"> Red Hat OpenShift Local</a>. To get started with Red Hat\nOpenShift Local, download the \"OpenShift Local\" binary (crc) from the <a \nhref=\"https://console.redhat.com/openshift/create/local\" target=\"_blank\"> Red\nHat Console</a> website.\n\n<InlineNotification kind=\"info\">\n  You need a Red Hat account to use OpenShift Local. If you do not have one, you\n  can get one for free on the\n  <a\n    href=\"https://developers.redhat.com/register?intcmp=701f20000012ngPAAQ\"\n    target=\"_blank\"\n  >\n    Red Hat Developer\n  </a>\n  website.\n</InlineNotification>\n\n### One time Setup\n\nAfter you install OpenShift Local you will get access to the `crc` binary.\nEnsure the `crc` binary is in your `${PATH}` for example when you run\n`crc version` in your terminal you get similar output to:\n\n```\nCRC version: 2.22.1+e8068b4\nOpenShift version: 4.13.3\nPodman version: 4.4.4\n```\n\nBelow we use `crc` in a script to:\n\n1. create and configure the Virtual Machine that will host OpenShift Local\n2. Set the password of the <b>kubeadmin</b> account to `fun` - do not use\n   insecure passwords in production.\n3. Deploy ST4SD Cloud on the `st4sd-local` namespace\n4. Wait for the ST4SD microservices to go online\n5. Open a browser to visit your instance of the Registry UI!\n   1. Login as the user `developer` with the password `developer` - this is the\n      default non-admin user that `crc` creates for you.\n\nCopy the text below and execute it in your terminal:\n\n```\ncat <<'EOF'>one_time_setup.sh\nset -e\ncrc config set consent-telemetry no\ncrc setup\n# Increase default resource limits for the Virtual Machine\ncrc config set cpus 8\ncrc config set memory 14336\ncrc config set disk-size 50\n# Set the password to \"fun\" - do not use insecure passwords in production\ncrc start\neval $(crc oc-env)\necho \"Login details for your OpenShift Local installation\"\ncrc console --credentials\noc login -u kubeadmin -p fun https://api.crc.testing:6443\noc new-project st4sd-local\necho \"Installing ST4SD Cloud\"\noc apply -f https://raw.githubusercontent.com/st4sd/st4sd-deployment/main/manifests/openshift-local-minimal-release.yaml\necho \"Waiting for the ST4SD services to go online - this will take a couple of minutes\"\n\nwait_pod_running() {\n    echo -n \"Waiting for pod ${1} \"\n    until oc get pod -n st4sd-local -l deploymentconfig=${1} | grep Running > /dev/null\n    do\n\techo -n \".\"\n        sleep 5\n    done\n    echo \"Running\"\n}\n\nwait_pod_running st4sd-authentication\nwait_pod_running st4sd-registry-backend\nwait_pod_running st4sd-registry-ui\nwait_pod_running st4sd-runtime-service\nwait_pod_running st4sd-runtime-k8s\nwait_pod_running st4sd-datastore-mongodb\nwait_pod_running st4sd-datastore-nexus\nwait_pod_running st4sd-datastore-cloud-instance\n\necho \"Your ST4SD root URL is https://local.apps-crc.testing\"\necho \"Access your Registry UI at https://local.apps-crc.testing/registry-ui/\"\necho \"  You will be asked to login with your OpenShift account.\"\necho \"  Use the developer account.\"\necho \"   username: developer\"\necho \"   password: developer\"\necho \"Opening the website now\"\nopen https://local.apps-crc.testing/registry-ui/\nEOF\nchmod +x one_time_setup.sh\n\n./one_time_setup.sh\n```\n\nThe script will take 5-15 minutes to complete. While it is building your local\nST4SD Cloud deployment, consider exploring the\n[ST4SD Services](/running-workflows-on-openshift) and\n[ST4SD Registry](/st4sd-registry-getting-started) webpages. You can use the\ninformation in there to populate your catalog of experiments and more!\n\nContinue reading if you would like to get more information about the individual\nsteps above.\n\n### Setting up your Virtual Machine for OpenShift Local\n\nRed Hat OpenShift Local runs as a Virtual Machine on your device. There is a\none-time setup that you need to do using the `crc` command-line utility that you\ndownloaded in the above step. The default installation of OpenShift Local\nproduces a local OpenShift cluster with:\n\n- 4 virtual CPU cores,\n- 9 GB of RAM, and\n- 31 GB of storage space\n\nWe recommend increasing the defaults with the following:\n\n```\n# one time command\ncrc setup\n# if OpenShift Local is already running, execute \"crc stop\" first\ncrc config set cpus 8\ncrc config set memory 14336\ncrc config set disk-size 50\n```\n\nBelow we also change the default password for the <b>kubeadmin</b> so that the\ninstructions are easier to follow.\n\n```\n# Set the password to \"fun\" - do not use insecure passwords in production\ncrc config kubeadmin-password fun\n```\n\nIf you ever want to view the credentials for accessing your OpenShift Local\ninstance, you can run\n\n```\ncrc console --credentials\n```\n\n### Starting and Stopping the OpenShift Local Virtual Machine\n\nRecall that OpenShift Local runs as a small scale Virtual Machine on your\npersonal device. We recommend starting it before you experiment with ST4SD and\nstopping it when you are done running experiments to release the compute\nresources that the Virtual Machine is taking up.\n\nTo start the virtual machine type:\n\n```\ncrc start\n# Use the `oc` command line interface\neval $(cr oc-env)\n# Open a browser to login to OpenShift Web Console\ncrc console\n```\n\n<InlineNotification kind=\"info\">\n  The command <b>crc start</b> prints useful information on the terminal\n  including how to access the OpenShift Web Console as well as the credentials\n  for the <b>kubeadmin</b> and <b>developer</b> users. In our instructions below\n  we login using the <b>kubeadmin</b> user.\n</InlineNotification>\n\nTo stop the virtual machine type:\n\n```\ncrc stop\n```\n\n### Installing ST4SD Cloud\n\nWhen `crc start` finishes printing information on the terminal, your OpenShift\nLocal cluster has started running. You may now connect using the\n\n<b>kubeadmin</b> account:\n\n```bash\n# Use the `oc` command line interface\neval $(crc oc-env)\n# Ask crc to print the `oc login` commands for you\ncrc console --credentials\n# Now login as the kubeadmin, recall that we set the password to \"fun\"\noc login -u kubeadmin -p fun https://api.crc.testing:6443\n# Open a browser to login to OpenShift Web Console\ncrc console\n```\n\n### Installing\n\nAfter your OpenShift Local is up and running (i.e. `crc start` has finished).\nFollow the instructions on your terminal to login in as an administrator into\nOpenShift.\n\n1. Run `crc console --credentials` to see the `oc login` commands you can type\n   in your terminal.\n2. Create the project `st4sd-local`: `oc new-project st4sd-local`.\n3. Deploy the minimal version of ST4SD:\n   `oc apply -f https://raw.githubusercontent.com/st4sd/st4sd-deployment/main/manifests/openshift-local-minimal-release.yaml`.\n4. The url to your local instance of ST4SD is https://local.apps-crc.testing\n   - You can access your local ST4SD registry-ui at\n     https://local.apps-crc.testing/registry-ui/\n   - The very first time you login, OpenShift will inform you that ST4SD wishes\n     to know that you are an authorized user of the system. Accept the OpenShift\n     prompt on your browser.\n   - Both default OpenShift accounts (`developer` and `kubeadmin` will have\n     access to your ST4SD microservices).\n     - By default, the `developer` account has the password `developer`.\n     - You can print the administrator credentials using\n       `crc console --credentials`.\n\n<InlineNotification kind=\"info\">\n\nYou can see the credentials of the default accounts that OpenShift Local creates\nfor you by running `crc console --credentials` in your terminal.\n\n</InlineNotification>\n\n## Install on Kubernetes and OpenShift\n\n<InlineNotification>\n\n- **For**: Administrators\n- **Use When**\n  - You want to install an instance of the workflow stack on a k8s/OpenShift\n    cluster\n\n</InlineNotification>\n\nFirst, add the **Simulation Toolkit for Scientific Discovery (ST4SD)** operator\nto the Operator Catalog of your OpenShift cluster:\n\n```\noc apply -f https://raw.githubusercontent.com/st4sd/st4sd-olm/main/examples/deploy.yaml\n```\n\nThen follow our\n\n<a href=\"https://github.com/st4sd/st4sd-olm\" target=\"_blank\">\n  instructions\n</a> to configure and install. For comprehensive details on customizing ST4SD deployments\nusing `helm` post-installation see https://github.com/st4sd/st4sd-deployment.\n\n## Install on Classic HPC\n\n<InlineNotification>\n\n- **For**: Administrators\n- **Use When:**\n  - You want to run workflows on a classic HPC infrastructure that uses the LSF\n    scheduler\n\n</InlineNotification>\n\n### Requirements\n\nThe following installation instructions assume you have\n\n1. **Internet access**\n2. **swig is in your $PATH**\n   - _swig_ is a program for creating scripting language wrappers. Required for\n     building the LSF wrappers\n3. **python3 (3.7 to 3.10) is in your $PATH**\n4. **The command `tox` is available**\n   - Check by typing `tox` and pressing return\n\n### Installing\n\n1. Clone the ST4SD runtime core repository\n   - run `git clone https://github.com/st4sd/st4sd-runtime-core.git`\n2. `cd` into the cloned repository\n3. run `DEPLOY_VENV=$MYVENV tox -e py37-deploy-lsf --site-packages` where\n   - `$MYVENV` is where you want the virtual environment to be created\n\n## Learn more\n\n<div className=\"expressive-content-list-group\">\n\n  <ExpressiveList \n    title=\"Exploring the Registry UI\"\n    background=\"true\"\n    pictogram={<CarbonForIbmDotcom />}\n  >\n\nInstall successful? You can now learn about all the features of\n[our web interface](/using-the-virtual-experiments-registry-ui) for browsing and\nexamining virtual experiments packages and runs.\n\n  </ExpressiveList>\n\n  <ExpressiveList\n    title=\"Use the APIs\"\n    background=\"true\"\n    pictogram={<ServerOperatingSystems />}\n  >\n\n[Learn](/running-workflows-on-openshift) how to use the ST4SD python client API\nto run, query, and interact with virtual experiments. The APIs also offer access\nto a trove of experiment metadata and files such as logs and outputs. You can\nfind more examples in our Jupyter Notebooks\n[example repository](https://github.com/st4sd/st4sd-examples).\n\n  </ExpressiveList>\n\n</div>\n","type":"Mdx","contentDigest":"e2da08056c48bd1c2c1205ec4a560e88","owner":"gatsby-plugin-mdx","counter":249},"frontmatter":{"title":"Installation"},"exports":{},"rawBody":"---\ntitle: Installation\n---\n\nimport { ServerOperatingSystems } from \"@carbon/pictograms-react\";\nimport { CarbonForIbmDotcom } from \"@carbon/pictograms-react\";\n\n<!--\n\n  Copyright IBM Inc. All Rights Reserved.\n  SPDX-License-Identifier: Apache-2.0\n\n-->\n\n<PageDescription>\n\nLearn how to install ST4SD on a variety of platforms\n\n</PageDescription>\n\n<AnchorLinks>\n  <AnchorLink>Set Up Local Client</AnchorLink>\n  <AnchorLink>Install on OpenShift Local</AnchorLink>\n  <AnchorLink>Install on Kubernetes and OpenShift</AnchorLink>\n  <AnchorLink>Install on Classic HPC</AnchorLink>\n</AnchorLinks>\n\n<InlineNotification kind=\"warning\">\n\nIf you are not an administrator then, depending on your\n[user environment](/user-environments), you may not have to install anything.\nIts recommended you check [first steps](/) to determine if you need to do so.\n\n</InlineNotification>\n\n## Set Up Local Client\n\n<InlineNotification>\n\n- **For**: Researchers & Developers\n- **Use When:**\n  - You want to run workflows on a Kubernetes/OpenShift instance of the workflow\n    stack **from your laptop** via e.g. a jupyter-notebook\n  - You want to develop workflows\n  - You want to test writing/running some simple workflows that can run on your\n    laptop/desktop\n\n</InlineNotification>\n\nThe local client install only requires `st4sd-runtime-core`. You can install\n`st4sd-runtime-core` directly on your laptop using `pip`.\n\n### Requirements\n\n- `python3`\n  - We recommend that you use python 3.9 although versions 3.7 through 3.10\n    should work.\n\n### Installing\n\nA simple pip install suffices:\n\n```\npip install \"st4sd-runtime-core[develop]\"\n```\n\n## Install on OpenShift Local\n\n<InlineNotification>\n\n- **For**: Developers\n- **Use When**\n  - You want to test, develop and run small-scale virtual experiments on your\n    laptop.\n  - You want to develop or examine the ST4SD micro-services on your laptop\n\n</InlineNotification>\n\n### Requirements\n\n<InlineNotification kind=\"warning\">\n\n- OpenShift Local **is only officially supported** on:\n  - RedHat Enterprise Linux 7+\n  - CentOS 7+\n  - The two latest stable Fedora releases\n  - Windows 10\n  - macOS 11.0 Big Sur or later\n- Ubuntu 18.04 LTS or later and Debian 10 or later **are not officially\n  supported** and may require manual setup.\n\nWe recommend using a x86 device.\n\n</InlineNotification>\n\nYou can deploy a small scale version of\n[ST4SD Cloud](/st4sd-cloud-getting-started) on your personal device using <a\n  href=\"https://developers.redhat.com/products/openshift-local/overview\"\n  target=\"_blank\"> Red Hat OpenShift Local</a>. To get started with Red Hat\nOpenShift Local, download the \"OpenShift Local\" binary (crc) from the <a \nhref=\"https://console.redhat.com/openshift/create/local\" target=\"_blank\"> Red\nHat Console</a> website.\n\n<InlineNotification kind=\"info\">\n  You need a Red Hat account to use OpenShift Local. If you do not have one, you\n  can get one for free on the\n  <a\n    href=\"https://developers.redhat.com/register?intcmp=701f20000012ngPAAQ\"\n    target=\"_blank\"\n  >\n    Red Hat Developer\n  </a>\n  website.\n</InlineNotification>\n\n### One time Setup\n\nAfter you install OpenShift Local you will get access to the `crc` binary.\nEnsure the `crc` binary is in your `${PATH}` for example when you run\n`crc version` in your terminal you get similar output to:\n\n```\nCRC version: 2.22.1+e8068b4\nOpenShift version: 4.13.3\nPodman version: 4.4.4\n```\n\nBelow we use `crc` in a script to:\n\n1. create and configure the Virtual Machine that will host OpenShift Local\n2. Set the password of the <b>kubeadmin</b> account to `fun` - do not use\n   insecure passwords in production.\n3. Deploy ST4SD Cloud on the `st4sd-local` namespace\n4. Wait for the ST4SD microservices to go online\n5. Open a browser to visit your instance of the Registry UI!\n   1. Login as the user `developer` with the password `developer` - this is the\n      default non-admin user that `crc` creates for you.\n\nCopy the text below and execute it in your terminal:\n\n```\ncat <<'EOF'>one_time_setup.sh\nset -e\ncrc config set consent-telemetry no\ncrc setup\n# Increase default resource limits for the Virtual Machine\ncrc config set cpus 8\ncrc config set memory 14336\ncrc config set disk-size 50\n# Set the password to \"fun\" - do not use insecure passwords in production\ncrc start\neval $(crc oc-env)\necho \"Login details for your OpenShift Local installation\"\ncrc console --credentials\noc login -u kubeadmin -p fun https://api.crc.testing:6443\noc new-project st4sd-local\necho \"Installing ST4SD Cloud\"\noc apply -f https://raw.githubusercontent.com/st4sd/st4sd-deployment/main/manifests/openshift-local-minimal-release.yaml\necho \"Waiting for the ST4SD services to go online - this will take a couple of minutes\"\n\nwait_pod_running() {\n    echo -n \"Waiting for pod ${1} \"\n    until oc get pod -n st4sd-local -l deploymentconfig=${1} | grep Running > /dev/null\n    do\n\techo -n \".\"\n        sleep 5\n    done\n    echo \"Running\"\n}\n\nwait_pod_running st4sd-authentication\nwait_pod_running st4sd-registry-backend\nwait_pod_running st4sd-registry-ui\nwait_pod_running st4sd-runtime-service\nwait_pod_running st4sd-runtime-k8s\nwait_pod_running st4sd-datastore-mongodb\nwait_pod_running st4sd-datastore-nexus\nwait_pod_running st4sd-datastore-cloud-instance\n\necho \"Your ST4SD root URL is https://local.apps-crc.testing\"\necho \"Access your Registry UI at https://local.apps-crc.testing/registry-ui/\"\necho \"  You will be asked to login with your OpenShift account.\"\necho \"  Use the developer account.\"\necho \"   username: developer\"\necho \"   password: developer\"\necho \"Opening the website now\"\nopen https://local.apps-crc.testing/registry-ui/\nEOF\nchmod +x one_time_setup.sh\n\n./one_time_setup.sh\n```\n\nThe script will take 5-15 minutes to complete. While it is building your local\nST4SD Cloud deployment, consider exploring the\n[ST4SD Services](/running-workflows-on-openshift) and\n[ST4SD Registry](/st4sd-registry-getting-started) webpages. You can use the\ninformation in there to populate your catalog of experiments and more!\n\nContinue reading if you would like to get more information about the individual\nsteps above.\n\n### Setting up your Virtual Machine for OpenShift Local\n\nRed Hat OpenShift Local runs as a Virtual Machine on your device. There is a\none-time setup that you need to do using the `crc` command-line utility that you\ndownloaded in the above step. The default installation of OpenShift Local\nproduces a local OpenShift cluster with:\n\n- 4 virtual CPU cores,\n- 9 GB of RAM, and\n- 31 GB of storage space\n\nWe recommend increasing the defaults with the following:\n\n```\n# one time command\ncrc setup\n# if OpenShift Local is already running, execute \"crc stop\" first\ncrc config set cpus 8\ncrc config set memory 14336\ncrc config set disk-size 50\n```\n\nBelow we also change the default password for the <b>kubeadmin</b> so that the\ninstructions are easier to follow.\n\n```\n# Set the password to \"fun\" - do not use insecure passwords in production\ncrc config kubeadmin-password fun\n```\n\nIf you ever want to view the credentials for accessing your OpenShift Local\ninstance, you can run\n\n```\ncrc console --credentials\n```\n\n### Starting and Stopping the OpenShift Local Virtual Machine\n\nRecall that OpenShift Local runs as a small scale Virtual Machine on your\npersonal device. We recommend starting it before you experiment with ST4SD and\nstopping it when you are done running experiments to release the compute\nresources that the Virtual Machine is taking up.\n\nTo start the virtual machine type:\n\n```\ncrc start\n# Use the `oc` command line interface\neval $(cr oc-env)\n# Open a browser to login to OpenShift Web Console\ncrc console\n```\n\n<InlineNotification kind=\"info\">\n  The command <b>crc start</b> prints useful information on the terminal\n  including how to access the OpenShift Web Console as well as the credentials\n  for the <b>kubeadmin</b> and <b>developer</b> users. In our instructions below\n  we login using the <b>kubeadmin</b> user.\n</InlineNotification>\n\nTo stop the virtual machine type:\n\n```\ncrc stop\n```\n\n### Installing ST4SD Cloud\n\nWhen `crc start` finishes printing information on the terminal, your OpenShift\nLocal cluster has started running. You may now connect using the\n\n<b>kubeadmin</b> account:\n\n```bash\n# Use the `oc` command line interface\neval $(crc oc-env)\n# Ask crc to print the `oc login` commands for you\ncrc console --credentials\n# Now login as the kubeadmin, recall that we set the password to \"fun\"\noc login -u kubeadmin -p fun https://api.crc.testing:6443\n# Open a browser to login to OpenShift Web Console\ncrc console\n```\n\n### Installing\n\nAfter your OpenShift Local is up and running (i.e. `crc start` has finished).\nFollow the instructions on your terminal to login in as an administrator into\nOpenShift.\n\n1. Run `crc console --credentials` to see the `oc login` commands you can type\n   in your terminal.\n2. Create the project `st4sd-local`: `oc new-project st4sd-local`.\n3. Deploy the minimal version of ST4SD:\n   `oc apply -f https://raw.githubusercontent.com/st4sd/st4sd-deployment/main/manifests/openshift-local-minimal-release.yaml`.\n4. The url to your local instance of ST4SD is https://local.apps-crc.testing\n   - You can access your local ST4SD registry-ui at\n     https://local.apps-crc.testing/registry-ui/\n   - The very first time you login, OpenShift will inform you that ST4SD wishes\n     to know that you are an authorized user of the system. Accept the OpenShift\n     prompt on your browser.\n   - Both default OpenShift accounts (`developer` and `kubeadmin` will have\n     access to your ST4SD microservices).\n     - By default, the `developer` account has the password `developer`.\n     - You can print the administrator credentials using\n       `crc console --credentials`.\n\n<InlineNotification kind=\"info\">\n\nYou can see the credentials of the default accounts that OpenShift Local creates\nfor you by running `crc console --credentials` in your terminal.\n\n</InlineNotification>\n\n## Install on Kubernetes and OpenShift\n\n<InlineNotification>\n\n- **For**: Administrators\n- **Use When**\n  - You want to install an instance of the workflow stack on a k8s/OpenShift\n    cluster\n\n</InlineNotification>\n\nFirst, add the **Simulation Toolkit for Scientific Discovery (ST4SD)** operator\nto the Operator Catalog of your OpenShift cluster:\n\n```\noc apply -f https://raw.githubusercontent.com/st4sd/st4sd-olm/main/examples/deploy.yaml\n```\n\nThen follow our\n\n<a href=\"https://github.com/st4sd/st4sd-olm\" target=\"_blank\">\n  instructions\n</a> to configure and install. For comprehensive details on customizing ST4SD deployments\nusing `helm` post-installation see https://github.com/st4sd/st4sd-deployment.\n\n## Install on Classic HPC\n\n<InlineNotification>\n\n- **For**: Administrators\n- **Use When:**\n  - You want to run workflows on a classic HPC infrastructure that uses the LSF\n    scheduler\n\n</InlineNotification>\n\n### Requirements\n\nThe following installation instructions assume you have\n\n1. **Internet access**\n2. **swig is in your $PATH**\n   - _swig_ is a program for creating scripting language wrappers. Required for\n     building the LSF wrappers\n3. **python3 (3.7 to 3.10) is in your $PATH**\n4. **The command `tox` is available**\n   - Check by typing `tox` and pressing return\n\n### Installing\n\n1. Clone the ST4SD runtime core repository\n   - run `git clone https://github.com/st4sd/st4sd-runtime-core.git`\n2. `cd` into the cloned repository\n3. run `DEPLOY_VENV=$MYVENV tox -e py37-deploy-lsf --site-packages` where\n   - `$MYVENV` is where you want the virtual environment to be created\n\n## Learn more\n\n<div className=\"expressive-content-list-group\">\n\n  <ExpressiveList \n    title=\"Exploring the Registry UI\"\n    background=\"true\"\n    pictogram={<CarbonForIbmDotcom />}\n  >\n\nInstall successful? You can now learn about all the features of\n[our web interface](/using-the-virtual-experiments-registry-ui) for browsing and\nexamining virtual experiments packages and runs.\n\n  </ExpressiveList>\n\n  <ExpressiveList\n    title=\"Use the APIs\"\n    background=\"true\"\n    pictogram={<ServerOperatingSystems />}\n  >\n\n[Learn](/running-workflows-on-openshift) how to use the ST4SD python client API\nto run, query, and interact with virtual experiments. The APIs also offer access\nto a trove of experiment metadata and files such as logs and outputs. You can\nfind more examples in our Jupyter Notebooks\n[example repository](https://github.com/st4sd/st4sd-examples).\n\n  </ExpressiveList>\n\n</div>\n","fileAbsolutePath":"/home/travis/build/st4sd/overview/src/pages/installation.mdx"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}