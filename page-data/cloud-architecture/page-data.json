{"componentChunkName":"component---src-pages-cloud-architecture-mdx","path":"/cloud-architecture/","result":{"pageContext":{"frontmatter":{"title":"Architecture of ST4SD Cloud"},"relativePagePath":"/cloud-architecture.mdx","titleType":"page","MdxNode":{"id":"3bfb722b-69e7-5d08-ab23-b5b896608cbe","children":[],"parent":"7340cfc2-064f-5ade-9b18-01d06a6cdd9d","internal":{"content":"---\ntitle: Architecture of ST4SD Cloud\n---\n\n<!--\n\n  Copyright IBM Inc. All Rights Reserved.\n  SPDX-License-Identifier: Apache-2.0\n\n-->\n\n\nST4SD is a cloud native, but not cloud exclusive, framework. When you [install the toolkit](/installation#install-on-kubernetes-and-openshift) on the cloud you deploy a collection of microservices. The microservices are acting as the proxy between the user and the [core runtime system](/orientation) of ST4SD.\n\n<Column colMd={11} colLg={11} noGutterSm>\n\n<ImageCard\n  href=\"/\"\n  disabled\n  aspectRatio=\"16:9\"\n  >\n\n![roadmap](../assets/images/cloud/architecture.png)\n</ImageCard>\n\n</Column>\n\nUsers interact with the microservices using [Jupyter Notebooks](/running-workflows-on-openshift) and the Command Line Interface (CLI) of ST4SD `stp`.\n\nThe definitions of virtual experiments live on a server for example a Git server or a Cloud Object Storage server like S3. The [Runtime REST-API](/running-workflows-on-openshift) and the [registry web ui](/using-the-virtual-experiments-registry-ui) contain pointers to the virtual experiment definitions which we term [Parameterised Virtual Experiment Packages](/creating-a-parameterised-package).\n\nUsers interact with the `Runtime REST-API` to run parameterised virtual experiments packages. The Runtime Service creates a `Workflow` CustomResource which triggers the `K8s Workflow Operator`. The K8s Workflow Operator creates a main pod that handles the orchestration of the virtual experiment instance using the `Workflow Orchestrator`. The Workflow Orchestrator may launch minion pods for the tasks of components in the virtual experiment that use the `kubernetes` backend of ST4SD.\n\nUsers can also run ST4SD on a machine that is not part of the cloud. For example, they may [install the Workflow Orchestrator](/installation#set-up-local-client) on the login node of a High Performance Cluster or their personal laptop. That will enable them to [execute virtual experiments](/tutorial#executing-sum-numbers) that use other backends of ST4SD, such as `lsf`, `docker`, and `local` (i.e. regular POSIX processes).\n","type":"Mdx","contentDigest":"7b153f58b34f10cfe8b9e520b385a9ca","owner":"gatsby-plugin-mdx","counter":253},"frontmatter":{"title":"Architecture of ST4SD Cloud"},"exports":{},"rawBody":"---\ntitle: Architecture of ST4SD Cloud\n---\n\n<!--\n\n  Copyright IBM Inc. All Rights Reserved.\n  SPDX-License-Identifier: Apache-2.0\n\n-->\n\n\nST4SD is a cloud native, but not cloud exclusive, framework. When you [install the toolkit](/installation#install-on-kubernetes-and-openshift) on the cloud you deploy a collection of microservices. The microservices are acting as the proxy between the user and the [core runtime system](/orientation) of ST4SD.\n\n<Column colMd={11} colLg={11} noGutterSm>\n\n<ImageCard\n  href=\"/\"\n  disabled\n  aspectRatio=\"16:9\"\n  >\n\n![roadmap](../assets/images/cloud/architecture.png)\n</ImageCard>\n\n</Column>\n\nUsers interact with the microservices using [Jupyter Notebooks](/running-workflows-on-openshift) and the Command Line Interface (CLI) of ST4SD `stp`.\n\nThe definitions of virtual experiments live on a server for example a Git server or a Cloud Object Storage server like S3. The [Runtime REST-API](/running-workflows-on-openshift) and the [registry web ui](/using-the-virtual-experiments-registry-ui) contain pointers to the virtual experiment definitions which we term [Parameterised Virtual Experiment Packages](/creating-a-parameterised-package).\n\nUsers interact with the `Runtime REST-API` to run parameterised virtual experiments packages. The Runtime Service creates a `Workflow` CustomResource which triggers the `K8s Workflow Operator`. The K8s Workflow Operator creates a main pod that handles the orchestration of the virtual experiment instance using the `Workflow Orchestrator`. The Workflow Orchestrator may launch minion pods for the tasks of components in the virtual experiment that use the `kubernetes` backend of ST4SD.\n\nUsers can also run ST4SD on a machine that is not part of the cloud. For example, they may [install the Workflow Orchestrator](/installation#set-up-local-client) on the login node of a High Performance Cluster or their personal laptop. That will enable them to [execute virtual experiments](/tutorial#executing-sum-numbers) that use other backends of ST4SD, such as `lsf`, `docker`, and `local` (i.e. regular POSIX processes).\n","fileAbsolutePath":"/home/travis/build/st4sd/overview/src/pages/cloud-architecture.mdx"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}