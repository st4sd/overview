{"componentChunkName":"component---src-pages-using-the-virtual-experiments-registry-ui-mdx","path":"/using-the-virtual-experiments-registry-ui/","result":{"pageContext":{"frontmatter":{"title":"Using the Virtual Experiments Registry UI"},"relativePagePath":"/using-the-virtual-experiments-registry-ui.mdx","titleType":"page","MdxNode":{"id":"98a1f793-33e5-5b09-a17d-9c77ad1f0653","children":[],"parent":"4e64d947-cb0f-5828-bf80-f79914f990e8","internal":{"content":"---\ntitle: Using the Virtual Experiments Registry UI\n---\n\n<!--\n\n  Copyright IBM Inc. All Rights Reserved.\n  SPDX-License-Identifier: Apache-2.0\n\n-->\n\n<PageDescription>\n\nThis page gives an overview of the ST4SD Virtual Experiments Registry UI.\n\n</PageDescription>\n\n<AnchorLinks>\n  <AnchorLink>The homepage</AnchorLink>\n  <AnchorLink>The experiments page</AnchorLink>\n</AnchorLinks>\n\nThe ST4SD Registry UI is a web-based UI designed to provide information at a\nglance about virtual experiments. You can watch a quick video walkthrough of the registry here:\n\n<Video src=\"../assets/videos/using-the-virtual-experiments-registry-ui/ST4SD Global Registry Showcase.mp4\"></Video>\n\n## The homepage\n\nThe homepage of the Registry UI gives users an overview of the available\n_parameterised virtual experiment packagess_. allowing them to filter the\nresults by domain, platform, or surrogate status, as shown in the screenshot\nbelow:\n\n<InlineNotification>\n\n  Developers can find out more about creating parameterised virtual experiments\n  packages [here](/creating-a-parameterised-package).\n\n</InlineNotification>\n\n![Registry UI main interface](../assets/images/using-the-ve-registry-ui/ve-registry-ui-main.png)\n\n## The experiments page\n\n<AnchorLinks small>\n  <AnchorLink>Experiment specification</AnchorLink>\n  <AnchorLink>Parameterisation</AnchorLink>\n  <AnchorLink>Package information</AnchorLink>\n</AnchorLinks>\n\nUpon clicking on one of the entries, users will be presented with three sections\ncontaining detailed information about the experiment.\n\n### Experiment specification\n\nThe first section serves two purposes: a) give immediate access to the interface\n(description, measured properties, inputs, etc) of the virtual experiment, and\nb) provide a visual feedback about how well the experiment adheres to\n[best practices](/virtual-experiment-developer-best-practices).\n\nClicking the progress indicator on the right opens a panel where developers can\nread how they can improve their virtual experiments to get the most out of the\nfeatures provided by ST4SD and why each element is important.\n\n![Registry UI experiment specification](../assets/images/using-the-ve-registry-ui/ve-registry-ui-experiment-specification.png)\n\n### Parameterisation\n\nThis section describes the available options to customize the execution of a\nparameterisable virtual experiment package. Users may override variables,\nruntime arguments, environment variables, and\n[`platform`](/workflow-specification/#platforms) of the resulting virtual\nexperiment instance.\n\nIn the **Execution options** section, users can see what parameters they can\ncustomize. Depending on the developer settings, users may specify an arbitrary\nvalue for parameters, or choose between a list of choices. Finally, the **Preset\nparameters** section, presents the parameters users cannot override. The\ndevelopers pre-configure these parameters when they\n[push the parameterised package](/creating-a-parameterised-package) to the\nregistry.\n\n![Registry UI experiment parameterisation](../assets/images/using-the-ve-registry-ui/ve-registry-ui-experiment-parameterisation.png)\n\n### Package information\n\nThis section contains information about the internals of the parameterised\npackage, such as the list of base packages, container images used in the\nvirtual experiment, and developer-provided metadata. For virtual experiment\ndefinitions hosted on Git, the users also get the option to report problems by\nopening Github issues. The issues, automatically include relevant information to\nhelp the developers debug the problem. For example, the commit and branch/tag of\nthe repository containing the definition of this particular version of the\nvirtual experiment.\n\n![Registry UI package information](../assets/images/using-the-ve-registry-ui/ve-registry-ui-package-information.png)\n\nThe registry also displays all available revisions of the parameterised virtual\nexperiment package in the **History** section. The table includes the\ncurrent/previous tags, and the creation date of revisions. Clicking on a digest\nopens a new page with point-in-time data about that specific revision of the\nexperiment, allowing users to see how the parameterised virtual experiment\npackage looked in the past.\n\n![Registry UI history information](../assets/images/using-the-ve-registry-ui/ve-registry-ui-history.png)\n\nUsers can also quickly download the experiment package entry or import it\ndirectly in their own ST4SD Runtime Service instance using the button or the\nPython code provided at the bottom of the page.\n\n![Registry UI import](../assets/images/using-the-ve-registry-ui/ve-registry-ui-import.png)\n","type":"Mdx","contentDigest":"d985d87efb63229e0361d95defb0eff0","owner":"gatsby-plugin-mdx","counter":245},"frontmatter":{"title":"Using the Virtual Experiments Registry UI"},"exports":{},"rawBody":"---\ntitle: Using the Virtual Experiments Registry UI\n---\n\n<!--\n\n  Copyright IBM Inc. All Rights Reserved.\n  SPDX-License-Identifier: Apache-2.0\n\n-->\n\n<PageDescription>\n\nThis page gives an overview of the ST4SD Virtual Experiments Registry UI.\n\n</PageDescription>\n\n<AnchorLinks>\n  <AnchorLink>The homepage</AnchorLink>\n  <AnchorLink>The experiments page</AnchorLink>\n</AnchorLinks>\n\nThe ST4SD Registry UI is a web-based UI designed to provide information at a\nglance about virtual experiments. You can watch a quick video walkthrough of the registry here:\n\n<Video src=\"../assets/videos/using-the-virtual-experiments-registry-ui/ST4SD Global Registry Showcase.mp4\"></Video>\n\n## The homepage\n\nThe homepage of the Registry UI gives users an overview of the available\n_parameterised virtual experiment packagess_. allowing them to filter the\nresults by domain, platform, or surrogate status, as shown in the screenshot\nbelow:\n\n<InlineNotification>\n\n  Developers can find out more about creating parameterised virtual experiments\n  packages [here](/creating-a-parameterised-package).\n\n</InlineNotification>\n\n![Registry UI main interface](../assets/images/using-the-ve-registry-ui/ve-registry-ui-main.png)\n\n## The experiments page\n\n<AnchorLinks small>\n  <AnchorLink>Experiment specification</AnchorLink>\n  <AnchorLink>Parameterisation</AnchorLink>\n  <AnchorLink>Package information</AnchorLink>\n</AnchorLinks>\n\nUpon clicking on one of the entries, users will be presented with three sections\ncontaining detailed information about the experiment.\n\n### Experiment specification\n\nThe first section serves two purposes: a) give immediate access to the interface\n(description, measured properties, inputs, etc) of the virtual experiment, and\nb) provide a visual feedback about how well the experiment adheres to\n[best practices](/virtual-experiment-developer-best-practices).\n\nClicking the progress indicator on the right opens a panel where developers can\nread how they can improve their virtual experiments to get the most out of the\nfeatures provided by ST4SD and why each element is important.\n\n![Registry UI experiment specification](../assets/images/using-the-ve-registry-ui/ve-registry-ui-experiment-specification.png)\n\n### Parameterisation\n\nThis section describes the available options to customize the execution of a\nparameterisable virtual experiment package. Users may override variables,\nruntime arguments, environment variables, and\n[`platform`](/workflow-specification/#platforms) of the resulting virtual\nexperiment instance.\n\nIn the **Execution options** section, users can see what parameters they can\ncustomize. Depending on the developer settings, users may specify an arbitrary\nvalue for parameters, or choose between a list of choices. Finally, the **Preset\nparameters** section, presents the parameters users cannot override. The\ndevelopers pre-configure these parameters when they\n[push the parameterised package](/creating-a-parameterised-package) to the\nregistry.\n\n![Registry UI experiment parameterisation](../assets/images/using-the-ve-registry-ui/ve-registry-ui-experiment-parameterisation.png)\n\n### Package information\n\nThis section contains information about the internals of the parameterised\npackage, such as the list of base packages, container images used in the\nvirtual experiment, and developer-provided metadata. For virtual experiment\ndefinitions hosted on Git, the users also get the option to report problems by\nopening Github issues. The issues, automatically include relevant information to\nhelp the developers debug the problem. For example, the commit and branch/tag of\nthe repository containing the definition of this particular version of the\nvirtual experiment.\n\n![Registry UI package information](../assets/images/using-the-ve-registry-ui/ve-registry-ui-package-information.png)\n\nThe registry also displays all available revisions of the parameterised virtual\nexperiment package in the **History** section. The table includes the\ncurrent/previous tags, and the creation date of revisions. Clicking on a digest\nopens a new page with point-in-time data about that specific revision of the\nexperiment, allowing users to see how the parameterised virtual experiment\npackage looked in the past.\n\n![Registry UI history information](../assets/images/using-the-ve-registry-ui/ve-registry-ui-history.png)\n\nUsers can also quickly download the experiment package entry or import it\ndirectly in their own ST4SD Runtime Service instance using the button or the\nPython code provided at the bottom of the page.\n\n![Registry UI import](../assets/images/using-the-ve-registry-ui/ve-registry-ui-import.png)\n","fileAbsolutePath":"/home/travis/build/st4sd/overview/src/pages/using-the-virtual-experiments-registry-ui.mdx"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2746626797","3018647132","3037994772","768070550"]}