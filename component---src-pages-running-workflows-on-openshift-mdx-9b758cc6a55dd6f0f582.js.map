{"version":3,"file":"component---src-pages-running-workflows-on-openshift-mdx-9b758cc6a55dd6f0f582.js","mappings":"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","sources":["webpack://st4sd-overview/./src/pages/running-workflows-on-openshift.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/travis/build/st4sd/overview/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nimport { Tools } from \"@carbon/pictograms-react\";\nimport { ArtTools_01 } from \"@carbon/pictograms-react\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst ExpressiveList = makeShortcode(\"ExpressiveList\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    {/*\n       Copyright IBM Inc. All Rights Reserved.\n      SPDX-License-Identifier: Apache-2.0\n     */}\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`Learn how to use ST4SD python client API to run, query and interact with virtual\nexperiments`}</p>\n    </PageDescription>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n      <AnchorLink mdxType=\"AnchorLink\">Connecting to ST4SD</AnchorLink>\n <AnchorLink mdxType=\"AnchorLink\">Adding a virtual experiment package</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Running a virtual experiment</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Getting the status of a virtual experiment instance</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Get the details of a virtual experiment instance</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Retrieving the outputs of a virtual experiment instance</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Stopping a virtual experiment instance</AnchorLink>\n    </AnchorLinks>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <ul>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`For`}</strong>{`: Researchers`}</li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`Use When:`}</strong>\n          <ul parentName=\"li\">\n            <li parentName=\"ul\">{`You want to run and get output of virtual experiments`}</li>\n          </ul>\n        </li>\n        <li parentName=\"ul\"><strong parentName=\"li\">{`Skill Requirements:`}</strong>\n          <ul parentName=\"li\">\n            <li parentName=\"ul\">{`Some knowledge of python`}</li>\n          </ul>\n        </li>\n      </ul>\n    </InlineNotification>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p>{`The code here can be tested using the\n`}<a parentName=\"p\" {...{\n          \"href\": \"https://github.com/st4sd/st4sd-examples/blob/main/notebooks/ST4SD%20Runtime%20API%20Example.ipynb\"\n        }}>{`ST4SD Runtime API Example notebook`}</a></p>\n    </InlineNotification>\n    <h2>{`Overview`}</h2>\n    <p>{`We provide a python API for interacting with the ST4SD Services. The API enables\nyou to:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Launch virtual experiment instances`}</li>\n      <li parentName=\"ol\">{`Monitor virtual experiment instances`}</li>\n      <li parentName=\"ol\">{`Download outputs and measured properties of virtual experiment instances`}</li>\n    </ol>\n    <h3>{`Requirements`}</h3>\n    <p>{`The basic requirements are access to an OpenShift instance with ST4SD installed\n(see the `}<a parentName=\"p\" {...{\n        \"href\": \"/overview/installation\"\n      }}>{`ST4SD Cloud Installation instructions`}</a>{` for more\ninformation).`}</p>\n    <h4>{`Getting data into and out-of virtual experiments: Cloud Object Store`}</h4>\n    <p>{`Additionally it can be useful to set up a Cloud Object Store bucket so you can\neasily get data into and out-of a virtual experiment.`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"/overview/UsingCloudObjectStore\"\n      }}>{`See here`}</a>{` for detailed instructions on how to do this\nwith IBM Cloud.`}</p>\n    <h3>{`Examples`}</h3>\n    <p>{`We maintain a `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/st4sd/st4sd-examples/\"\n      }}>{`repository`}</a>{` containing\na set of IPython notebooks that illustrate interacting with virtual experiments\nvia these two methods.`}</p>\n    <p>{`If you are using a\n`}<a parentName=\"p\" {...{\n        \"href\": \"/overview/user-environments#local-jupyterserver-with-openshift-st4sd-instance\"\n      }}>{`local JupyterServer environment`}</a>{`\nexecute this snippet to start-up the first notebook illustrating the RESTApi.\nMost of the examples discussed here are in this notebook`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`git clone https://github.com/st4sd/st4sd-examples.git\ncd st4sd-examples\njupyter-notebook notebooks/ST4SD\\\\ Runtime\\\\ API\\\\ Example.ipynb\n`}</code></pre>\n    <p><strong parentName=\"p\"><em parentName=\"strong\">{`Note`}</em>{`: If you’ve installed `}<inlineCode parentName=\"strong\">{`st4sd-runtime-core`}</inlineCode>{` into a virtualenv you will\nneed to activate it before executing above snippet`}</strong></p>\n    <p>{`After reading this page have a browse around the `}<inlineCode parentName=\"p\">{`st4sd-examples`}</inlineCode>{` repository to\nsee what topics are covered in the other notebooks.`}</p>\n    <h2>{`Connecting to ST4SD`}</h2>\n    <p>{`To connect to an ST4SD instance you need to obtain an `}<inlineCode parentName=\"p\">{`auth-token`}</inlineCode>{` or use an\n`}<inlineCode parentName=\"p\">{`api-key`}</inlineCode>{`.`}</p>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p>{`To learn what `}<inlineCode parentName=\"p\">{`auth-token`}</inlineCode>{`s and `}<inlineCode parentName=\"p\">{`api-key`}</inlineCode>{`s are in ST4SD and how to retrieve\nthem, read the\n`}<a parentName=\"p\" {...{\n          \"href\": \"/overview/runtime-service#how-do-i-connect-to-the-st4sd-runtime-service\"\n        }}>{`How do I connect to the ST4SD runtime service?`}</a>{`\nsection.`}</p>\n    </InlineNotification>\n    <p>{`The following code blocks show how to connect to an ST4SD instance.`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Connect using an `}<inlineCode parentName=\"p\">{`auth-token`}</inlineCode>{`:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-python\"\n          }}>{`  import experiment.service.db\n\n  # enter the https:// ST4SD url below\n  url=\"https://\\${your ST4SD url}\"\n\n  # enter your auth-token below\n  auth_token=\"put your authentication/token - do not share it with anyone\"\n\n  api=experiment.service.db.ExperimentRestAPI(url, cc_auth_token=auth_token)\n`}</code></pre>\n        <p parentName=\"li\">{`  You can get an auth token by visiting `}<inlineCode parentName=\"p\">{`https://\\${your ST4SD url}/authorisation/token`}</inlineCode>{`.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Connect using an `}<inlineCode parentName=\"p\">{`api-key`}</inlineCode>{`:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-python\"\n          }}>{`  import experiment.service.db\n\n  # enter the https:// ST4SD url below\n  url=\"https://\\${your ST4SD url}\"\n\n  # enter your auth-token below\n  bearer_key=\"put your api-key - do not share it with anyone\"\n\n  api=experiment.service.db.ExperimentRestAPI(url, cc_bearer_key=bearer_key)\n`}</code></pre>\n        <p parentName=\"li\">{`  You can use the openshift token of service accounts for which there exists a Kubernetes RoleBinding to the `}<inlineCode parentName=\"p\">{`st4sd-authenticate-microservices`}</inlineCode>{` Role.\nSee our documentation on managing users with `}<a parentName=\"p\" {...{\n            \"href\": \"/overview/cloud-manage-users#give-a-group-of-users-access-to-just-the-st4sd-microservices\"\n          }}>{`ST4SD Cloud`}</a>{` for more details.`}</p>\n      </li>\n    </ul>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p>{`ST4SD may print warnings to your python terminal e.g.\n`}<inlineCode parentName=\"p\">{`Unable to import tinydb module - tinydb interface not available`}</inlineCode>{`. These are not\nproblems. They are just informing you that select features are not supported on\nthe machine you are using. You can ignore them.`}</p>\n    </InlineNotification>\n    <p>{`The `}<inlineCode parentName=\"p\">{`ExperimentRestAPI`}</inlineCode>{` initializer validates the authentication token you\nprovided and will raise an exception if it is invalid. If you do not get an\nException that means you can use `}<inlineCode parentName=\"p\">{`api`}</inlineCode>{` to interact with the\n`}<inlineCode parentName=\"p\">{`st4sd-runtime-service`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`st4sd-datastore`}</inlineCode>{` REST-APIs.`}</p>\n    <p>{`The above code needs to be executed once in a notebook session to get an `}<inlineCode parentName=\"p\">{`api`}</inlineCode>{`\ninstance to interact with. All the following examples assume this step has been\ndone.`}</p>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p>{`ST4SD may print warnings to your python terminal e.g.\n`}<inlineCode parentName=\"p\">{`Unable to import pythonlsf - limited LSF functionality will be available`}</inlineCode>{`.\nThese are not problems. They are just informing you that select features are not\nsupported on the machine you are using. You can ignore them.`}</p>\n    </InlineNotification>\n    <h2>{`Adding a virtual experiment package`}</h2>\n    <p>{`Before you can run a virtual experiment you need to add it to your ST4SD\nregistry. You do this using the `}<inlineCode parentName=\"p\">{`api_experiment_push()`}</inlineCode>{` method.`}</p>\n    <p>{`Technically you add a `}<em parentName=\"p\">{`parameterised`}</em>{` virtual experiment package. A\nparameterised package can define particular, potentially complex values, for\nvariables in the virtual experiment to enable specific behaviour and make them\neasier to consume.`}</p>\n    <p>{`You can either type the definition of the\n`}<a parentName=\"p\" {...{\n        \"href\": \"/overview/creating-a-parameterised-package\"\n      }}>{`parameterised package`}</a>{` manually or import it\nfrom another ST4SD registry\n`}<a parentName=\"p\" {...{\n        \"href\": \"/overview/using-the-virtual-experiments-registry-ui\"\n      }}>{`(e.g. the global ST4SD registry)`}</a>{`.\nIn the second-case the registry UI provides with the exact `}<inlineCode parentName=\"p\">{`api_experiment_push`}</inlineCode>{`\ncall you need to execute.`}</p>\n    <h2>{`Running a virtual experiment`}</h2>\n    <p>{`The API call `}<inlineCode parentName=\"p\">{`api_experiment_start`}</inlineCode>{` will start the virtual experiment that a\nparameterised virtual experiment package points to e.g.,`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`rest_uid = api.api_experiment_start(experimentIdentifier, payload=...)\n`}</code></pre>\n    <InlineNotification kind=\"warning\" mdxType=\"InlineNotification\">\n      <p>{`The above example assumes `}<inlineCode parentName=\"p\">{`experimentIdentifier`}</inlineCode>{` is a valid `}<a parentName=\"p\" {...{\n          \"href\": \"/overview/creating-a-parameterised-package#the-parameterised-virtual-experiment-package-identifier-(pvep-identifier)\"\n        }}>{`identifier`}</a>{` of a\nparameterised package (meaning the name of a Parameterised Virtual Experiment Package, with an optional\n`}<a parentName=\"p\" {...{\n          \"href\": \"/overview/creating-a-parameterised-package#package-tags\"\n        }}>{`tag or SHA identifier`}</a>{`). The\nvalue of `}<inlineCode parentName=\"p\">{`payload`}</inlineCode>{` is a python dictionary that contains the run options to the\nexperiment.`}</p>\n    </InlineNotification>\n    <p>{`When you run a given virtual experiment you create a `}<em parentName=\"p\">{`virtual experiment\ninstance`}</em>{`. Each instance is assigned a unique identifier which is returned when\nyou start the virtual experiment. We use the term `}<inlineCode parentName=\"p\">{`ExperimentRunID`}</inlineCode>{` and\n`}<inlineCode parentName=\"p\">{`rest_uid`}</inlineCode>{` to refer to such identifiers.`}</p>\n    <p>{`Starting an experiment involves:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`specifying experiment inputs`}</li>\n      <li parentName=\"ol\">{`(optional) specifying experiment variables`}</li>\n      <li parentName=\"ol\">{`(optional) selecting an experiment platform`}</li>\n      <li parentName=\"ol\">{`(optional) specifying experiment data`}</li>\n    </ol>\n    <p>{`The following sections explain how to fill in the `}<inlineCode parentName=\"p\">{`payload`}</inlineCode>{`.`}</p>\n    <h3>{`Specifying experiment inputs`}</h3>\n    <p><em parentName=\"p\">{`inputs`}</em>{` are files the experiment requires to run - they must be provided. Each\nexperiments documentation should explain what these files are.`}</p>\n    <p>{`The inputs are specified via the key `}<inlineCode parentName=\"p\">{`inputs`}</inlineCode>{` in the payload. The value of this\nkey is a list that has one item, a dictionary, for each required input file\ne.g.,`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`payload = {\n    \"inputs\": [\n      {...},\n      ...\n    ]\n}\n`}</code></pre>\n    <p>{`You can provide the content of input files directly in the payload using the\n`}<inlineCode parentName=\"p\">{`content`}</inlineCode>{` key`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`data = pd.read_csv('mydata.csv')\npayload = {\n    \"inputs\": [{\n       \"content\": data.to_csv(index=False),\n       \"filename\": \"input_filename.csv\"\n   }]\n\n}\n`}</code></pre>\n    <p>{`This specifies that the content of the input file `}<inlineCode parentName=\"p\">{`input_filename.csv`}</inlineCode>{` comes\nfrom the pandas DataFrame `}<inlineCode parentName=\"p\">{`data`}</inlineCode>{`.`}</p>\n    <h3>{`Specifying experiment variables`}</h3>\n    <p><em parentName=\"p\">{`variables`}</em>{` are optional parameters controlling the behaviour of the experiment,\ne.g. number of cpus. They are experiment specific i.e. the same variables don’t\nexist in all experiment and variables controlling similar behaviour in two\nexperiments may not have the same name.`}</p>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p><em parentName=\"p\">{`variables`}</em>{` can only be overridden if the parameterised package allows it. If\nthis is the case the variables that can be set will be listed in the\n`}<inlineCode parentName=\"p\">{`executionOptions`}</inlineCode>{` section in the package description`}</p>\n    </InlineNotification>\n    <p><em parentName=\"p\">{`variables`}</em>{` are set using the `}<inlineCode parentName=\"p\">{`variables`}</inlineCode>{` key in the payload. The value of this\nkey is a dictionary of variable-name, variable-value pairs.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`payload = {\n    ... #Input/data options elided\n   \"variables\": {\n        \"startIndex\": 0,\n        \"numberMolecules\": 1,\n    }\n}\n`}</code></pre>\n    <h3>{`Selecting an experiment platform`}</h3>\n    <p>{`There are cases where variables are dependent on the values of other variables. ST4SD implements a feature called\nexperiment `}<inlineCode parentName=\"p\">{`platform`}</inlineCode>{` to help with these scenarios.`}</p>\n    <p>{`You can think of an experiment platform as a specialization of the experiment for a specific use case. Here are some\nof the ways developers use experiment platforms:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`maintain a single experiment definition which can execute on multiple different compute environments (OpenShift, HPC, ocal mode, local mode with containers, etc )`}</li>\n      <li parentName=\"ol\">{`support mass-configuration of steps to account for different scenarios (e.g. using less accurate methods which are faster to compute, etc)`}</li>\n      <li parentName=\"ol\">{`enable debug mode to assist debugging`}</li>\n    </ol>\n    <p>{`and many more!`}</p>\n    <p>{`The workflow developer can then use the `}<a parentName=\"p\" {...{\n        \"href\": \"/overview/creating-a-parameterised-package#the-parameterisation-section\"\n      }}>{`parameterised package section`}</a>{` of experiments\nto encode the available options for running the experiment.`}</p>\n    <p>{`If the experiment has a `}<inlineCode parentName=\"p\">{`preset`}</inlineCode>{` platform (i.e. the field `}<inlineCode parentName=\"p\">{`parameterisation.presets.platform`}</inlineCode>{` of the Parameterised Virtual Experiment Package definition is set) then the user does not get the option to select which platform to use for the execution of the experiment. This option is hard-coded.`}</p>\n    <p>{`If the experiment has a configurable platform (i.e. the field `}<inlineCode parentName=\"p\">{`parameterisation.executionOptions.platforms`}</inlineCode>{` is set) then the user can select any of the options under `}<inlineCode parentName=\"p\">{`parameterisation.executionOptions.platforms`}</inlineCode>{`. If the user does not explicitly set a platform then the experiment instance will use the 1st platform in the `}<inlineCode parentName=\"p\">{`parameterisation.executionOptions.platforms`}</inlineCode>{` array.`}</p>\n    <h3>{`Specifying experiment data`}</h3>\n    <p><em parentName=\"p\">{`data`}</em>{` refers to experiment configuration files that `}<strong parentName=\"p\">{`may`}</strong>{` be overridden by\nthe user.`}</p>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p><em parentName=\"p\">{`data`}</em>{` files can only be overridden if the parameterised package allows it. If\nthis is the case the files will be listed in the `}<inlineCode parentName=\"p\">{`executionOptions`}</inlineCode>{` section in\nthe package description`}</p>\n    </InlineNotification>\n    <p>{`The data files are specified via the key `}<inlineCode parentName=\"p\">{`data`}</inlineCode>{` in the payload. The value of\nthis key is a list that has one item, a dictionary, for each `}<inlineCode parentName=\"p\">{`data`}</inlineCode>{` file you\nwant to override e.g.,`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`payload = {\n    \"data\": [\n      {...},\n      ...\n    ]\n}\n`}</code></pre>\n    <p>{`The format of the `}<inlineCode parentName=\"p\">{`data`}</inlineCode>{` dictionary is identical to the `}<inlineCode parentName=\"p\">{`input`}</inlineCode>{` dictionary.`}</p>\n    <p>{`Providing data files via S3/Datashim or providing their content directly follows\nsame process as described for inputs. See those sections for details.`}</p>\n    <h3>{`Payload Details`}</h3>\n    <p>{`The following is the complete structure of the `}<inlineCode parentName=\"p\">{`api_experiment_start()`}</inlineCode>{` payload\n(in `}<inlineCode parentName=\"p\">{`YAML`}</inlineCode>{`). This includes some advanced options not discussed here.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`platform: name of platform (optional - see parameterisation notes)\ninputs: # optional (parameterised packages may have no inputs)\n  # see notes for interaction with Dataset/S3\n  - filename: str # required\n    content: str # optional - see S3 notes\ndata: # optional (parameterised packages may have no overiddable data files)\n  # see notes for interaction with Dataset/S3\n  - filename: str # required\n    content: str # optional - see S3 notes\nvolumes: # optional\n  - type:\n      # children fields are mutually exclusive - there must be exactly 1\n      persistentVolumeClaim: name of PVC object\n      dataset: name of Datashim dataset (see notes)\n      configMap: name of ConfigMap object\n      secret: name of Secret object\n    applicationDependency: name of appDep to bind to volume (optional)\n    # subPath applies only to pvc and dataset types\n    subPath: path inside volume to mount (optional, defaults to root of object)\nvariables: # optional - must adhere to parameterisation rules (see notes)\n  $name: $value\nadditionalOptions: # optional runtime arguments to elaunch.py\n  # they cannot override runtime arguments in the package parameterisation\n  - \"--someArgument=value\"\nenvironmentVariables: # optional\n  # creates environment variable in the pod that hosts elaunch.py\n  $name: $value\nmetadata: # optional\n  # custom metadata to insert into the \"user-metadata\" MongoDB document of run\n  $name: $value\ns3: # optional - used to read inputs/data with no \"content\" field\n  # dataset is mutually exclusive with any other sibling fields\n  dataset: name of Datashim dataset # optional\n  # can only provide fields below if dataset is unset\n  accessKeyID: S3 accessKeyID # optional\n  secretAccessKey: S3 secretAccessKey # optional\n  bucket: name of S3 bucket # optional\n  endpoint: the s3 endpoint # optional\n  region: the s3 region # optional\n# s3Store and datasetStoreURI are mutually exclusive and both optional\n# when one is provided, orchestrator uploads key-outputs to S3 after Run terminates\ns3Store: # optional\n  bucketPath:\n    path under bucket to store key-outputs files (default is\n    \"workflow_instances/\")\n  credentials: (same as s3 field)\ndatasetStoreURI: a \"dataset/$bucketPath\" URI (optional)\nruntimePolicy: # optional\n  name: the name of the runtime policy (required)\n  config: # optional\n    $key: Any # each runtime-policy has its own config-schema\n`}</code></pre>\n    <InlineNotification kind=\"info\" mdxType=\"InlineNotification\">\n      <p>{`The schema above is in YAML format. If you are using python (i.e. an instance of\n`}<inlineCode parentName=\"p\">{`experiment.service.db.ExperimentRestAPI`}</inlineCode>{`) you should either create an\nequivalent python dictionary OR a python string that contains the yaml\ndefinition and then convert the string into a dictionary using\n`}<inlineCode parentName=\"p\">{`yaml.loads(the_string)`}</inlineCode>{`.`}</p>\n    </InlineNotification>\n    <p><strong parentName=\"p\">{`Notes`}</strong></p>\n    <ol>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`inputs`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`data`}</inlineCode>{` file-specifications have an optional `}<inlineCode parentName=\"li\">{`content`}</inlineCode>{` field. If\nthis field is missing then the contents of the files are expected to exist on\nS3 or in a Dataset. When `}<inlineCode parentName=\"li\">{`s3`}</inlineCode>{` exists then the `}<inlineCode parentName=\"li\">{`filename`}</inlineCode>{` field acts as the\npath inside the S3 bucket (or dataset) to use for reading the content of the\ninput/data file.`}</li>\n      <li parentName=\"ol\">{`Dataset objects are only available if a cluster-admin has installed\n`}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/datashim-io/datashim\"\n        }}>{`Datashim`}</a>{` on the cluster.`}</li>\n      <li parentName=\"ol\">{`The fields `}<inlineCode parentName=\"li\">{`additionalOptions`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`data`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`inputs`}</inlineCode>{`, `}<inlineCode parentName=\"li\">{`platform`}</inlineCode>{`, and `}<inlineCode parentName=\"li\">{`variables`}</inlineCode>{`\nmust adhere to parameterisation rules. See the\n`}<a parentName=\"li\" {...{\n          \"href\": \"/overview/creating-a-parameterised-package#the-parameterisation-section\"\n        }}>{`parameterised package documentation`}</a>{`\nfor more information.`}</li>\n    </ol>\n    <h2>{`Getting the status of a virtual experiment instance`}</h2>\n    <p>{`A common user-task is to check the status of a virtual experiment instance. For\nexample, to see if it is still running, or, if finished, if there was any error.`}</p>\n    <p>{`The API method `}<inlineCode parentName=\"p\">{`api_rest_uid_status`}</inlineCode>{` returns the status of a given `}<inlineCode parentName=\"p\">{`rest_uid`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`# put here the rest_uid of the virtual experiment instance\nrest_uid = \"toxicity-predictions-trol7a\"\n\nstatus = api.api_rest_uid_status(rest_uid)\n`}</code></pre>\n    <p>{`The variable `}<inlineCode parentName=\"p\">{`status`}</inlineCode>{` contains various information about the virtual experiment\ninstance in addition to its status. The `}<em parentName=\"p\">{`execution`}</em>{` status is under the `}<inlineCode parentName=\"p\">{`status`}</inlineCode>{`\nkey, you can inspect by executing:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`import json\nprint(json.dumps(status['status'], indent=2))\n`}</code></pre>\n    <p>{`The most important field is `}<inlineCode parentName=\"p\">{`exit-status`}</inlineCode>{`. ST4SD sets it after an experiment terminates.`}</p>\n    <p>{`Possible values:`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Success`}</strong>{`: The experiment existed successfully`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Failed`}</strong>{`: The experiment failed (at least one component)`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Stopped`}</strong>{`: The experiment was stopped/killed`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`N/A`}</strong>{`: The experiment is running and doesn’t have an exit-status yet`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`\"\"`}</strong>{` (Empty): The experiment has not started.`}</li>\n    </ul>\n    <p>{`For the full schema of the `}<inlineCode parentName=\"p\">{`status`}</inlineCode>{` dictionary see the section describing the `}<a parentName=\"p\" {...{\n        \"href\": \"#the-status-of-an-experiment-instance\"\n      }}>{`status of an experiment instance`}</a>{`.`}</p>\n    <h2>{`Get the details of a virtual experiment instance`}</h2>\n    <p>{`In addition to the execution status information the `}<inlineCode parentName=\"p\">{`status`}</inlineCode>{` key also contains\nmetadata on the experiment. To see it:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`import json\nprint(json.dumps(status['status']['meta'], indent=2))\n`}</code></pre>\n    <p>{`This will print a dictionary with the following keys`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`arguments`}</inlineCode>{`: The command-line of the orchestrator`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`data`}</inlineCode>{`: The list of files that override data files`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`input`}</inlineCode>{`: The list of input files`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`pid`}</inlineCode>{`: The process ID of the st4sd orchestrator`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`platform`}</inlineCode>{`: The name of the platform that the virtual experiment instance\nexecutes`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`userVariables`}</inlineCode>{`: User provided variables, the schema is\n`}<inlineCode parentName=\"li\">{`{'global':{name:value}, 'stages':{index:{name:value}}}`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`variables`}</inlineCode>{`: Global and stage variables active in the `}<inlineCode parentName=\"li\">{`platform`}</inlineCode>{`-scope that\nthe virtual experiment executes. The schema is\n`}<inlineCode parentName=\"li\">{`{'global':{name:value}, 'stages':{index:{name:value}}}`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`hybridPlatform`}</inlineCode>{`: Name of hybrid-platform for communicating with LSF (can be\nNone),`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`userMetadata`}</inlineCode>{`: A dictionary with `}<inlineCode parentName=\"li\">{`key(str): Any`}</inlineCode>{` value pairs that users can\nprovide`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`instanceName`}</inlineCode>{`: The name of the directory containing the virtual experiment\ninstance.`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`version`}</inlineCode>{`: The version of the st4sd orchestrator`}</li>\n    </ul>\n    <h2>{`Retrieving the outputs of a virtual experiment instance`}</h2>\n    <p>{`There are multiple ways to retrieve outputs of virtual experiments: via a\nvirtual experiment interface, key-outputs, the Datastore APIs, and by leveraging\nST4SD’s automated upload to S3.`}</p>\n    <AnchorLinks small mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Retrieving the properties measured by an experiment</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Retrieving key-outputs</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Automatically uploading key-outputs to S3</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">\n    Listing outputs produced by virtual experiment components\n  </AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Retrieving outputs via the ST4SD Datastore APIs</AnchorLink>\n    </AnchorLinks>\n    <h3>{`Retrieving the properties measured by an experiment`}</h3>\n    <p>{`Some virtual experiments define interfaces which make it simple for users to\nretrieve the input systems and measured properties from runs of that virtual\nexperiment.`}</p>\n    <p>{`Learn how to use virtual experiment interfaces `}<a parentName=\"p\" {...{\n        \"href\": \"/overview/using-a-virtual-experiment-interface/#getting-the-properties\"\n      }}>{`here`}</a>{`.`}</p>\n    <h3>{`Retrieving key-outputs`}</h3>\n    <p>{`Key-Outputs are files produced by an experiment that the developer has flagged\nas being of special interest. Since the names of the file can be generic the\ndeveloper gives the key-output a descriptive label to better explain what it is.`}</p>\n    <p>{`Information on the key-outputs of a virtual experiment instance are stored in\nthe dictionary returned by `}<inlineCode parentName=\"p\">{`api_rest_uid_status`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`status = api.api_rest_uid_status(restUID)\npprint.pprint(instance_status['outputs'])\n`}</code></pre>\n    <p>{`An example of the output of this is`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`{'OptimisationResults': {'creationtime': '1669584128.077387',\n                         'description': '',\n                         'filename': 'energies.csv',\n                         'filepath': 'stages/stage1/ExtractEnergies/energies.csv',\n                         'final': 'yes',\n                         'production': 'yes',\n                         'type': '',\n                         'version': '1'}}\n`}</code></pre>\n    <p>{`In the above example, the experiment has one key-output called `}<strong parentName=\"p\">{`OptimisationResults`}</strong>{`. This\nrefers to a file `}<inlineCode parentName=\"p\">{`energies.csv`}</inlineCode>{` produced by the component `}<inlineCode parentName=\"p\">{`ExtractEnergies`}</inlineCode>{` in\nthe given experiment.`}</p>\n    <p>{`To retrieve a key-output we can use `}<inlineCode parentName=\"p\">{`api_rest_uid_output`}</inlineCode>{`. This method returns\nthe contents as bytes so it needs to be converted to a string. Note: replace\n`}<inlineCode parentName=\"p\">{`OptimisationResults`}</inlineCode>{` with the name of a key-output relevant to an experiment\nyou have run.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`filename, contents = api.api_rest_uid_output(rest_uid, 'OptimisationResults')\ncontents = contents.decode('utf-8', 'ignore')\n# read it into a pandas dataframe\ndf = pd.read_csv(io.StringIO(contents), sep=\",\", skipinitialspace=True)\n`}</code></pre>\n    <h3>{`Automatically uploading key-outputs to S3`}</h3>\n    <p>{`ST4SD supports automatically uploading key-outputs to S3. To enable this feature\ninclude the following values in the `}<inlineCode parentName=\"p\">{`payload`}</inlineCode>{` you provide to\n`}<inlineCode parentName=\"p\">{`api.api_experiment_start(experimentId, payload)`}</inlineCode>{` (see\n`}<a parentName=\"p\" {...{\n        \"href\": \"#running-a-virtual-experiment\"\n      }}>{`Running a virtual experiment`}</a>{` for more\ninformation):`}</p>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p>{`See the `}<a parentName=\"p\" {...{\n          \"href\": \"/overview/UsingCloudObjectStore\"\n        }}>{`Cloud Object Store`}</a>{` page for examples of\ngetting the values to populate the `}<inlineCode parentName=\"p\">{`credentials`}</inlineCode>{` section.`}</p>\n    </InlineNotification>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p>{`Note that `}<inlineCode parentName=\"p\">{`bucketPath`}</inlineCode>{` is optional and it defaults to `}<inlineCode parentName=\"p\">{`/`}</inlineCode>{`.`}</p>\n    </InlineNotification>\n    <p>{`The following example stores the key-outputs under `}<inlineCode parentName=\"p\">{`run1_output`}</inlineCode>{` in an bucket\ncalled`}<inlineCode parentName=\"p\">{`my-bucket`}</inlineCode></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"s3Store\":{\n      \"credentials\": {\n        \"accessKeyID\": \"$S3_AccessKeyID\",\n        \"secretAccessKey\": \"$S3_SecretAccessKey\",\n        \"endpoint\": \"$S3_ENDPOINT\",\n        \"region\": \"$S3_Region\",\n        \"bucket\": \"my-bucket\"\n      },\n      \"bucketPath\": \"/run1_output/\"\n    },\n`}</code></pre>\n    <h3>{`Listing outputs produced by virtual experiment components`}</h3>\n    <p>{`Before being able to retrieve the contents of the output files that the\nvirtual experiment components produce we need to know their paths. We start by\nretrieving the list of components that were part of our experiment through these\ntwo calls:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`metadata = api.cdb_get_user_metadata_document_for_rest_uid(rest_uid)\ncomponents = api.cdb_get_document_component(instance=metadata['instance'])\n`}</code></pre>\n    <p>{`The list of full paths of the output files produced by each components will then\nbe available using the `}<inlineCode parentName=\"p\">{`files`}</inlineCode>{` key. We can access it for component `}<inlineCode parentName=\"p\">{`0`}</inlineCode>{` as such:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`component_0_files=components[0]['files']\n`}</code></pre>\n    <h3>{`Retrieving outputs via the ST4SD Datastore APIs`}</h3>\n    <p>{`To retrieve outputs we use the `}<inlineCode parentName=\"p\">{`cdb_get_file_from_instance_uri`}</inlineCode>{` function.`}</p>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p>{`In this example we reference variables that we retrieved in the previous section\n(`}<a parentName=\"p\" {...{\n          \"href\": \"#listing-outputs-produced-by-virtual-experiment-components\"\n        }}>{`Listing outputs produced by virtual experiment components`}</a>{`)`}</p>\n    </InlineNotification>\n    <p>{`This function, however, expects to receive relative paths instead of full ones.\nWe can change our list of paths with this list comprehension:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`component_0_files_relative = [component_file[component_file.index('/stages/'):] for component_file in component_0_files]\n`}</code></pre>\n    <p>{`Here we show how to retrieve the first file produced by component `}<inlineCode parentName=\"p\">{`0`}</inlineCode>{` from the\nprevious example:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`data = api.cdb_get_file_from_instance_uri(document[0]['instance'], component_0_files_relative[0])\n`}</code></pre>\n    <h2>{`Stopping a virtual experiment instance`}</h2>\n    <p>{`The API call to cancel and delete a virtual experiment instance is\n`}<inlineCode parentName=\"p\">{`api_rest_uid_delete`}</inlineCode>{`. Use this if you want to stop a run for any reason.`}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`api_rest_uid_delete()`}</inlineCode>{` method `}<em parentName=\"p\">{`does not affect the files`}</em>{` that the run has\nalready generated. However, it does cause the run, and any components that are\nstill running, to terminate. It also deletes any Kubernetes objects that have\nbeen created by the run.`}</p>\n    <p>{`You may also use this to delete Kubernetes objects created for running this\nvirtual experiment instance. Note that deleting the virtual experiment instance\n`}<strong parentName=\"p\">{`does not`}</strong>{` affect the files that it has produced.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`# put here the rest_uid of the virtual experiment instance\nrest_uid = \"toxicity-predictions-trol7a\"\n\napi.api_rest_uid_delete(rest_uid)\n`}</code></pre>\n    <h2>{`More options when starting an experiment`}</h2>\n    <h3>{`Providing inputs via S3`}</h3>\n    <p>{`If your input file is in an s3 bucket or a Datashim dataset you use the `}<inlineCode parentName=\"p\">{`s3`}</inlineCode>{`\ntop-level key of the payload dictionary to provides details for accessing the\nbucket/dataset.`}</p>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <ul>\n        <li parentName=\"ul\">{`Only one bucket/dataset can be specified in the payload i.e. all files you\nwant to pass an experiment from s3 must be in the same bucket/dataset`}</li>\n        <li parentName=\"ul\">{`The value of the `}<inlineCode parentName=\"li\">{`filename`}</inlineCode>{` key should be the path inside the bucket/dataset to find\nthe file.`}</li>\n        <li parentName=\"ul\">{`If the filenames in the bucket/dataset do not match the names expected by the experiment you can ask ST4SD to map the S3 files to the input files by suffixing the S3 uri with the name of the input file: e.g. you can map the file `}<inlineCode parentName=\"li\">{`/path/my-file`}</inlineCode>{` to the input `}<inlineCode parentName=\"li\">{`my-input`}</inlineCode>{` with the following filename definition: `}<inlineCode parentName=\"li\">{`\"filename\": \"path/my-file:my-input\"`}</inlineCode></li>\n      </ul>\n    </InlineNotification>\n    <p>{`Example: Using s3. Fill the `}<inlineCode parentName=\"p\">{`s3`}</inlineCode>{` parameters with the required values. In this\ncase `}<inlineCode parentName=\"p\">{`input_filename.csv`}</inlineCode>{` is in the top-level of the bucket.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`payload = {\n    \"inputs\": [{\n       \"filename\": \"input_filename.csv\"\n   }],\n  \"s3\": {\n      \"accessKeyID\": \"$S3_AccessKeyID\",\n      \"secretAccessKey\": \"$S3_SecretAccessKey\",\n      \"bucket\": \"$S3_BUCKET_NAME\",\n      \"endpoint\": \"$S3_ENDPOINT\",\n      \"region\": \"$S3_Region\"\n  }\n}\n`}</code></pre>\n    <h3>{`Providing inputs using Datashim`}</h3>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/datashim-io/datashim\"\n      }}>{`Datashim`}</a>{` is a Kubernetes Framework that presents S3 and NFS storage\nto pods in the form of PersistentVolumeClaim (PVC) resources. Datashims introduces a custom resource\ncalled Dataset which acts as a proxy to the S3 and NFS storage. The framework orchestrates the provisioning\nof Persistent Volume Claims and ConfigMaps needed for each Dataset. To enable support for using Datasets to\nprovide your input and data files to experiments there is a a one-time step for the\nentire cluster. A cluster-administrator must follow the installation instructions for Datashim in\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/datashim-io/datashim#quickstart\"\n      }}>{`https://github.com/datashim-io/datashim#quickstart`}</a>{`.`}</p>\n    <p>{`Following that, users can create Datasets in a namespace that holds the ST4SD deployment following the\ninstructions in `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/datashim-io/datashim\"\n      }}>{`https://github.com/datashim-io/datashim`}</a>{`.`}</p>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <ul>\n        <li parentName=\"ul\">{`If the filenames in the bucket do not match the names expected by the experiment you can ask ST4SD to map\nthe files in the Dataset to the input files by suffixing the S3 uri with the name of the input file:\ne.g. you can map the file `}<inlineCode parentName=\"li\">{`path/my-file`}</inlineCode>{` to the input `}<inlineCode parentName=\"li\">{`my-input`}</inlineCode>{` with the following filename definition:\n`}<inlineCode parentName=\"li\">{`\"filename\": \"path/my-file:my-input\"`}</inlineCode></li>\n        <li parentName=\"ul\">{`Only one dataset can be specified in the payload i.e. all files you\nwant to pass an experiment must be in the same Dataset`}</li>\n        <li parentName=\"ul\">{`The value of the `}<inlineCode parentName=\"li\">{`filename`}</inlineCode>{` key should be the path inside the Dataset to find the file.`}</li>\n      </ul>\n    </InlineNotification>\n    <p>{`In the below example, the experiment will load the input `}<inlineCode parentName=\"p\">{`input_filename.csv`}</inlineCode>{` from the path\n`}<inlineCode parentName=\"p\">{`data/input_filename.csv`}</inlineCode>{` in the dataset `}<inlineCode parentName=\"p\">{`$MYDATASET_NAME`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`\npayload = {\n    \"inputs\": [{\n       \"filename\": \"data/input_filename.csv\"\n   }],\n  \"s3\": {\n      \"dataset\": \"$MYDATASET_NAME\"\n  }\n}\n`}</code></pre>\n    <h2>{`The status of an experiment instance`}</h2>\n    <p>{`Use the following python code to get the status of an experiment instance:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`# put here the rest_uid of the virtual experiment instance\nrest_uid = \"toxicity-predictions-trol7a\"\n\nstatus = api.api_rest_uid_status(rest_uid)\n`}</code></pre>\n    <InlineNotification kind=\"warning\" mdxType=\"InlineNotification\">\n      <p>{`Values are case sensitive`}</p>\n    </InlineNotification>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`experiment-state`}</inlineCode>{`: Indicates the execution state of the experiment instance`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><strong parentName=\"li\">{`Possible Values`}</strong>{`:`}\n            <ul parentName=\"li\">\n              <li parentName=\"ul\"><strong parentName=\"li\">{`unscheduled`}</strong>{`: The experiment has not been scheduled to run yet. This\ncan be due to lack of resources, which may resolve, or be a critical issue\n(unable to pull ST4SD images, unable to mount volumes)`}</li>\n              <li parentName=\"ul\"><strong parentName=\"li\">{`unschedulable`}</strong>{`: Required pre-tasks for the experiment execution failed\ne.g. could not get workflow source, could not download s3 inputs.`}</li>\n              <li parentName=\"ul\"><strong parentName=\"li\">{`Initialising`}</strong>{`: The experiment is starting up`}</li>\n              <li parentName=\"ul\"><strong parentName=\"li\">{`running`}</strong>{`: The experiment has started running components`}</li>\n              <li parentName=\"ul\"><strong parentName=\"li\">{`waiting_on_resource`}</strong>{`: A component in the active stage is waiting on\nresource`}</li>\n              <li parentName=\"ul\"><strong parentName=\"li\">{`suspended`}</strong>{`: The workflow execution has been suspended`}</li>\n              <li parentName=\"ul\"><strong parentName=\"li\">{`finished`}</strong>{`: The experiment is finished.`}</li>\n              <li parentName=\"ul\"><strong parentName=\"li\">{`failed`}</strong>{`: `}<strong parentName=\"li\">{`Only`}</strong>{` set if the experiment encountered an error during\ninitialisation (failed to run any steps of workflow after being started).\nFor example, fail to parse arguments, fail to create directory structures.`}</li>\n            </ul>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`exit-status`}</inlineCode>{`: Indicates how a `}<strong parentName=\"p\">{`completed`}</strong>{` experiment exited`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`This receives its final value `}<em parentName=\"li\">{`after`}</em>{` `}<inlineCode parentName=\"li\">{`experiment-state`}</inlineCode>{` transitions to\neither `}<inlineCode parentName=\"li\">{`finished`}</inlineCode>{` or, in rare circumstances, `}<inlineCode parentName=\"li\">{`failed`}</inlineCode>{` (see above). Value\nwill be “N/A” or \"\" (empty) before this.`}</li>\n          <li parentName=\"ul\"><strong parentName=\"li\">{`Possible Values`}</strong>{`:`}\n            <ul parentName=\"li\">\n              <li parentName=\"ul\"><strong parentName=\"li\">{`Success`}</strong>{`: The experiment existed successfully`}</li>\n              <li parentName=\"ul\"><strong parentName=\"li\">{`Failed`}</strong>{`: The experiment failed (at least one component)`}</li>\n              <li parentName=\"ul\"><strong parentName=\"li\">{`Stopped`}</strong>{`: The experiment was stopped/killed`}</li>\n              <li parentName=\"ul\"><strong parentName=\"li\">{`N/A`}</strong>{`: The experiment is running and doesn’t have an exit-status yet`}</li>\n              <li parentName=\"ul\"><strong parentName=\"li\">{`\"\"`}</strong>{` (Empty): The experiment has not started.`}</li>\n            </ul>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`error-description`}</inlineCode>{`: If the `}<inlineCode parentName=\"p\">{`exit-status`}</inlineCode>{` is `}<strong parentName=\"p\"><em parentName=\"strong\">{`Failed`}</em></strong>{` the value of this\nkey is a string which explains the failure cause.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`total-progress`}</inlineCode>{`: A number in `}{`[0.0, 1.0]`}{` indicating the progress of the\nexperiment. Note that workflow developers may decide to control this value.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`current-stage`}</inlineCode>{`: UID (e.g. `}<inlineCode parentName=\"p\">{`stage0`}</inlineCode>{`) of the active stage with the lowest stage\nindex`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`stage-state`}</inlineCode>{`: Indicates the state of the active stage (a stage with a\ncomponent running) with with the lowest stage index. Value is one of\n`}<inlineCode parentName=\"p\">{`[\"Initialising\", \"finished\", \"waiting_on_resource\",\"running\", \"component_shutdown\", \"failed\"]`}</inlineCode></p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`stage-progress`}</inlineCode>{`: A number in `}{`[0.0, 1.0]`}{` indicating the progress of the active\nstage with the lowest stage index. Note that workflow developers may decide to\ncontrol this value.`}</p>\n      </li>\n    </ul>\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p>{`An experiment status can have `}<inlineCode parentName=\"p\">{`experiment-state=finished`}</inlineCode>{` with\n`}<inlineCode parentName=\"p\">{`exit-status=failed`}</inlineCode>{`. This means that the experiment completed with a failure.`}</p>\n    </InlineNotification>\n    <InlineNotification kind=\"warning\" mdxType=\"InlineNotification\">\n      <p>{`In the case where there are no systems issues preventing an experiment to start\n`}<inlineCode parentName=\"p\">{`experiment-state`}</inlineCode>{` will always become `}<inlineCode parentName=\"p\">{`finished`}</inlineCode>{`. `}<strong parentName=\"p\">{`You must check `}<inlineCode parentName=\"strong\">{`exit-status`}</inlineCode>{`\nfor errors.`}</strong></p>\n    </InlineNotification>\n    <p>{`Here is an example of the status dictionary`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"experiment-state\": \"finished\",\n  \"total-progress\": 1.0,\n  \"exit-status\": \"Success\",\n  \"stages\": [\n    \"Toxicity-prediction\"\n  ],\n  \"current-stage\": \"Toxicity-prediction\",\n  \"stage-state\": \"finished\",\n  \"stage-progress\": 1.0,\n  \"error-description\": \"\",\n  \"meta\": { ... omitted ... }\n}\n`}</code></pre>\n    <p>{`In the above example:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`The orchestrator observed that the virtual experiment instance terminated\n(`}<inlineCode parentName=\"li\">{`experiment-state`}</inlineCode>{` = `}<inlineCode parentName=\"li\">{`finished`}</inlineCode>{`)`}</li>\n      <li parentName=\"ol\">{`The virtual experiment instance has produced all its outputs\n(`}<inlineCode parentName=\"li\">{`total-progress`}</inlineCode>{` = `}<inlineCode parentName=\"li\">{`1.0`}</inlineCode>{`)`}</li>\n      <li parentName=\"ol\">{`The virtual experiment instance completed successfully (`}<inlineCode parentName=\"li\">{`exit-status`}</inlineCode>{` =\n`}<inlineCode parentName=\"li\">{`Success`}</inlineCode>{`)`}</li>\n      <li parentName=\"ol\">{`The experiment had 1 stage (`}<inlineCode parentName=\"li\">{`stages`}</inlineCode>{` = `}<inlineCode parentName=\"li\">{`[\"Toxicity-prediction\"]`}</inlineCode>{`)`}</li>\n      <li parentName=\"ol\"><inlineCode parentName=\"li\">{`Toxicity-prediction`}</inlineCode>{` was the most recently executed stage with the lowest\nstage index (`}<inlineCode parentName=\"li\">{`current-stage`}</inlineCode>{` = `}<inlineCode parentName=\"li\">{`Toxicity-prediction`}</inlineCode>{`).`}\n        <ol parentName=\"li\">\n          <li parentName=\"ol\">{`All its tasks terminated and they were all successful (`}<inlineCode parentName=\"li\">{`stage-state`}</inlineCode>{` =\n`}<inlineCode parentName=\"li\">{`finished`}</inlineCode>{`)`}</li>\n          <li parentName=\"ol\">{`It reached its max progress (`}<inlineCode parentName=\"li\">{`stage-progress`}</inlineCode>{` = `}<inlineCode parentName=\"li\">{`1.0`}</inlineCode>{`)`}</li>\n        </ol>\n      </li>\n      <li parentName=\"ol\">{`The virtual experiment instance did not raise any errors (`}<inlineCode parentName=\"li\">{`error-description`}</inlineCode>{`\n= `}<inlineCode parentName=\"li\">{`\"\"`}</inlineCode>{`)`}</li>\n    </ol>\n    <h2>{`Learn more`}</h2>\n    <div className=\"expressive-content-list-group\">\n  <ExpressiveList title=\"Mastering stp\" background=\"true\" pictogram={<Tools mdxType=\"Tools\" />} mdxType=\"ExpressiveList\">\n        <p>{`Learn how to master `}<a parentName=\"p\" {...{\n            \"href\": \"/overview/stp\"\n          }}>{`our command line tool`}</a>{`, `}<inlineCode parentName=\"p\">{`stp`}</inlineCode>{`, for creating and\nmanaging virtual experiment packages.`}</p>\n  </ExpressiveList>\n      <ExpressiveList title=\"Take a look under the hood\" background=\"true\" pictogram={<ArtTools_01 mdxType=\"ArtTools_01\" />} mdxType=\"ExpressiveList\">\n        <p>{`Want to learn more about how experiments are run? Learn about the\n`}<a parentName=\"p\" {...{\n            \"href\": \"/overview/direct-run\"\n          }}>{`command line tool`}</a>{` that the API uses to launch experiments.`}</p>\n  </ExpressiveList>\n  \n    </div>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","mdx","PageDescription","AnchorLinks","AnchorLink","InlineNotification","ExpressiveList","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","Object","assign","mdxType","parentName","kind","small","className","title","background","pictogram","Tools","ArtTools_01","isMDXComponent"],"sourceRoot":""}