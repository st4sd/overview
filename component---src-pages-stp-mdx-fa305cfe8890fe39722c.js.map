{"version":3,"file":"component---src-pages-stp-mdx-fa305cfe8890fe39722c.js","mappings":"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","sources":["webpack://st4sd-overview/./src/pages/stp.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/travis/build/st4sd/overview/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst Video = makeShortcode(\"Video\");\nconst Column = makeShortcode(\"Column\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    {/*\n       Copyright IBM Inc. All Rights Reserved.\n      SPDX-License-Identifier: Apache-2.0\n     */}\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`The `}<inlineCode parentName=\"p\">{`stp`}</inlineCode>{` command line tool simplifies common operations in ST4SD and performs\nadditional checks so you donâ€™t have to.`}</p>\n      <InlineNotification kind=\"info\" mdxType=\"InlineNotification\">\n        <p><strong parentName=\"p\">{`NOTE:`}</strong>{` for all commands, you can always add the `}<inlineCode parentName=\"p\">{`-h`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`--help`}</inlineCode>{` flag to see\nall the available options and descriptions.`}</p>\n      </InlineNotification>\n    </PageDescription>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Logging in to your ST4SD instance</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Working with PVEPs</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Working with contexts</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Working with stack-wide settings</AnchorLink>\n    </AnchorLinks>\n    <h2>{`Logging in to your ST4SD instance`}</h2>\n    <InlineNotification kind=\"info\" mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`NOTE:`}</strong>{` `}<inlineCode parentName=\"p\">{`stp`}</inlineCode>{` supports multiple ST4SD instances at the same time.`}</p>\n    </InlineNotification>\n    <p>{`The easiest way to log into your ST4SD instance via `}<inlineCode parentName=\"p\">{`stp`}</inlineCode>{` is to use the snippet\nin the Registry UI. If youâ€™re logged into your OpenShift cluster, you can paste\nthe following command in your terminal to automatically open the ST4SD Registry\nUI:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-commandline\"\n      }}>{`open \"https://$(oc get route st4sd-authentication -o jsonpath=\"{.spec.host}\")/registry-ui/\"\n`}</code></pre>\n    <p>{`Here you will:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Click on the `}<strong parentName=\"li\">{`Login on stp`}</strong>{` button`}</li>\n      <li parentName=\"ol\">{`Press the copy button in the information box that youâ€™re presented with and\npaste the content of the information box in your terminal.`}</li>\n      <li parentName=\"ol\">{`Once prompted, write `}<inlineCode parentName=\"li\">{`y`}</inlineCode>{` and press enter in your terminal to be brought to\nthe authentication service.`}</li>\n      <li parentName=\"ol\">{`Authenticate if needed and copy the token that is displayed.`}</li>\n      <li parentName=\"ol\">{`Paste the token in the terminal and press enter. The login procedure should\nbe completed soon.`}</li>\n    </ol>\n    <p>{`You can also follow this video walkthrough:`}</p>\n    <Video src=\"/overview/7f5f6953634bddfb46a1697625766487/logging-in-via-stp.mp4\" mdxType=\"Video\"></Video>\n    <h2>{`Working with PVEPs`}</h2>\n    <AnchorLinks small mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Creating a PVEP</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Downloading a PVEP</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Importing a PVEP</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Pushing a PVEP</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Testing a PVEP</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Updating a PVEP's definition</AnchorLink>\n    </AnchorLinks>\n    <h3>{`Creating a PVEP`}</h3>\n    <p>{`To publish an experiment to our registry after\n`}<a parentName=\"p\" {...{\n        \"href\": \"/overview/workflow-specification\"\n      }}>{`writing a workflow`}</a>{`, we need to create a\n`}<em parentName=\"p\">{`Parameterised Virtual Experiment Package`}</em>{` -or PVEP for short- that defines how\nto run a virtual experiment in a particular way. `}<inlineCode parentName=\"p\">{`stp`}</inlineCode>{` can create a working\ntemplate for you with the `}<inlineCode parentName=\"p\">{`stp package create`}</inlineCode>{` command. Set the `}<inlineCode parentName=\"p\">{`--from`}</inlineCode>{` flag to\npoint to a git repository containing your experiment and optionally the\n`}<inlineCode parentName=\"p\">{`--manifest`}</inlineCode>{` flag (in case your experiment has a manifest).`}</p>\n    <Column colMd={5} colLg={8} mdxType=\"Column\">\n  <Video src=\"/overview/25f0deb1ca2f03b8fa6da311faeb5d2f/stp-package-create.mp4\" mdxType=\"Video\"></Video>\n    </Column>\n    <h3>{`Downloading a PVEP`}</h3>\n    <p><inlineCode parentName=\"p\">{`stp`}</inlineCode>{` helps us programmatically download a PVEP definition via the\n`}<inlineCode parentName=\"p\">{`stp package download`}</inlineCode>{` command. If youâ€™re downloading a PVEP from a registry\nthat requires authentication, you can add the `}<inlineCode parentName=\"p\">{`--from-context`}</inlineCode>{` flag to ensure\n`}<inlineCode parentName=\"p\">{`stp`}</inlineCode>{` can authenticate correctly.`}</p>\n    <Column colMd={5} colLg={8} mdxType=\"Column\">\n  <Video src=\"/overview/fdf5fcd2f82fd1a429b9abe1827249f5/stp-package-download.mp4\" mdxType=\"Video\"></Video>\n    </Column>\n    <h3>{`Importing a PVEP`}</h3>\n    <p>{`ST4SD provides a\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://registry.st4sd.res.ibm.com/\"\n      }}>{`public registry of virtual experiments`}</a>{`\nthat you can freely import from. To help you import PVEPs from any registry to\nyour own instance, `}<inlineCode parentName=\"p\">{`stp`}</inlineCode>{` provides the `}<inlineCode parentName=\"p\">{`stp package import`}</inlineCode>{` command. Make sure\nyou add the `}<inlineCode parentName=\"p\">{`--from-context`}</inlineCode>{` flag if youâ€™re importing from a private ST4SD\ninstance to ensure `}<inlineCode parentName=\"p\">{`stp`}</inlineCode>{` can authenticate correctly.`}</p>\n    <Column colMd={5} colLg={8} mdxType=\"Column\">\n  <Video src=\"/overview/ff1ae82a41ae857ea0e5d92b18b3c35e/stp-package-import.mp4\" mdxType=\"Video\"></Video>\n    </Column>\n    <h3>{`Pushing a PVEP`}</h3>\n    <p><inlineCode parentName=\"p\">{`stp`}</inlineCode>{` makes it easy for you to push PVEPs to registry instances, simply run\n`}<inlineCode parentName=\"p\">{`stp package push`}</inlineCode>{` and give it the path to your PVEP for it to be added to the\nregistry from your active context.`}</p>\n    <Column colMd={5} colLg={8} mdxType=\"Column\">\n  <Video src=\"/overview/7dc1f04e3665d79d888799e25823c07b/stp-package-push.mp4\" mdxType=\"Video\"></Video>\n    </Column>\n    <h3>{`Testing a PVEP`}</h3>\n    <p><inlineCode parentName=\"p\">{`stp`}</inlineCode>{` supports testing PVEP syntax locally before pushing them to the Registry.\nSimply run `}<inlineCode parentName=\"p\">{`stp package test`}</inlineCode>{` and give it the path to the PVEP you want to test.\n`}<strong parentName=\"p\">{`NOTE: there will be no output in case of no errors`}</strong>{`.`}</p>\n    <Column colMd={5} colLg={8} mdxType=\"Column\">\n  <Video src=\"/overview/b5c101ca25eae6d69c85b73537571ffa/stp-package-test.mp4\" mdxType=\"Video\"></Video>\n    </Column>\n    <h3>{`Updating a PVEPâ€™s definition`}</h3>\n    <p>{`During development, you will likely make multiple commits to your repository,\nand if youâ€™re following the\n`}<a parentName=\"p\" {...{\n        \"href\": \"/overview/virtual-experiment-developer-best-practices\"\n      }}>{`best practices`}</a>{` we wrote, this\nwill mean having to update the commit ID in your PVEP. For this, and for\nmodifying tags, `}<inlineCode parentName=\"p\">{`stp`}</inlineCode>{` offers the `}<inlineCode parentName=\"p\">{`stp package update-definition`}</inlineCode>{` command. Set\nthe path to the PVEP with the `}<inlineCode parentName=\"p\">{`--path`}</inlineCode>{` flag; then, the `}<inlineCode parentName=\"p\">{`--use-latest-commit`}</inlineCode>{`\nflag will update the `}<inlineCode parentName=\"p\">{`commit`}</inlineCode>{` field to the HEAD of the local repository, while\nby passing one or more `}<inlineCode parentName=\"p\">{`--tag`}</inlineCode>{` flags, youâ€™ll be able to set the tags of your\nPVEP.`}</p>\n    <InlineNotification kind=\"warning\" mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`NOTE:`}</strong>{` for this command to work, the `}<inlineCode parentName=\"p\">{`--path`}</inlineCode>{` containing the PVEP must belong\nto a git repository.`}</p>\n    </InlineNotification>\n    <InlineNotification kind=\"warning\" mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`NOTE:`}</strong>{` by default, the PVEP will be overwritten, but you can pass a path to\nthe `}<inlineCode parentName=\"p\">{`--output`}</inlineCode>{` flag to change this behavior.`}</p>\n    </InlineNotification>\n    <Column colMd={5} colLg={8} mdxType=\"Column\">\n  <Video src=\"/overview/3a7194519cf195d2902f1a21c67290e8/stp-package-update-definition.mp4\" mdxType=\"Video\"></Video>\n    </Column>\n    <h2>{`Working with contexts`}</h2>\n    <AnchorLinks small mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Showing the active context</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Listing all the available contexts</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Changing the active context</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Deleting a context</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Renaming a context</AnchorLink>\n    </AnchorLinks>\n    <h3>{`Showing the active context`}</h3>\n    <p>{`When working with multiple contexts in `}<inlineCode parentName=\"p\">{`stp`}</inlineCode>{`, it can be useful to check which\none we are currently using.`}</p>\n    <p>{`This can be done with:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-commandline\"\n      }}>{`stp context show\n`}</code></pre>\n    <p>{`Additionally, if you also want to see the URL that the context is for, you can\nadd the `}<inlineCode parentName=\"p\">{`--show-url`}</inlineCode>{` flag:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-commandline\"\n      }}>{`stp context show --show-url\n`}</code></pre>\n    <Column colMd={5} colLg={8} mdxType=\"Column\">\n  <Video src=\"/overview/442bb85e85e0dee4516e322e58c7b297/stp-context-show.mp4\" mdxType=\"Video\"></Video>\n    </Column>\n    <h3>{`Listing all the available contexts`}</h3>\n    <p>{`To see all the contexts that are available for you in `}<inlineCode parentName=\"p\">{`stp`}</inlineCode>{`, you can use the\ncommand:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-commandline\"\n      }}>{`stp context list\n`}</code></pre>\n    <p>{`As before, you can add the `}<inlineCode parentName=\"p\">{`--show-url`}</inlineCode>{` flag to also see the URLs the contexts\nare for:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-commandline\"\n      }}>{`stp context list --show-url\n`}</code></pre>\n    <Column colMd={5} colLg={8} mdxType=\"Column\">\n  <Video src=\"/overview/c12f19eba6a12c4b5da637274642a9e8/stp-context-list.mp4\" mdxType=\"Video\"></Video>\n    </Column>\n    <h3>{`Changing the active context`}</h3>\n    <p>{`To change the active context (the one output by `}<inlineCode parentName=\"p\">{`stp context show`}</inlineCode>{`) you can use\nthe `}<inlineCode parentName=\"p\">{`stp context activate`}</inlineCode>{` command, passing it the name of one of the available\ncontexts:`}</p>\n    <Column colMd={5} colLg={8} mdxType=\"Column\">\n  <Video src=\"/overview/daf876b94bc1e4260a3758bd779f7e31/stp-context-activate.mp4\" mdxType=\"Video\"></Video>\n    </Column>\n    <h3>{`Deleting a context`}</h3>\n    <p>{`To remove a context and its associated credentials you can use the\n`}<inlineCode parentName=\"p\">{`stp context delete`}</inlineCode>{` command, passing it the name of the context you want to\ndelete.`}</p>\n    <Column colMd={5} colLg={8} mdxType=\"Column\">\n  <Video src=\"/overview/b55fe85b63ddbf4937689329ec329e41/stp-context-delete.mp4\" mdxType=\"Video\"></Video>\n    </Column>\n    <h3>{`Renaming a context`}</h3>\n    <p>{`In case you donâ€™t like the name of one of the contexts, you can always rename it\nvia `}<inlineCode parentName=\"p\">{`stp context rename`}</inlineCode>{`, passing it the name of the context you want to rename\nand setting the `}<inlineCode parentName=\"p\">{`--to`}</inlineCode>{` flag to the new name.`}</p>\n    <Column colMd={5} colLg={8} mdxType=\"Column\">\n  <Video src=\"/overview/3569dec394d63fb98c2f6aa40c2aca50/stp-context-rename.mp4\" mdxType=\"Video\"></Video>\n    </Column>\n    <h2>{`Working with stack-wide settings`}</h2>\n    <AnchorLinks small mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Listing available pull secrets</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Adding an image pull secret</AnchorLink>\n    </AnchorLinks>\n    <h3>{`Listing available pull secrets`}</h3>\n    <p>{`Not all images are available publicly, some may be private and require\nauthentication. When importing or pushing a package with `}<inlineCode parentName=\"p\">{`stp package import`}</inlineCode>{` or\n`}<inlineCode parentName=\"p\">{`stp package push`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`stp`}</inlineCode>{` will check for you if an image pull secret is\navailable for the registries referenced by your PVEP and emit a warning if that\nisnâ€™t the case. To see what image pull secrets are available to use in ST4SD,\nyou can use the `}<inlineCode parentName=\"p\">{`stp stack pull-secrets list`}</inlineCode>{` command.`}</p>\n    <Column colMd={5} colLg={8} mdxType=\"Column\">\n  <Video src=\"/overview/a65c33b77ce40f0ce70351755230da1b/stp-stack-pull-secrets-list.mp4\" mdxType=\"Video\"></Video>\n    </Column>\n    <h3>{`Adding an image pull secret`}</h3>\n    <p>{`If you are working with a private image registry, you will need to ensure ST4SD\nhas credentials to pull the images. To do so, you can use the\n`}<inlineCode parentName=\"p\">{`stp stack pull-secrets add`}</inlineCode>{` command: set a name for the secret with the\n`}<inlineCode parentName=\"p\">{`--name`}</inlineCode>{` flag, pass one or more registries URLs with the `}<inlineCode parentName=\"p\">{`--registry`}</inlineCode>{` flag, and\nthe username with `}<inlineCode parentName=\"p\">{`--username`}</inlineCode>{`. For the password/access token you have two\noptions: either passing it directly via the `}<inlineCode parentName=\"p\">{`-t`}</inlineCode>{` flag, or by writing it in a\nfile and using the `}<inlineCode parentName=\"p\">{`--token-file`}</inlineCode>{` flag (this will prevent leaking the credential\nin your shell history).`}</p>\n    <Column colMd={5} colLg={8} mdxType=\"Column\">\n  <Video src=\"/overview/59686cef3772fcfc12fa6234672a633a/stp-stack-pull-secrets-add.mp4\" mdxType=\"Video\"></Video>\n    </Column>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","mdx","PageDescription","InlineNotification","AnchorLinks","AnchorLink","Video","Column","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutPropertiesLoose","_excluded","Object","assign","mdxType","parentName","kind","src","small","colMd","colLg","isMDXComponent"],"sourceRoot":""}