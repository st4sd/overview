{"version":3,"file":"component---src-pages-restart-md-3e826b71560d8bc0831e.js","mappings":"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","sources":["webpack://st4sd-overview/./src/pages/restart.md"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/travis/build/st4sd/overview/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    {/*\n       Copyright IBM Inc. All Rights Reserved.\n      SPDX-License-Identifier: Apache-2.0\n     */}\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`Use this page to learn how to customize the restart behaviour of components.`}</p>\n    </PageDescription>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">When restarts occur</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Configuring restart behaviour via the component configuration</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Customizing the restart process</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Details</AnchorLink>\n    </AnchorLinks>\n    <p>{`A restart means rerunning a components executable+commandline in the same working directory, normally because the associated task finished without success.`}</p>\n    <p>{`The customizations that can be made include`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Deciding when a restart should be attempted`}</li>\n      <li parentName=\"ul\">{`How many times a restart should be attempted before giving up`}</li>\n      <li parentName=\"ul\">{`Modifying files to prepare for a restart`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Note:`}</strong>{` When restarting the following rules hold:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The component executable cannot be changed`}</li>\n      <li parentName=\"ul\">{`The component command line cannot be changed`}</li>\n      <li parentName=\"ul\">{`The component working directory will be the same`}</li>\n      <li parentName=\"ul\">{`It is possible to modify the contents of the working directory before the restart`}</li>\n    </ul>\n    <h2>{`When restarts occur`}</h2>\n    <p>{`FlowIR defines a number of `}<a parentName=\"p\" {...{\n        \"href\": \"#exit-reasons\"\n      }}>{`exit-reasons`}</a>{`. Whether a restart occurs depends on`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The exit-reason`}</li>\n      <li parentName=\"ul\">{`The components configuration`}</li>\n      <li parentName=\"ul\">{`The result of executing developer custom hooks`}</li>\n    </ul>\n    <p>{`By default components are restarted when a component task exits with the following exit-reasons:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ResourceExhausted`}</inlineCode>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><em parentName=\"li\">{`Max restart attempts:`}</em>{` None i.e. try forever`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`SubmissionFailed`}</inlineCode>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><em parentName=\"li\">{`Max restart attempts:`}</em>{` 5`}</li>\n        </ul>\n      </li>\n    </ul>\n    <p>{`It is `}<strong parentName=\"p\">{`never`}</strong>{` triggered for the following exit-reasons`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Killed`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Cancelled`}</inlineCode></li>\n    </ul>\n    <p>{`It can be turned on/off for`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Success`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`KnownIssue`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`SystemIssue`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`UnknownIssue`}</inlineCode></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ResourceExhausted`}</inlineCode></li>\n    </ul>\n    <p><strong parentName=\"p\">{`Note:`}</strong>{` You can trigger the restart process on `}<inlineCode parentName=\"p\">{`Success`}</inlineCode>{` because some programs can signal success when this is not true.`}</p>\n    <h2>{`Configuring restart behaviour via the component configuration`}</h2>\n    <AnchorLinks small mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Customizing which exit reasons trigger restart for a component</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Controlling the number of restart attempts</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Special-Case: SubmissionFailed</AnchorLink>\n    </AnchorLinks>\n    <p>{`What exit-reasons trigger a restart attempt for a component, and how many times to try before giving up, can be specified in the component’s YAML.`}</p>\n    <h3>{`Customizing which exit reasons trigger restart for a component`}</h3>\n    <p>{`The exit-reasons that trigger a restart can be customized using the `}<inlineCode parentName=\"p\">{`restartHookOn`}</inlineCode>{` key of the `}<inlineCode parentName=\"p\">{`workflowAttributes`}</inlineCode>{` top-level component key. The value of this key is a list of exit reasons which should trigger the restart process e.g.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`command:\n  executable: ...\nworkflowAttributes:\n  restartHookOn: \n     - UnknownIssue\n     - ResourceExhausted\n`}</code></pre>\n    <p><strong parentName=\"p\">{`Note:`}</strong>{` specifying `}<inlineCode parentName=\"p\">{`restartHookOn`}</inlineCode>{` overrides the default, which is `}<inlineCode parentName=\"p\">{`ResourceExhausted`}</inlineCode>{` (see `}<a parentName=\"p\" {...{\n        \"href\": \"#special-case:-submissionfailed\"\n      }}>{`here`}</a>{` for why `}<inlineCode parentName=\"p\">{`SubmissionFailed`}</inlineCode>{` is not included here).\nTherefore you must explicitly specify `}<inlineCode parentName=\"p\">{`ResourceExhausted`}</inlineCode>{` in the custom list you give to `}<inlineCode parentName=\"p\">{`restartHookOn`}</inlineCode>{` if you want to restart on this exit-reason in addition to others. `}</p>\n    <h3>{`Controlling the number of restart attempts`}</h3>\n    <p>{`The number of restart attempts for exit-reasons other than `}<inlineCode parentName=\"p\">{`SubmissionFailed`}</inlineCode>{` can be customized using the `}<inlineCode parentName=\"p\">{`maxRestarts`}</inlineCode>{` key of the `}<inlineCode parentName=\"p\">{`workflowAttributes`}</inlineCode>{` top-level component key e.g.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`command:\n  executable: ...\nworkflowAttributes:\n  maxRestarts: #Any value >= -1\n`}</code></pre>\n    <p>{`The values -1 and 0 have special meanings:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`-1: No limit on restarts. This is the default`}</li>\n      <li parentName=\"ul\">{`0: Do not restart`}</li>\n      <li parentName=\"ul\">{`N: Restart up to N times`}</li>\n    </ul>\n    <h3>{`Special-Case: SubmissionFailed`}</h3>\n    <p>{`Failure by the specified execution backend e.g. Kubernetes, LSF, to start the components tasks is given the exit-reason `}<inlineCode parentName=\"p\">{`SubmissionFailed`}</inlineCode>{`.\nA component task can exit with  `}<inlineCode parentName=\"p\">{`SubmissionFailed`}</inlineCode>{` a maximum of five times.\nThe sixth `}<inlineCode parentName=\"p\">{`SubmissionFailed`}</inlineCode>{` failed will result in the component transitioning to its final state.`}</p>\n    <p><inlineCode parentName=\"p\">{`SubmissionFailed`}</inlineCode>{` is handled separately to other codes as it means the executable did not even run. You cannot turn it off via `}<inlineCode parentName=\"p\">{`restartHookOn`}</inlineCode>{`.`}</p>\n    <p><strong parentName=\"p\">{`Note`}</strong>{`: Currently the maximum number of submission failed restarts is the minimum of (`}<inlineCode parentName=\"p\">{`maxRestarts`}</inlineCode>{`, 5).`}</p>\n    <h2>{`Customizing the restart process`}</h2>\n    <AnchorLinks small mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Defining a restart hook</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Restart hook function return values</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Restart hook location</AnchorLink>\n    </AnchorLinks>\n    <h3>{`Defining a restart hook`}</h3>\n    <p>{`In many cases further information than the exit-reason is required to decide if a restart should be attempted e.g. checking if certain files have been written, or their content. It may also be neccessary to prepare the working directory of a component for restarting by deleting/modifying/creating files. `}</p>\n    <p>{`The `}<inlineCode parentName=\"p\">{`st4sd-runtime`}</inlineCode>{` provides a mechanism for the workflow developer to add custom code to the restart process for a component. This custom code can decide if the restart should proceed and perform any modifications necessary to the working directory. We call this custom code a `}<inlineCode parentName=\"p\">{`restart hook`}</inlineCode>{`.`}</p>\n    <p>{`This restart hook is called after the filtering on exit-reason i.e. if the workflow has been configued not to restart on a given exit-reason, the restart hook is not called.`}</p>\n    <p>{`The restart hook is supplied by the developer as a python function called `}<inlineCode parentName=\"p\">{`Restart`}</inlineCode>{` with certain parameters (see below). You can put this function in any file that follows the rules in `}<a parentName=\"p\" {...{\n        \"href\": \"#restart-hook-location\"\n      }}>{`restart hook location`}</a>{`.`}</p>\n    <p>{`The signature and docs of this function are:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`def Restart(workingDirectory, restarts, componentName, \n            log, exitReason, exitCode):\n    \"\"\"\n    This function is expected to examine the components workingDirectory, \n    optionally make modifications to it, and return a restart decision.\n\n    Parameters\n    ----------\n    workingDirectory: str\n        Directory containing simulation to be restarted\n    restarts: int\n        The number of times this function for this working directory\n    componentName: str\n        The label the workflow engine uses to id this component\n    log: logging.Logger\n        A logger used to write output messages\n    exitReason: str\n        Defines why the program exited\n    exitCode: int\n        The exit-code returned by the program\n\n    Returns\n    -------\n    string: One of the strings defined by experiment.codes.restartContexts that capture the hooks decision\n    \"\"\"\n    \n    #Example: Check if a file call checkpoint.dat exists \n    retval = \"RestartContextRestartNotPossible\"\n    if os.path.exists(os.path.join(workingDirectory, \"checkpoint.dat\")):\n      retval = \"RestartContextRestartPossible\"\n      \n    return retval   \n`}</code></pre>\n    <p>{`The next section describes the possible return values of the `}<inlineCode parentName=\"p\">{`Restart`}</inlineCode>{` function.`}</p>\n    <p>{`Each component can have its own restart function. When the component needs to be restarted, the `}<inlineCode parentName=\"p\">{`st4sd-runtime`}</inlineCode>{` identifies which custom function to use (as decribed in  `}<a parentName=\"p\" {...{\n        \"href\": \"#restart-hook-location\"\n      }}>{`restart hook location`}</a>{`) and calls it with the relevant parameters (see the function parameters in code snippet above). These include the working directory of the failed component.`}</p>\n    <p>{`The custom developer function then can inspect files, modify those files, for example to add a `}<inlineCode parentName=\"p\">{`restart`}</inlineCode>{` keyword, and then tell the `}<inlineCode parentName=\"p\">{`st4sd-runtime`}</inlineCode>{` how to proceed by returning one of the strings in the next section.`}</p>\n    <h3>{`Restart hook function return values`}</h3>\n    <p>{`The custom `}<inlineCode parentName=\"p\">{`Restart`}</inlineCode>{` function must return one of the following strings`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`RestartContextRestartPossible`}</inlineCode>{`: Should restart`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`RestartContextHookNotAvailable`}</inlineCode>{`: There is no specific custom logic for this component so try to restart (only need to use this if your custom restart function is used by all components)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`RestartContextRestartNotRequired`}</inlineCode>{`: A restart is not necessary`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`RestartContextRestartNotPossible`}</inlineCode>{`: A restart is not poossible`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`RestartContextHookFailed`}</inlineCode>{`: Tried to check/prepare for a restart but something went wrong`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`RestartContextRestartConditionsNotMet`}</inlineCode>{`: Couldn’t determing if a restart is possible because some necessary information is missing`}</li>\n    </ul>\n    <h3>{`Restart hook location`}</h3>\n    <InlineNotification kind=\"warning\" mdxType=\"InlineNotification\">\n      <p>{`If you’re unsure of  where to put your restart hook first check `}<a parentName=\"p\" {...{\n          \"href\": \"/overview/packaging-workflows\"\n        }}>{`project types`}</a>{` which explains how to bundle additional files with a virtual experiment. `}</p>\n    </InlineNotification>\n    <p>{`The restart hook function `}</p>\n    <ul>\n      <li parentName=\"ul\">{`Must be located in a python file in a directory called `}<inlineCode parentName=\"li\">{`hooks`}</inlineCode>{` that is in the top-level of the experiment instance. `}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`This can be done using the experiment package directory structure or using a manifest.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`hooks`}</inlineCode>{` directory must also contain an empty `}<inlineCode parentName=\"li\">{`__init__.py`}</inlineCode>{` file`}</li>\n      <li parentName=\"ul\">{`If the file containing the restart hook function is called `}<inlineCode parentName=\"li\">{`restart.py`}</inlineCode>{` then nothing further is required. However:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`This `}<inlineCode parentName=\"li\">{`restart`}</inlineCode>{` hook function will be called for every component and it is the developer’s responsibility to filter what should happen based on the component it is being called for`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`If the file containing the restart hook function is called any other name then this name must be specified in the components YAML using `}<inlineCode parentName=\"li\">{`restartHookFile`}</inlineCode>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`This `}<inlineCode parentName=\"li\">{`restart`}</inlineCode>{` hook function will only be called for components that specify it via `}<inlineCode parentName=\"li\">{`restartHookFile`}</inlineCode></li>\n        </ul>\n      </li>\n    </ul>\n    <p>{`For example you might create restart hook for a component called `}<inlineCode parentName=\"p\">{`MyComponent`}</inlineCode>{` in a file `}<inlineCode parentName=\"p\">{`mycomponent.py`}</inlineCode>{`. The configuration of `}<inlineCode parentName=\"p\">{`MyComponent`}</inlineCode>{` would contain`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`command:\n  executable: ...\nworkflowAttributes:\n  restartHookFile: mycomponent.py\n`}</code></pre>\n    <h2>{`Details`}</h2>\n    <h3>{`Restart Decision Process`}</h3>\n    <p>{`The following describes how given an exit-reason for a component tasks the `}<inlineCode parentName=\"p\">{`st4sd-runtime`}</inlineCode>{` decides to attempt a restart`}</p>\n    <ul>\n      <li parentName=\"ul\">{`If exit-reason is `}<inlineCode parentName=\"li\">{`SubmissionFailed`}</inlineCode>{` and < `}<inlineCode parentName=\"li\">{`maxSubmissionFailed`}</inlineCode>{` attempts and < `}<inlineCode parentName=\"li\">{`maxRestart`}</inlineCode>{` attempts`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Restart `}<strong parentName=\"li\">{`without`}</strong>{` calling the components restart hook `}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Else if exit-reason is in the `}<inlineCode parentName=\"li\">{`restartHookOn`}</inlineCode>{` list and < `}<inlineCode parentName=\"li\">{`maxRestart`}</inlineCode>{` attempts`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`If  the components restart hook exists:`}\n            <ul parentName=\"li\">\n              <li parentName=\"ul\">{`Call it and continue based on its return value`}</li>\n            </ul>\n          </li>\n          <li parentName=\"ul\">{`Else`}\n            <ul parentName=\"li\">\n              <li parentName=\"ul\">{`Restart`}</li>\n            </ul>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Else if exit-reason is not in `}<inlineCode parentName=\"li\">{`Success`}</inlineCode>{`/`}<inlineCode parentName=\"li\">{`Killed`}</inlineCode>{`/`}<inlineCode parentName=\"li\">{`Cancelled`}</inlineCode>{` `}<strong parentName=\"li\">{`AND`}</strong>{` the system is unstable`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`If  the components restart hook exists:`}\n            <ul parentName=\"li\">\n              <li parentName=\"ul\">{`Call it and continue based on its return value`}</li>\n            </ul>\n          </li>\n          <li parentName=\"ul\">{`Else`}\n            <ul parentName=\"li\">\n              <li parentName=\"ul\">{`Restart`}</li>\n            </ul>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Else`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`A restart it not attempted`}</li>\n        </ul>\n      </li>\n    </ul>\n    <p>{`If a restart is initiated the `}<inlineCode parentName=\"p\">{`st4sd-runtime`}</inlineCode>{` waits until the restarted task finishes before beginning the above decision process again. `}</p>\n    <p>{`If there is no custom restart hook a restart will result in running the task again in the same working dir. This will work for programs that can deduce their restart state when they start-up. `}</p>\n    <p><strong parentName=\"p\">{`Unstable System`}</strong>{`: The `}<inlineCode parentName=\"p\">{`st4sd-runtime`}</inlineCode>{` monitors the system for IO errors indicating filesystem instability e.g. unable to read/write component working dirs.  If a component fails when it determines such an instability exist, the `}<inlineCode parentName=\"p\">{`st4sd-runtime`}</inlineCode>{` will wait for the instability to resolve and restart the component i.e. it assumes the failure was due to the IO issues. `}</p>\n    <p>{`In every other case (no restart, failed restart) the component finishes with the original exit-reason.`}</p>\n    <h3>{`Exit Reasons`}</h3>\n    <p>{`When a components task exits the `}<inlineCode parentName=\"p\">{`st4sd-runtime`}</inlineCode>{` assigns it an exit-reason. Usually these map to the tasks return-code`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Success`}</inlineCode>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Return-code 0`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Killed`}</inlineCode>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Received `}<em parentName=\"li\">{`SIGKILL`}</em></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`Cancelled`}</inlineCode>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Received `}<em parentName=\"li\">{`SIGINT`}</em>{` or `}<em parentName=\"li\">{`SIGTERM`}</em></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`KnownIssue`}</inlineCode>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Return-code was between 1 and 127 inclusive`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`SystemIssue`}</inlineCode>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Received a signal not `}<em parentName=\"li\">{`SIGINT/SIGTERM/SIGXCPU/SIGKLL`}</em>{` (return code >= 128)`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`UnknownIssue`}</inlineCode>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Could not determine why the task failed. Maybe an internal `}<inlineCode parentName=\"li\">{`st4sd-runtime`}</inlineCode>{` issue.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`ResourceExhausted`}</inlineCode>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Task hit the wall time. This can involves it gettting `}<em parentName=\"li\">{`SIGXCPU`}</em>{` and hence exiting with return-code 128+`}<em parentName=\"li\">{`SIGXCPU`}</em>{` (often 152). However it can be deduced without return-code from some backends`}</li>\n          <li parentName=\"ul\"><strong parentName=\"li\">{`Default wall time is 1 hour`}</strong></li>\n        </ul>\n      </li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`SubmissionFailed`}</inlineCode>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`The submission to the execution backend failed at some point. `}</li>\n        </ul>\n      </li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","mdx","PageDescription","AnchorLinks","AnchorLink","InlineNotification","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","Object","assign","mdxType","parentName","small","kind","isMDXComponent"],"sourceRoot":""}