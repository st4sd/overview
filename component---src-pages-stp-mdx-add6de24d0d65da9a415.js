"use strict";(self.webpackChunkst4sd_overview=self.webpackChunkst4sd_overview||[]).push([[5486],{3358:function(e,n,t){t.r(n),t.d(n,{_frontmatter:function(){return p},default:function(){return f}});var a=t(45),o=(t(6540),t(5680)),i=t(8027);const l=["components"],p={},r=e=>function(n){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,o.yg)("div",n)},s=r("PageDescription"),g=r("InlineNotification"),y=r("AnchorLinks"),c=r("AnchorLink"),m=r("Video"),d=r("Column"),h={_frontmatter:p},u=i.A;function f(e){let{components:n}=e,t=(0,a.A)(e,l);return(0,o.yg)(u,Object.assign({},h,t,{components:n,mdxType:"MDXLayout"}),(0,o.yg)(s,{mdxType:"PageDescription"},(0,o.yg)("p",null,"The ",(0,o.yg)("inlineCode",{parentName:"p"},"stp")," command line tool simplifies common operations in ST4SD and performs\nadditional checks so you don’t have to."),(0,o.yg)(g,{kind:"info",mdxType:"InlineNotification"},(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"NOTE:")," for all commands, you can always add the ",(0,o.yg)("inlineCode",{parentName:"p"},"-h")," or ",(0,o.yg)("inlineCode",{parentName:"p"},"--help")," flag to see\nall the available options and descriptions."))),(0,o.yg)(y,{mdxType:"AnchorLinks"},(0,o.yg)(c,{mdxType:"AnchorLink"},"Logging in to your ST4SD instance"),(0,o.yg)(c,{mdxType:"AnchorLink"},"Working with PVEPs"),(0,o.yg)(c,{mdxType:"AnchorLink"},"Working with contexts"),(0,o.yg)(c,{mdxType:"AnchorLink"},"Working with stack-wide settings")),(0,o.yg)("h2",null,"Logging in to your ST4SD instance"),(0,o.yg)(g,{kind:"info",mdxType:"InlineNotification"},(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"NOTE:")," ",(0,o.yg)("inlineCode",{parentName:"p"},"stp")," supports multiple ST4SD instances at the same time.")),(0,o.yg)("p",null,"The easiest way to log into your ST4SD instance via ",(0,o.yg)("inlineCode",{parentName:"p"},"stp")," is to use the snippet\nin the Registry UI. If you’re logged into your OpenShift cluster, you can paste\nthe following command in your terminal to automatically open the ST4SD Registry\nUI:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-commandline"},'open "https://$(oc get route st4sd-authentication -o jsonpath="{.spec.host}")/registry-ui/"\n')),(0,o.yg)("p",null,"Here you will:"),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},"Click on the ",(0,o.yg)("strong",{parentName:"li"},"Login on stp")," button"),(0,o.yg)("li",{parentName:"ol"},"Press the copy button in the information box that you’re presented with and\npaste the content of the information box in your terminal."),(0,o.yg)("li",{parentName:"ol"},"Once prompted, write ",(0,o.yg)("inlineCode",{parentName:"li"},"y")," and press enter in your terminal to be brought to\nthe authentication service."),(0,o.yg)("li",{parentName:"ol"},"Authenticate if needed and copy the token that is displayed."),(0,o.yg)("li",{parentName:"ol"},"Paste the token in the terminal and press enter. The login procedure should\nbe completed soon.")),(0,o.yg)("p",null,"You can also follow this video walkthrough:"),(0,o.yg)(m,{src:"/overview/7f5f6953634bddfb46a1697625766487/logging-in-via-stp.mp4",mdxType:"Video"}),(0,o.yg)("h2",null,"Working with PVEPs"),(0,o.yg)(y,{small:!0,mdxType:"AnchorLinks"},(0,o.yg)(c,{mdxType:"AnchorLink"},"Creating a PVEP"),(0,o.yg)(c,{mdxType:"AnchorLink"},"Downloading a PVEP"),(0,o.yg)(c,{mdxType:"AnchorLink"},"Importing a PVEP"),(0,o.yg)(c,{mdxType:"AnchorLink"},"Pushing a PVEP"),(0,o.yg)(c,{mdxType:"AnchorLink"},"Testing a PVEP"),(0,o.yg)(c,{mdxType:"AnchorLink"},"Updating a PVEP's definition")),(0,o.yg)("h3",null,"Creating a PVEP"),(0,o.yg)("p",null,"To publish an experiment to our registry after\n",(0,o.yg)("a",{parentName:"p",href:"/overview/workflow-specification"},"writing a workflow"),", we need to create a\n",(0,o.yg)("em",{parentName:"p"},"Parameterised Virtual Experiment Package")," -or PVEP for short- that defines how\nto run a virtual experiment in a particular way. ",(0,o.yg)("inlineCode",{parentName:"p"},"stp")," can create a working\ntemplate for you with the ",(0,o.yg)("inlineCode",{parentName:"p"},"stp package create")," command. Set the ",(0,o.yg)("inlineCode",{parentName:"p"},"--from")," flag to\npoint to a git repository containing your experiment and optionally the\n",(0,o.yg)("inlineCode",{parentName:"p"},"--manifest")," flag (in case your experiment has a manifest)."),(0,o.yg)(d,{colMd:5,colLg:8,mdxType:"Column"},(0,o.yg)(m,{src:"/overview/25f0deb1ca2f03b8fa6da311faeb5d2f/stp-package-create.mp4",mdxType:"Video"})),(0,o.yg)("h3",null,"Downloading a PVEP"),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"stp")," helps us programmatically download a PVEP definition via the\n",(0,o.yg)("inlineCode",{parentName:"p"},"stp package download")," command. If you’re downloading a PVEP from a registry\nthat requires authentication, you can add the ",(0,o.yg)("inlineCode",{parentName:"p"},"--from-context")," flag to ensure\n",(0,o.yg)("inlineCode",{parentName:"p"},"stp")," can authenticate correctly."),(0,o.yg)(d,{colMd:5,colLg:8,mdxType:"Column"},(0,o.yg)(m,{src:"/overview/fdf5fcd2f82fd1a429b9abe1827249f5/stp-package-download.mp4",mdxType:"Video"})),(0,o.yg)("h3",null,"Importing a PVEP"),(0,o.yg)("p",null,"ST4SD provides a\n",(0,o.yg)("a",{parentName:"p",href:"https://registry.st4sd.res.ibm.com/"},"public registry of virtual experiments"),"\nthat you can freely import from. To help you import PVEPs from any registry to\nyour own instance, ",(0,o.yg)("inlineCode",{parentName:"p"},"stp")," provides the ",(0,o.yg)("inlineCode",{parentName:"p"},"stp package import")," command. Make sure\nyou add the ",(0,o.yg)("inlineCode",{parentName:"p"},"--from-context")," flag if you’re importing from a private ST4SD\ninstance to ensure ",(0,o.yg)("inlineCode",{parentName:"p"},"stp")," can authenticate correctly."),(0,o.yg)(d,{colMd:5,colLg:8,mdxType:"Column"},(0,o.yg)(m,{src:"/overview/ff1ae82a41ae857ea0e5d92b18b3c35e/stp-package-import.mp4",mdxType:"Video"})),(0,o.yg)("h3",null,"Pushing a PVEP"),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"stp")," makes it easy for you to push PVEPs to registry instances, simply run\n",(0,o.yg)("inlineCode",{parentName:"p"},"stp package push")," and give it the path to your PVEP for it to be added to the\nregistry from your active context."),(0,o.yg)(d,{colMd:5,colLg:8,mdxType:"Column"},(0,o.yg)(m,{src:"/overview/7dc1f04e3665d79d888799e25823c07b/stp-package-push.mp4",mdxType:"Video"})),(0,o.yg)("h3",null,"Testing a PVEP"),(0,o.yg)("p",null,(0,o.yg)("inlineCode",{parentName:"p"},"stp")," supports testing PVEP syntax locally before pushing them to the Registry.\nSimply run ",(0,o.yg)("inlineCode",{parentName:"p"},"stp package test")," and give it the path to the PVEP you want to test.\n",(0,o.yg)("strong",{parentName:"p"},"NOTE: there will be no output in case of no errors"),"."),(0,o.yg)(d,{colMd:5,colLg:8,mdxType:"Column"},(0,o.yg)(m,{src:"/overview/b5c101ca25eae6d69c85b73537571ffa/stp-package-test.mp4",mdxType:"Video"})),(0,o.yg)("h3",null,"Updating a PVEP’s definition"),(0,o.yg)("p",null,"During development, you will likely make multiple commits to your repository,\nand if you’re following the\n",(0,o.yg)("a",{parentName:"p",href:"/overview/virtual-experiment-developer-best-practices"},"best practices")," we wrote, this\nwill mean having to update the commit ID in your PVEP. For this, and for\nmodifying tags, ",(0,o.yg)("inlineCode",{parentName:"p"},"stp")," offers the ",(0,o.yg)("inlineCode",{parentName:"p"},"stp package update-definition")," command. Set\nthe path to the PVEP with the ",(0,o.yg)("inlineCode",{parentName:"p"},"--path")," flag; then, the ",(0,o.yg)("inlineCode",{parentName:"p"},"--use-latest-commit"),"\nflag will update the ",(0,o.yg)("inlineCode",{parentName:"p"},"commit")," field to the HEAD of the local repository, while\nby passing one or more ",(0,o.yg)("inlineCode",{parentName:"p"},"--tag")," flags, you’ll be able to set the tags of your\nPVEP."),(0,o.yg)(g,{kind:"warning",mdxType:"InlineNotification"},(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"NOTE:")," for this command to work, the ",(0,o.yg)("inlineCode",{parentName:"p"},"--path")," containing the PVEP must belong\nto a git repository.")),(0,o.yg)(g,{kind:"warning",mdxType:"InlineNotification"},(0,o.yg)("p",null,(0,o.yg)("strong",{parentName:"p"},"NOTE:")," by default, the PVEP will be overwritten, but you can pass a path to\nthe ",(0,o.yg)("inlineCode",{parentName:"p"},"--output")," flag to change this behavior.")),(0,o.yg)(d,{colMd:5,colLg:8,mdxType:"Column"},(0,o.yg)(m,{src:"/overview/3a7194519cf195d2902f1a21c67290e8/stp-package-update-definition.mp4",mdxType:"Video"})),(0,o.yg)("h2",null,"Working with contexts"),(0,o.yg)(y,{small:!0,mdxType:"AnchorLinks"},(0,o.yg)(c,{mdxType:"AnchorLink"},"Showing the active context"),(0,o.yg)(c,{mdxType:"AnchorLink"},"Listing all the available contexts"),(0,o.yg)(c,{mdxType:"AnchorLink"},"Changing the active context"),(0,o.yg)(c,{mdxType:"AnchorLink"},"Deleting a context"),(0,o.yg)(c,{mdxType:"AnchorLink"},"Renaming a context")),(0,o.yg)("h3",null,"Showing the active context"),(0,o.yg)("p",null,"When working with multiple contexts in ",(0,o.yg)("inlineCode",{parentName:"p"},"stp"),", it can be useful to check which\none we are currently using."),(0,o.yg)("p",null,"This can be done with:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-commandline"},"stp context show\n")),(0,o.yg)("p",null,"Additionally, if you also want to see the URL that the context is for, you can\nadd the ",(0,o.yg)("inlineCode",{parentName:"p"},"--show-url")," flag:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-commandline"},"stp context show --show-url\n")),(0,o.yg)(d,{colMd:5,colLg:8,mdxType:"Column"},(0,o.yg)(m,{src:"/overview/442bb85e85e0dee4516e322e58c7b297/stp-context-show.mp4",mdxType:"Video"})),(0,o.yg)("h3",null,"Listing all the available contexts"),(0,o.yg)("p",null,"To see all the contexts that are available for you in ",(0,o.yg)("inlineCode",{parentName:"p"},"stp"),", you can use the\ncommand:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-commandline"},"stp context list\n")),(0,o.yg)("p",null,"As before, you can add the ",(0,o.yg)("inlineCode",{parentName:"p"},"--show-url")," flag to also see the URLs the contexts\nare for:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-commandline"},"stp context list --show-url\n")),(0,o.yg)(d,{colMd:5,colLg:8,mdxType:"Column"},(0,o.yg)(m,{src:"/overview/c12f19eba6a12c4b5da637274642a9e8/stp-context-list.mp4",mdxType:"Video"})),(0,o.yg)("h3",null,"Changing the active context"),(0,o.yg)("p",null,"To change the active context (the one output by ",(0,o.yg)("inlineCode",{parentName:"p"},"stp context show"),") you can use\nthe ",(0,o.yg)("inlineCode",{parentName:"p"},"stp context activate")," command, passing it the name of one of the available\ncontexts:"),(0,o.yg)(d,{colMd:5,colLg:8,mdxType:"Column"},(0,o.yg)(m,{src:"/overview/daf876b94bc1e4260a3758bd779f7e31/stp-context-activate.mp4",mdxType:"Video"})),(0,o.yg)("h3",null,"Deleting a context"),(0,o.yg)("p",null,"To remove a context and its associated credentials you can use the\n",(0,o.yg)("inlineCode",{parentName:"p"},"stp context delete")," command, passing it the name of the context you want to\ndelete."),(0,o.yg)(d,{colMd:5,colLg:8,mdxType:"Column"},(0,o.yg)(m,{src:"/overview/b55fe85b63ddbf4937689329ec329e41/stp-context-delete.mp4",mdxType:"Video"})),(0,o.yg)("h3",null,"Renaming a context"),(0,o.yg)("p",null,"In case you don’t like the name of one of the contexts, you can always rename it\nvia ",(0,o.yg)("inlineCode",{parentName:"p"},"stp context rename"),", passing it the name of the context you want to rename\nand setting the ",(0,o.yg)("inlineCode",{parentName:"p"},"--to")," flag to the new name."),(0,o.yg)(d,{colMd:5,colLg:8,mdxType:"Column"},(0,o.yg)(m,{src:"/overview/3569dec394d63fb98c2f6aa40c2aca50/stp-context-rename.mp4",mdxType:"Video"})),(0,o.yg)("h2",null,"Working with stack-wide settings"),(0,o.yg)(y,{small:!0,mdxType:"AnchorLinks"},(0,o.yg)(c,{mdxType:"AnchorLink"},"Listing available pull secrets"),(0,o.yg)(c,{mdxType:"AnchorLink"},"Adding an image pull secret")),(0,o.yg)("h3",null,"Listing available pull secrets"),(0,o.yg)("p",null,"Not all images are available publicly, some may be private and require\nauthentication. When importing or pushing a package with ",(0,o.yg)("inlineCode",{parentName:"p"},"stp package import")," or\n",(0,o.yg)("inlineCode",{parentName:"p"},"stp package push"),", ",(0,o.yg)("inlineCode",{parentName:"p"},"stp")," will check for you if an image pull secret is\navailable for the registries referenced by your PVEP and emit a warning if that\nisn’t the case. To see what image pull secrets are available to use in ST4SD,\nyou can use the ",(0,o.yg)("inlineCode",{parentName:"p"},"stp stack pull-secrets list")," command."),(0,o.yg)(d,{colMd:5,colLg:8,mdxType:"Column"},(0,o.yg)(m,{src:"/overview/a65c33b77ce40f0ce70351755230da1b/stp-stack-pull-secrets-list.mp4",mdxType:"Video"})),(0,o.yg)("h3",null,"Adding an image pull secret"),(0,o.yg)("p",null,"If you are working with a private image registry, you will need to ensure ST4SD\nhas credentials to pull the images. To do so, you can use the\n",(0,o.yg)("inlineCode",{parentName:"p"},"stp stack pull-secrets add")," command: set a name for the secret with the\n",(0,o.yg)("inlineCode",{parentName:"p"},"--name")," flag, pass one or more registries URLs with the ",(0,o.yg)("inlineCode",{parentName:"p"},"--registry")," flag, and\nthe username with ",(0,o.yg)("inlineCode",{parentName:"p"},"--username"),". For the password/access token you have two\noptions: either passing it directly via the ",(0,o.yg)("inlineCode",{parentName:"p"},"-t")," flag, or by writing it in a\nfile and using the ",(0,o.yg)("inlineCode",{parentName:"p"},"--token-file")," flag (this will prevent leaking the credential\nin your shell history)."),(0,o.yg)(d,{colMd:5,colLg:8,mdxType:"Column"},(0,o.yg)(m,{src:"/overview/59686cef3772fcfc12fa6234672a633a/stp-stack-pull-secrets-add.mp4",mdxType:"Video"})))}f.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-stp-mdx-add6de24d0d65da9a415.js.map