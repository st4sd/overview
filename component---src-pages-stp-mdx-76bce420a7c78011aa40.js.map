{"version":3,"file":"component---src-pages-stp-mdx-76bce420a7c78011aa40.js","mappings":"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","sources":["webpack://st4sd-overview/./src/pages/stp.mdx"],"sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/travis/build/st4sd/overview/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nimport { CarbonForIbmDotcom } from \"@carbon/pictograms-react\";\nimport { ArtTools_01 } from \"@carbon/pictograms-react\";\nimport { ServerOperatingSystems } from \"@carbon/pictograms-react\";\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst AnchorLinks = makeShortcode(\"AnchorLinks\");\nconst AnchorLink = makeShortcode(\"AnchorLink\");\nconst Accordion = makeShortcode(\"Accordion\");\nconst AccordionItem = makeShortcode(\"AccordionItem\");\nconst Video = makeShortcode(\"Video\");\nconst Column = makeShortcode(\"Column\");\nconst ExpressiveList = makeShortcode(\"ExpressiveList\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    {/*\n       Copyright IBM Inc. All Rights Reserved.\n      SPDX-License-Identifier: Apache-2.0\n     */}\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`The `}<inlineCode parentName=\"p\">{`stp`}</inlineCode>{` command line tool provides a conversational-style interface that makes\nit simple for developers to create and manage virtual experiment packages.`}</p>\n      <InlineNotification kind=\"info\" mdxType=\"InlineNotification\">\n        <p>{`You can always use the `}<inlineCode parentName=\"p\">{`-h`}</inlineCode>{` flag to see additional help for each of the commands\nmentioned here.`}</p>\n      </InlineNotification>\n    </PageDescription>\n    <AnchorLinks mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Logging in to your ST4SD instance</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Downloading PVEPs</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Pushing PVEPs</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Importing PVEPs</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Creating PVEPs</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Updating PVEP definitions</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Checking PVEP syntax</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Managing multiple ST4SD instances</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Advanced usage</AnchorLink>\n    </AnchorLinks>\n    <h2>{`Prerequisites`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`You are familiar with ST4SD terminology such as Virtual Experiment,\nParameterised Virtual Experiment Package (PVEP), and Virtual Experiment\nInstance. You read about it `}<a parentName=\"li\" {...{\n          \"href\": \"/overview/concepts#terminology\"\n        }}>{`here`}</a>{`.`}</li>\n      <li parentName=\"ul\">{`Ensure you have correctly installed the ST4SD Runtime Core module\n(instructions `}<a parentName=\"li\" {...{\n          \"href\": \"/overview/#try-it-yourself\"\n        }}>{`here`}</a>{`).`}</li>\n    </ul>\n    <h2>{`Overview`}</h2>\n    <p><inlineCode parentName=\"p\">{`stp`}</inlineCode>{` allows you to log in and interact with multiple ST4SD instances,\nsimplifying many of the day-to-day tasks that virtual experiment developers\nperform. This includes downloading, pushing, importing, creating, updating, and\nsyntax checking PVEPs.`}</p>\n    <h2>{`Logging in to your ST4SD instance`}</h2>\n    <p>{`To interact with ST4SD instances using `}<inlineCode parentName=\"p\">{`stp`}</inlineCode>{`, we need to log in first. The\nsimplest method is to use the code snippet provided by the Registry UI. If\nyou’re already logged into your OpenShift cluster, you can copy and paste the\nfollowing command into your terminal to open the ST4SD Registry UI\nautomatically:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-commandline\"\n      }}>{`open \"https://$(oc get route st4sd-authentication -o jsonpath=\"{.spec.host}\")/registry-ui/\"\n`}</code></pre>\n    <p>{`Here you will:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Click on the `}<strong parentName=\"li\">{`Login on stp`}</strong>{` button`}</li>\n      <li parentName=\"ol\">{`Press the copy button in the information box that you’re presented with and\npaste the content of the information box in your terminal.`}</li>\n      <li parentName=\"ol\">{`Once prompted, type `}<inlineCode parentName=\"li\">{`y`}</inlineCode>{` and press Enter to continue to the authentication\nservice.`}</li>\n      <li parentName=\"ol\">{`Authenticate if necessary and copy the token that is displayed.`}</li>\n      <li parentName=\"ol\">{`Paste the token in the terminal and press Enter. The login process should now\nbe complete.`}</li>\n    </ol>\n    <Accordion mdxType=\"Accordion\">\n  <AccordionItem title=\"View video walkthrough\" mdxType=\"AccordionItem\">\n        <Video src=\"/overview/7f5f6953634bddfb46a1697625766487/logging-in-via-stp.mp4\" mdxType=\"Video\"></Video>\n  </AccordionItem>\n    </Accordion>\n    <h2>{`Downloading PVEPs`}</h2>\n    <p>{`The ST4SD Registry allows users to easily access and explore `}<em parentName=\"p\">{`Parameterised\nVirtual Experiment Packages`}</em>{` (PVEPs) through a user-friendly web interface.\nThrough the interface, users can browse available experiments, view their\ndetails, logs, and the results of their runs. Additionally, users can download\nexperiments by scrolling to the bottom of the page and clicking the “Download\nJSON” button. There may be instances, however, where they want to perform these\nactions programmatically. With `}<inlineCode parentName=\"p\">{`stp`}</inlineCode>{` this is trivial: let us imagine we want to\ndownload the\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://registry.st4sd.res.ibm.com/registry-ui/experiment/band-gap-dft-gamess-us\"\n      }}>{`band-gap-dft-gamess-us`}</a>{`\nexperiment that is available on our public registry.`}</p>\n    <p>{`We can simply copy the link and run:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-commandline\"\n      }}>{`stp package download https://registry.st4sd.res.ibm.com/registry-ui/experiment/band-gap-dft-gamess-us\n`}</code></pre>\n    <p>{`For the experiment JSON to be downloaded to our currently active directory.`}</p>\n    <Accordion mdxType=\"Accordion\">\n  <AccordionItem title=\"View video walkthrough\" mdxType=\"AccordionItem\">\n        <Video src=\"/overview/fdf5fcd2f82fd1a429b9abe1827249f5/stp-package-download.mp4\" mdxType=\"Video\"></Video>\n  </AccordionItem>\n    </Accordion>\n    <h2>{`Pushing PVEPs`}</h2>\n    <p>{`We need to add experiments to our Registry instance before we can view or run\nthem. To do this, we can either create a local PVEP definition from scratch or\ndownload it from another instance (e.g., by using the `}<inlineCode parentName=\"p\">{`stp package download`}</inlineCode>{`\ncommand). Once we have the definition, we can use `}<inlineCode parentName=\"p\">{`stp`}</inlineCode>{` to push it to our\nregistry.`}</p>\n    <p>{`Assuming our local file is called `}<inlineCode parentName=\"p\">{`nanopore-geometry-experiment.json`}</inlineCode>{` and is in\nour current directory, we can run:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-commandline\"\n      }}>{`stp package push nanopore-geometry-experiment.json\n`}</code></pre>\n    <p>{`And `}<inlineCode parentName=\"p\">{`stp`}</inlineCode>{` will add it to our Registry instance.`}</p>\n    <Accordion mdxType=\"Accordion\">\n  <AccordionItem title=\"View video walkthrough\" mdxType=\"AccordionItem\">\n        <Video src=\"/overview/7a42980029d0a6f227628ca964daa333/stp-package-push.mp4\" mdxType=\"Video\"></Video>\n  </AccordionItem>\n    </Accordion>\n    <h2>{`Importing PVEPs`}</h2>\n    <p>{`In the previous sections, we learned how to download PVEPs and add them to our\nRegistry instance using the `}<inlineCode parentName=\"p\">{`download`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`push`}</inlineCode>{` commands. These commands are\nversatile and can be used in various scenarios. However, if our goal is simply\nto download a PVEP from an external instance and add it to our own, `}<inlineCode parentName=\"p\">{`stp`}</inlineCode>{` offers\nanother command, `}<inlineCode parentName=\"p\">{`import`}</inlineCode>{`, that can accomplish this task efficiently.`}</p>\n    <p>{`Copy the link to the experiment you want to import and run:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-commandline\"\n      }}>{`stp package import https://registry.st4sd.res.ibm.com/registry-ui/experiment/band-gap-dft-gamess-us\n`}</code></pre>\n    <p>{`To automatically add it to your Registry instance.`}</p>\n    <Accordion mdxType=\"Accordion\">\n  <AccordionItem title=\"View video walkthrough\" mdxType=\"AccordionItem\">\n        <Video src=\"/overview/086c38d464630f813680eaddec8e046f/stp-package-import.mp4\" mdxType=\"Video\"></Video>\n  </AccordionItem>\n    </Accordion>\n    <h2>{`Creating PVEPs`}</h2>\n    <p><em parentName=\"p\">{`Parameterised Virtual Experiment Packages`}</em>{` (PVEPs) are parameterisations of our\nexperiments that need to be created before they can be added the Registry to be\nrun or shared. `}<inlineCode parentName=\"p\">{`stp`}</inlineCode>{` can help getting started with this by generating a valid,\nhigh-level PVEP that the user can later add details to.`}</p>\n    <InlineNotification kind=\"info\" mdxType=\"InlineNotification\">\n      <p>{`This feature requires for the experiment to be in a git repository.`}</p>\n    </InlineNotification>\n    <p>{`As we need a virtual experiment to test this feature, we will use the\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/st4sd/nanopore-geometry-experiment\"\n      }}>{`nanopore-geometry-experiment`}</a>{`\nexperiment as our starting point. Let us start by cloning it and `}<inlineCode parentName=\"p\">{`cd`}</inlineCode>{`-ing into\nits directory:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-commandline\"\n      }}>{`git clone https://github.com/st4sd/nanopore-geometry-experiment\ncd nanopore-geometry-experiment\n`}</code></pre>\n    <p>{`To create the PVEP we then need to run:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-commandline\"\n      }}>{`stp package create --manifest manifest.yaml\n`}</code></pre>\n    <p>{`The resulting PVEP can be pushed to the Registry using the\n`}<a parentName=\"p\" {...{\n        \"href\": \"#pushing-pveps\"\n      }}><inlineCode parentName=\"a\">{`stp package push`}</inlineCode></a>{` command.`}</p>\n    <Accordion mdxType=\"Accordion\">\n  <AccordionItem title=\"View video walkthrough\" mdxType=\"AccordionItem\">\n        <Video src=\"/overview/25f0deb1ca2f03b8fa6da311faeb5d2f/stp-package-create.mp4\" mdxType=\"Video\"></Video>\n  </AccordionItem>\n    </Accordion>\n    <h2>{`Updating PVEP definitions`}</h2>\n    <p>{`During the development phase of our virtual experiments, we will regularly\ncommit changes to the git repository.`}</p>\n    <p>{`If we are following the set of\n`}<a parentName=\"p\" {...{\n        \"href\": \"/overview/virtual-experiment-developer-best-practices#strong-versioning\"\n      }}>{`best practices`}</a>{`\nwe have defined, the commit ID will be included in our PVEP, ensuring ST4SD\nexecutes the `}<em parentName=\"p\">{`exact`}</em>{` version of our experiment, improving results\nreproducibility. Provided is an example of how this might look like in your\nPVEP:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"name\": \"nanopore-geometry-experiment\",\n  \"source\": {\n    \"git\": {\n      \"location\": {\n        \"url\": \"https://github.com/st4sd/nanopore-geometry-experiment\",\n        \"commit\": \"85244f5c84d6c0e02aa7a2e1685b004cd0b3cdd2\"\n      }\n    }\n  }\n}\n`}</code></pre>\n    <p>{`Additionally, we might want to give a specific experiment version an\neasy-to-remember name by means of a tag. `}<inlineCode parentName=\"p\">{`stp`}</inlineCode>{` makes updating the commit ID and\nmetadata tags of our PVEP as painless as possible by providing the\n`}<inlineCode parentName=\"p\">{`update-definition`}</inlineCode>{` command. In the `}<inlineCode parentName=\"p\">{`nanopore-geometry-experiment`}</inlineCode>{` folder from\nthe previous example we can run:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-commandline\"\n      }}>{`stp package update-definition --path nanopore-geometry-experiment.json \\\\\n        --use-latest-commit \\\\\n        --tag hello\n`}</code></pre>\n    <p>{`The PVEP definition may now look similar to the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"base\": {\n    \"packages\": [\n      {\n        \"name\": \"nanopore-geometry-experiment\",\n        \"source\": {\n          \"git\": {\n            \"location\": {\n              \"url\": \"https://github.com/st4sd/nanopore-geometry-experiment\",\n              \"commit\": \"1682f979531ddef602440f0a3b146edb5916c001\"\n            }\n          }\n        },\n      }\n    ]\n  },\n  \"metadata\": {\n    \"package\": {\n      ...\n      \"tags\": [\n        \"hello\"\n      ],\n    }\n  },\n}\n`}</code></pre>\n    <Accordion mdxType=\"Accordion\">\n  <AccordionItem title=\"View video walkthrough\" mdxType=\"AccordionItem\">\n        <Video src=\"/overview/3a7194519cf195d2902f1a21c67290e8/stp-package-update-definition.mp4\" mdxType=\"Video\"></Video>\n  </AccordionItem>\n    </Accordion>\n    <h2>{`Checking PVEP syntax`}</h2>\n    <p>{`When we manually edit our PVEPs, we risk making mistakes. Fortunately, `}<inlineCode parentName=\"p\">{`stp`}</inlineCode>{`\nincludes a syntax checker that can help us identify and fix our errors. Let’s\nintentionally introduce a mistake into our `}<inlineCode parentName=\"p\">{`nanopore-geometry-experiment`}</inlineCode>{` PVEP,\nwhich we obtained earlier in this tutorial, by adding a `}<inlineCode parentName=\"p\">{`nonexistent`}</inlineCode>{` field to\nthe `}<inlineCode parentName=\"p\">{`metadata`}</inlineCode>{` section.`}</p>\n    <p>{`Here’s how the updated section now looks:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`\"metadata\": {\n  \"package\": {\n    \"name\": \"nanopore-geometry-experiment\",\n    \"tags\": [],\n    \"license\": \"\",\n    \"maintainer\": \"\",\n    \"description\": \"\",\n    \"nonexistent\": true,\n    \"keywords\": []\n  }\n},\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`stp`}</inlineCode>{` will point us to the error when we run `}<inlineCode parentName=\"p\">{`stp package test`}</inlineCode>{`, as such:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-commandline\"\n      }}>{`stp package test nanopore-geometry-experiment.json\nValidation error in instance['metadata']['package']:\nAdditional properties are not allowed ('nonexistent' was unexpected)\n`}</code></pre>\n    <Accordion mdxType=\"Accordion\">\n  <AccordionItem title=\"View video walkthrough\" mdxType=\"AccordionItem\">\n        <Video src=\"/overview/0bdb67707e7f4e3e6447800ab20443ff/stp-package-test.mp4\" mdxType=\"Video\"></Video>\n  </AccordionItem>\n    </Accordion>\n    <h2>{`Managing multiple ST4SD instances`}</h2>\n    <p>{`With `}<inlineCode parentName=\"p\">{`stp`}</inlineCode>{` it is possible to log in to multiple ST4SD instances - which we refer\nto as `}<em parentName=\"p\">{`contexts`}</em>{` - and quickly switch between them.`}</p>\n    <AnchorLinks small mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Getting the currently active context</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Listing the available contexts</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Changing the active context</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Renaming a context</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Deleting a context</AnchorLink>\n    </AnchorLinks>\n    <h3>{`Getting the currently active context`}</h3>\n    <p>{`To see what the currently active context - meaning the ST4SD instance that `}<inlineCode parentName=\"p\">{`stp`}</inlineCode>{`\nwill run commands against - is, you can use the `}<inlineCode parentName=\"p\">{`stp context show`}</inlineCode>{` command. By\ndefault, it will only print the name of the context, but an option is provided\nto also print out the URL of the ST4SD instance for the context.`}</p>\n    <Accordion mdxType=\"Accordion\">\n  <AccordionItem title=\"View video walkthrough\" mdxType=\"AccordionItem\">\n        <Video src=\"/overview/442bb85e85e0dee4516e322e58c7b297/stp-context-show.mp4\" mdxType=\"Video\"></Video>\n  </AccordionItem>\n    </Accordion>\n    <h3>{`Listing the available contexts`}</h3>\n    <p>{`To see what instances you have logged in to, you can use the `}<inlineCode parentName=\"p\">{`stp context list`}</inlineCode>{`\ncommand. By default, the results will be printed as a table but this can be\ndisabled with the `}<inlineCode parentName=\"p\">{`--simple`}</inlineCode>{` flag.`}</p>\n    <Accordion mdxType=\"Accordion\">\n  <AccordionItem title=\"View video walkthrough\" mdxType=\"AccordionItem\">\n        <Video src=\"/overview/c12f19eba6a12c4b5da637274642a9e8/stp-context-list.mp4\" mdxType=\"Video\"></Video>\n  </AccordionItem>\n    </Accordion>\n    <h3>{`Changing the active context`}</h3>\n    <p>{`In case you need your commands to target a different `}<inlineCode parentName=\"p\">{`stp`}</inlineCode>{` context from the one\ncurrently active (as shown by `}<inlineCode parentName=\"p\">{`stp context show`}</inlineCode>{`), you can use the\n`}<inlineCode parentName=\"p\">{`stp context activate`}</inlineCode>{` command.`}</p>\n    <Accordion mdxType=\"Accordion\">\n  <AccordionItem title=\"View video walkthrough\" mdxType=\"AccordionItem\">\n        <Video src=\"/overview/daf876b94bc1e4260a3758bd779f7e31/stp-context-activate.mp4\" mdxType=\"Video\"></Video>\n  </AccordionItem>\n    </Accordion>\n    <h3>{`Renaming a context`}</h3>\n    <p>{`If you created a context without specifying the `}<inlineCode parentName=\"p\">{`--context-name`}</inlineCode>{` flag, you might\nhave ended up with a context whose name is the full URL of the instance. You can\nchange this with `}<inlineCode parentName=\"p\">{`stp context rename`}</inlineCode>{`.`}</p>\n    <Accordion mdxType=\"Accordion\">\n  <AccordionItem title=\"View video walkthrough\" mdxType=\"AccordionItem\">\n        <Video src=\"/overview/3569dec394d63fb98c2f6aa40c2aca50/stp-context-rename.mp4\" mdxType=\"Video\"></Video>\n  </AccordionItem>\n    </Accordion>\n    <h3>{`Deleting a context`}</h3>\n    <p>{`If you no longer need one of the existing contexts, you can remove it with\n`}<inlineCode parentName=\"p\">{`stp context delete`}</inlineCode>{`.`}</p>\n    <Accordion mdxType=\"Accordion\">\n  <AccordionItem title=\"View video walkthrough\" mdxType=\"AccordionItem\">\n        <Video src=\"/overview/b55fe85b63ddbf4937689329ec329e41/stp-context-delete.mp4\" mdxType=\"Video\"></Video>\n  </AccordionItem>\n    </Accordion>\n    <h2>{`Advanced usage`}</h2>\n    <p><inlineCode parentName=\"p\">{`stp`}</inlineCode>{` offers some additional commands for more advanced useDebugValue, such as\ninteracting with stack-wide settings.`}</p>\n    <AnchorLinks small mdxType=\"AnchorLinks\">\n  <AnchorLink mdxType=\"AnchorLink\">Listing available pull secrets</AnchorLink>\n  <AnchorLink mdxType=\"AnchorLink\">Adding an image pull secret</AnchorLink>\n    </AnchorLinks>\n    <h3>{`Listing available pull secrets`}</h3>\n    <p>{`Not all images are available publicly, some may be private and require\nauthentication. When importing or pushing a package with `}<inlineCode parentName=\"p\">{`stp package import`}</inlineCode>{` or\n`}<inlineCode parentName=\"p\">{`stp package push`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`stp`}</inlineCode>{` will check for you if an image pull secret is\navailable for the registries referenced by your PVEP and emit a warning if that\nisn’t the case. To see what image pull secrets are available to use in ST4SD,\nyou can use the `}<inlineCode parentName=\"p\">{`stp stack pull-secrets list`}</inlineCode>{` command.`}</p>\n    <Column colMd={5} colLg={8} mdxType=\"Column\">\n  <Video src=\"/overview/a65c33b77ce40f0ce70351755230da1b/stp-stack-pull-secrets-list.mp4\" mdxType=\"Video\"></Video>\n    </Column>\n    <h3>{`Adding an image pull secret`}</h3>\n    <p>{`If you are working with a private image registry, you will need to ensure ST4SD\nhas credentials to pull the images. To do so, you can use the\n`}<inlineCode parentName=\"p\">{`stp stack pull-secrets add`}</inlineCode>{` command: set a name for the secret with the\n`}<inlineCode parentName=\"p\">{`--name`}</inlineCode>{` flag, pass one or more registries URLs with the `}<inlineCode parentName=\"p\">{`--registry`}</inlineCode>{` flag, and\nthe username with `}<inlineCode parentName=\"p\">{`--username`}</inlineCode>{`. For the password/access token you have two\noptions: either passing it directly via the `}<inlineCode parentName=\"p\">{`-t`}</inlineCode>{` flag, or by writing it in a\nfile and using the `}<inlineCode parentName=\"p\">{`--token-file`}</inlineCode>{` flag (this will prevent leaking the credential\nin your shell history).`}</p>\n    <Column colMd={5} colLg={8} mdxType=\"Column\">\n  <Video src=\"/overview/59686cef3772fcfc12fa6234672a633a/stp-stack-pull-secrets-add.mp4\" mdxType=\"Video\"></Video>\n    </Column>\n    <h2>{`Learn more`}</h2>\n    <div className=\"expressive-content-list-group\">\n  <ExpressiveList title=\"Exploring the Registry UI\" background=\"true\" pictogram={<CarbonForIbmDotcom mdxType=\"CarbonForIbmDotcom\" />} mdxType=\"ExpressiveList\">\n        <p>{`Learn about all the features of\n`}<a parentName=\"p\" {...{\n            \"href\": \"/overview/using-the-virtual-experiments-registry-ui\"\n          }}>{`our web interface`}</a>{` for browsing and\nexamining virtual experiments packages and runs. You can visit the\n`}<a parentName=\"p\" {...{\n            \"href\": \"https://registry.st4sd.res.ibm.com/\"\n          }}>{`ST4SD Global Registry`}</a>{` for a first look.`}</p>\n  </ExpressiveList>\n  <ExpressiveList title=\"No Code, No Fuss creation of Experiments\" background=\"true\" pictogram={<ArtTools_01 mdxType=\"ArtTools_01\" />} mdxType=\"ExpressiveList\">\n        <p>{`Use\n`}<a parentName=\"p\" {...{\n            \"href\": \"/overview/build-experiments-registry-ui\"\n          }}>{`an interactive Build Canvas and a Graph Library`}</a>{`\nto create and modify experiments straight from your browser.`}</p>\n  </ExpressiveList>\n  <ExpressiveList title=\"Use the APIs\" background=\"true\" pictogram={<ServerOperatingSystems mdxType=\"ServerOperatingSystems\" />} mdxType=\"ExpressiveList\">\n        <p><a parentName=\"p\" {...{\n            \"href\": \"/overview/running-workflows-on-openshift\"\n          }}>{`Learn`}</a>{` how to use the ST4SD python client API\nto run, query, and interact with virtual experiments. The APIs also offer access\nto a trove of experiment metadata and files such as logs and outputs. You can\nfind more examples in our Jupyter Notebooks\n`}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/st4sd/st4sd-examples\"\n          }}>{`example repository`}</a>{`.`}</p>\n  </ExpressiveList>\n    </div>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["_frontmatter","makeShortcode","name","props","console","warn","mdx","PageDescription","InlineNotification","AnchorLinks","AnchorLink","Accordion","AccordionItem","Video","Column","ExpressiveList","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","_objectWithoutProperties","_excluded","Object","assign","mdxType","parentName","kind","title","src","small","colMd","colLg","className","background","pictogram","CarbonForIbmDotcom","ArtTools_01","ServerOperatingSystems","isMDXComponent"],"sourceRoot":""}